[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" * Duke is a chatbot application for CS2103T individual project.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    /** The local file path. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    /** The storage instance. */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private static final Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     * Receives input from the user and executes Duke\u0027s actions","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param sc The given scanner instance","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The given task list instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    public static void run(Scanner sc, TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"            int firstWordIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"            String actionText \u003d firstWordIndex \u003d\u003d -1 ? input : input.substring(0, firstWordIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"            Parser.Action action \u003d Parser.getAction(actionText);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"            String rest \u003d input.substring(firstWordIndex + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"                switch (action) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"                case BYE: {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"                    Ui.bye();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"                    storage.writeToTaskTxt(taskList.getTasks());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"                    sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"                    return;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"                case LIST: {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"                    Ui.showTasks(taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"                case DONE: {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"                    try {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"                        int taskNumber \u003d Integer.parseInt(rest);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"                        taskList.markTaskAsDone(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"                        throw new DukeException(\"A number must be given to specified the task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"                case TODO: {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"                    if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"                    Todo temp \u003d new Todo(rest);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"                    taskList.addTask(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"                    Ui.showAddTaskMessage(temp, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"                case DEADLINE: {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"                    if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"                    String[] arr \u003d rest.split(\" /by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"                    if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"                        throw new DukeException(\"/by is needed to specified the time.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"                    String description \u003d arr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"                    String detail \u003d arr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"                    Deadline temp \u003d new Deadline(description, Parser.parseDateTime(detail));","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"                    taskList.addTask(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"                    Ui.showAddTaskMessage(temp, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"                case EVENT: {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"                    if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"                        throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"                    String[] arr \u003d rest.split(\" /at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"                    if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"                        throw new DukeException(\"/at is needed to specified the time.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"                    String description \u003d arr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"                    String detail \u003d arr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"                    Event temp \u003d new Event(description, Parser.parseDateTime(detail));","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"                    taskList.addTask(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"                    Ui.showAddTaskMessage(temp, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"                case DELETE: {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"                    try {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"                        int taskNumber \u003d Integer.parseInt(rest);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"                        Task temp \u003d taskList.removeTask(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"                        Ui.showRemoveTaskMessage(temp, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"                        throw new DukeException(\"A number must be given to specified the task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"                case FIND: {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"                    ArrayList\u003cTask\u003e matchTasks \u003d taskList.findTask(rest);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"                    Ui.showFindTasks(matchTasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"                case UNKNOWN:","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"                Ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"        Ui.greet();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"            TaskList taskList \u003d new TaskList(storage.readFromTaskTxt());","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"            run(sc, taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"            Ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"        } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"            sc.close();","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tsiyuk":123,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":" * This class represents exceptions in duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a DukeException instance using the given errorMessage","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"     * @param errorMessage The given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Returns a error message string.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @return Error message string.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tsiyuk":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":" * The Parser class handles all actions from users\u0027 input.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /** The Action enum enumerates all possible actions. */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    public enum Action {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        BYE, LIST, DONE, TODO, DEADLINE, EVENT, DELETE, FIND, UNKNOWN","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    /** The spliter for the date time. */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public static final String SPLITER \u003d \",\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    /** The date time format. */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    public static final DateTimeFormatter inputDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * Returns an action based on the given input string.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @return An action based on the given string.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    public static Action getAction(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        switch (input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"            return Action.BYE;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"            return Action.LIST;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"            return Action.DONE;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            return Action.TODO;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"            return Action.DEADLINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"            return Action.EVENT;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"            return Action.DELETE;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"            return Action.FIND;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"            return Action.UNKNOWN;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"     * Returns the boolean value based on the input string.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     * @param input String 0 or 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"     * @return False if the string is 0, returns true otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    public static boolean parseIsDone(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        if (input.equals(\"0\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"     * Returns a task based on the given input string from .txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input string from .txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"     * @return A task based on the given input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException If parse fails.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"    public static Task parseDocument(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        String[] array \u003d input.split(SPLITER);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        switch (array[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"        case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"            return new Todo(array[2], parseIsDone(array[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"            return new Event(array[2], parseIsDone(array[1]), parseDateTime(array[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"            return new Deadline(array[2], parseIsDone(array[1]), parseDateTime(array[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Error in saved tasks document\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"     * Returns LocalDateTime instance based on the input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input string whose format follows dd/MM/yyyy HH:mm.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"     * @return A LocalDateTime instance based on the input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"            LocalDateTime ldt \u003d LocalDateTime.parse(input, inputDateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"            return ldt;","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"time should be in the format: DD/MM/YYYY HH:MM\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tsiyuk":105}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":" * This class handles file access.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    /** The path of the .txt file storing task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a storage instance using the given file path.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     * @param filePath The given file path.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * Returns a task list read from the .txt file.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @return A task list read from the .txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public ArrayList\u003cTask\u003e readFromTaskTxt() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"                Task task \u003d Parser.parseDocument(sc.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"            sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"            return tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"            int index \u003d filePath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"            String directoryName \u003d filePath.substring(0, index + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"            File directory \u003d new File(directoryName);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"                directory.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"     * Write the task list to the .txt file","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    public void writeToTaskTxt(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"                String textToAdd \u003d task.toTxtFormat() + System.lineSeparator();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tsiyuk":73}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" * This class contains some common utility methods regrading text ui.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    /** Text UI: horizontal line. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    public static final String HORIZONTAL_LINE \u003d \"  -----------------------\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    /** Text UI: indentation. */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /** Text UI: date time format. */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    public static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * Prints greeting message.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + \"Hello, I am Duke.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + \"What can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     * Prints the given string with horizontal line and indentation.","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     * @param s The given string.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    public static void showMessage(String s) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + s);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"     * Prints add task message and the number of tasks in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     * @param task The task added.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * @param size The number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    public static void showAddTaskMessage(Task task, int size) {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + task.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"            System.out.println(INDENTATION + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"            System.out.println(INDENTATION + \"Now you have \" + size + \" task in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"     * Prints remove task message and the number of tasks in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     * @param task The task removed","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"     * @param size The number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    public static void showRemoveTaskMessage(Task task, int size) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + \"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + task.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"            System.out.println(INDENTATION + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"            System.out.println(INDENTATION + \"Now you have \" + size + \" task in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"     * Prints bye message.","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    public static void bye() {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"     * Prints all the matching tasks in the given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"     * ","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"    public static void showFindTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.INDENTATION + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"            System.out.println(Ui.INDENTATION + \"No matching tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"                System.out.println(Ui.INDENTATION + (i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"     * Prints all the tasks in the given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"     * ","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"    public static void showTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.INDENTATION + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"            System.out.println(Ui.INDENTATION + \"No tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"                System.out.println(Ui.INDENTATION + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tsiyuk":126}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" * This class represents a deadline task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    /** Deadline time of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    private final LocalDateTime deadlineTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a Deadline instance using the given description and deadline time.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @param description  The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param deadlineTime The given deadline time.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public Deadline(String description, LocalDateTime deadlineTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a Deadline instance using the given description, complete state and deadline time.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param description  The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone       The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @param deadlineTime The given deadline time.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadlineTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime.format(Ui.dateTimeFormatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the deadline following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the deadline following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        return \"D\" + Parser.SPLITER + super.toTxtFormat() +","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"                Parser.SPLITER + deadlineTime.format(Parser.inputDateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"     * @param o The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"        if (!super.equals(o)) return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        return super.equals(o) \u0026\u0026 Objects.equals(deadlineTime, deadline.deadlineTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":74}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" * This class represents an event task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    /** Start or end time of the event. */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private final LocalDateTime eventTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     * Constructs an event using the given description and event time.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * @param eventTime   The given event time.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    public Event(String description, LocalDateTime eventTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Constructs an event using the given description, given complete state and event time.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone      The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * @param eventTime   The given event time.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    public Event(String description, boolean isDone, LocalDateTime eventTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventTime.format(Ui.dateTimeFormatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the event following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the event following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        return \"E\" + Parser.SPLITER + super.toTxtFormat()","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"                + Parser.SPLITER + eventTime.format(Parser.inputDateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"     * @param o The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        return super.equals(o) \u0026\u0026 Objects.equals(eventTime, event.eventTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":74}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":" * This class represents a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /** Description of the task. */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    /** State of the task. */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a task instance using the given description.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a task using the given description and complete state.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone      The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        return isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"     * Returns X when the task is done, space otherwise.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     * @return X when the task is done, space otherwise.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the task following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the task following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"        String state \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        return state + Parser.SPLITER + description;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"     * @param o The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 Objects.equals(description, task.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":94}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" * This class manage all the tasks of Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     * List of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a TaskList instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a TaskList instance based on the given task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     * Adds the given task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     * @param task The given task.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     * Removes the task specified by the given index from the list and returns the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"     * @return The removed task.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Task number: \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e(this.tasks);","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     * Returns the size of the tasks list.","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"     * @return The size of the tasks list.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"     * Marks the task specified by the given index as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Task number: \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        Task temp \u003d tasks.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"        tasks.set(index, temp);","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.INDENTATION + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.INDENTATION + temp.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"     * Returns a list of task that matches the query string.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"     * @param query The given query.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"     * @return A list of task that matches the query string.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"    public ArrayList\u003cTask\u003e findTask(String query) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"                result.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":108}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":" * This class represents a todo task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a todo using the given description.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a todo task using the given description and complete state.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone      The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the todo following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the todo following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        return \"T\" + Parser.SPLITER + super.toTxtFormat();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     * @param obj The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d obj) return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            Todo todo \u003d (Todo) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"            return (this.getDescription().equals(todo.getDescription())) \u0026\u0026 (this.isDone() \u003d\u003d todo.isDone());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":64}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    public void testGetAction() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(Parser.Action.LIST, Parser.getAction(\"list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(Parser.Action.DEADLINE, Parser.getAction(\"deadline\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(Parser.Action.UNKNOWN, Parser.getAction(\"blah\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public void testParseIsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(false, Parser.parseIsDone(\"0\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(true, Parser.parseIsDone(\"1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    public void testParseDateTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(LocalDateTime.parse(\"2020-01-20T00:00\"), Parser.parseDateTime(\"20/01/2020 00:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(LocalDateTime.parse(\"2021-12-03T23:59\"), Parser.parseDateTime(\"03/12/2021 23:59\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"            Parser.parseDateTime(\"20/1/2020 00:00\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! time should be in the format: DD/MM/YYYY HH:MM\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    public void testParseDocument() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"                Parser.parseDocument(\"D,0,project,25/08/2021 23:59\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Todo(\"read books\", true), Parser.parseDocument(\"T,1,read books\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"                Parser.parseDocument(\"E,1,meeting,03/12/2021 08:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"            Parser.parseDocument(\"W,0,read books\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! Error in saved tasks document\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tsiyuk":49}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        taskList.addTask(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        taskList.addTask(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        taskList.addTask(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        TaskList taskList \u003d new TaskList(expectedList);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"                taskList.removeTask(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        expectedList.remove(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"            taskList.removeTask(3);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! Task number: 4 does not exist.\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        TaskList taskList \u003d new TaskList(expectedList);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        taskList.markTaskAsDone(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        expectedList.set(1, new Deadline(\"project\", true, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"            taskList.markTaskAsDone(3);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! Task number: 4 does not exist.\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tsiyuk":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"event project meeting /at Mon 2 - 4 pm","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"deadline return book /by Aug 20","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"done 5","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"done 7","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"event meeting","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tsiyuk":21}}]
