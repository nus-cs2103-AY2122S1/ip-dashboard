[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"tsiyuk":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"# User Guide for Hagician","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"Hagician is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"If you can type fast, Hagician can help you manage your tasks than traditional GUI apps.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"## Quick start","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"1. Download the latest `duke.jar` from [here](https://github.com/tsiyuk/ip/releases/tag/v0.2).","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Hagician.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"   ![Ui](Ui.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"1. Type the command in the command box and press Enter to execute it. \u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    * **`list`** : Lists all tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    * **`todo`**`read books` : Adds a todo: read books in the tasks list.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    * **`delete`**`3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    * **`bye`** : Exits the app.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"1. Refer to the [Usage](#Usage) below for details of each command.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"### Add, delete, edit, and list the tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"You are able to add new tasks, delete, edit, and list all the tasks you have added. There are 3 kinds of tasks:","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"* __todo__: tasks with description of what needs to be done.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"* __deadline__: tasks with description and deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"* __event__: tasks with description and happen at a specified time.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"### Mark tasks as done","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"You can mark a task as done, which will be indicated by X at the header.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"### Find tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"You can find all the tasks that contains your query key word.","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"### Clone task","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"You can clone a task in the list and add it to the tail of the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"### **`list`** - List all the tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"List all the tasks already in the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"List all the tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"1. [T][X] buy books","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"2. [D][ ] project (by: 23:59 Sept 08 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"3. [E][ ] meeting (at: 08:00 Oct 10 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"4. [T][ ] return books","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"5. [T][ ] borrow books","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"### **`todo`** - Add a todo task","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"Add a todo task with description of what needs to be done.","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"`todo read books`","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"Add todo `read books` to the task list. And shows you the number of tasks in the task list after the addition.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"[T][] read books","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"Now you have 5 works in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"### **`deadline`** - Add a deadline task","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"Add a deadline task with description and deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"`deadline Lab1 /by 22/09/2021 14:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"Add deadline task `Lab1` with the deadline time `22/09/2021 14:00`. And shows you the number of tasks in the task list after the addition.","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"[D][ ] Lab1 (by: 14:00 Sep 22 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"### **`event`** - Add an event task","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"Add an event task with description and the time when the event will happen.","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"`event team meeting /at 16/09/2021 10:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"Add event task `team meeting` with the time `16/09/2021 10:00`. And shows you the number of tasks in the task list after the addition.","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"[E][ ] team meeting (at: 10:00 Sep 16 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"### **`done`** - Mark a task as done","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"Mark a task specified by the index shown in task list as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"`done 5`","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"Mark the 5th task in the list as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"[T][X] borrow books","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"### **`delete`** - Delete a task","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"Delete a task specified by the index shown in task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"`delete 4`","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"tsiyuk"},"content":"Delete the 4th task in the task list. And shows you the number of tasks in the task list after the deletion.","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"tsiyuk"},"content":"Got it. I\u0027ve removed this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"tsiyuk"},"content":"[T][ ] return books","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"tsiyuk"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"### **`edit`** - Edit an existing task","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"Edit an existing task specified by the index shown in task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"tsiyuk"},"content":"`edit 3 presentation meeting /t 02/10/2021 10:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"tsiyuk"},"content":"Edit the existing 3th event, change it into `presentation meeting` with new time `02/10/2021 10:00`.","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"tsiyuk"},"content":"Got it. Here is the updated task:","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"tsiyuk"},"content":"[E][ ] presentation meeting (at: 10:00 Oct 02 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"tsiyuk"},"content":"### **`find`** - Find tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"tsiyuk"},"content":"Find the tasks whose description contains the query key word provided by the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"tsiyuk"},"content":"`find books`","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"tsiyuk"},"content":"All the tasks whose description contains `books`.","lastModifiedDate":"2021-09-16"},{"lineNumber":173,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":174,"author":{"gitId":"tsiyuk"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":175,"author":{"gitId":"tsiyuk"},"content":"1. [T][X] buy books","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"tsiyuk"},"content":"2. [T][ ] return books","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"tsiyuk"},"content":"3. [T][ ] borrow books","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":180,"author":{"gitId":"tsiyuk"},"content":"### **`clone`** - Clone task","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"tsiyuk"},"content":"Clone the task specified by the index shown in task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":183,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":185,"author":{"gitId":"tsiyuk"},"content":"`clone 2`","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"tsiyuk"},"content":"Clone the task specified by the index shown in task list, and add it to the tail of the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":190,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":191,"author":{"gitId":"tsiyuk"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":192,"author":{"gitId":"tsiyuk"},"content":"[D][ ] project (by: 23:59 Sep 08 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":193,"author":{"gitId":"tsiyuk"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":194,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":195,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":196,"author":{"gitId":"tsiyuk"},"content":"### **`bye`** - Exit","lastModifiedDate":"2021-09-16"},{"lineNumber":197,"author":{"gitId":"tsiyuk"},"content":"Exit the program","lastModifiedDate":"2021-09-16"},{"lineNumber":198,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":199,"author":{"gitId":"tsiyuk"},"content":"__Example of usage:__","lastModifiedDate":"2021-09-16"},{"lineNumber":200,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":201,"author":{"gitId":"tsiyuk"},"content":"`bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":202,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":203,"author":{"gitId":"tsiyuk"},"content":"__Expected outcome:__","lastModifiedDate":"2021-09-16"},{"lineNumber":204,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":205,"author":{"gitId":"tsiyuk"},"content":"Say goodbye exit the program.","lastModifiedDate":"2021-09-16"},{"lineNumber":206,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":207,"author":{"gitId":"tsiyuk"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-16"},{"lineNumber":208,"author":{"gitId":"tsiyuk"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":209,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":210,"author":{"gitId":"tsiyuk"},"content":"## FAQ","lastModifiedDate":"2021-09-16"},{"lineNumber":211,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":212,"author":{"gitId":"tsiyuk"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":213,"author":{"gitId":"tsiyuk"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2021-09-16"},{"lineNumber":214,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":215,"author":{"gitId":"tsiyuk"},"content":"## Command summary","lastModifiedDate":"2021-09-16"},{"lineNumber":216,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":217,"author":{"gitId":"tsiyuk"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-16"},{"lineNumber":218,"author":{"gitId":"tsiyuk"},"content":"--------|------------------","lastModifiedDate":"2021-09-16"},{"lineNumber":219,"author":{"gitId":"tsiyuk"},"content":"**Todo** | `todo DESCRIPTION`\u003cbr\u003e e.g., `todo read books`","lastModifiedDate":"2021-09-16"},{"lineNumber":220,"author":{"gitId":"tsiyuk"},"content":"**Deadline** | `deadline DESCRIPTION /by DD/MM/YYYY HH:MM`\u003cbr\u003e e.g., `deadline Lab1 /by 22/09/2021 14:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":221,"author":{"gitId":"tsiyuk"},"content":"**Event** | `event DESCRIPTION /at DD/MM/YYYY HH:MM`\u003cbr\u003e e.g., `event team meeting /at 16/09/2021 10:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":222,"author":{"gitId":"tsiyuk"},"content":"**Done** | `done INDEX`\u003cbr\u003e e.g., `done 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":223,"author":{"gitId":"tsiyuk"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":224,"author":{"gitId":"tsiyuk"},"content":"**Edit** | `edit INDEX DESCRIPTION [/t DD/MM/YYYY HH:MM]`\u003cbr\u003e e.g.,`edit 3 presentation meeting /t 02/10/2021 10:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":225,"author":{"gitId":"tsiyuk"},"content":"**Find** | `find KEYWORD`\u003cbr\u003e e.g., `find books`","lastModifiedDate":"2021-09-16"},{"lineNumber":226,"author":{"gitId":"tsiyuk"},"content":"**List** | `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":227,"author":{"gitId":"tsiyuk"},"content":"**Clone** | `clone INDEX`\u003cbr\u003e e.g., `clone 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":228,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":229,"author":{"gitId":"tsiyuk"},"content":"Notes about the command format:","lastModifiedDate":"2021-09-16"},{"lineNumber":230,"author":{"gitId":"tsiyuk"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":231,"author":{"gitId":"tsiyuk"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"tsiyuk":203,"-":28}},{"path":"src/main/java/duke/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"/** The Action enum enumerates all possible actions. */","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"public enum Action {","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"    BYE, LIST, DONE, TODO, DEADLINE, EVENT, DELETE, FIND, EDIT, CLONE, UNKNOWN","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" * Duke is a chatbot application for CS2103T individual project.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    /** The local file path. */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    private static final String filePath \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    /** The storage instance. */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /** The task list. */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a duke instance.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        taskList \u003d new TaskList(storage.readFromTaskTxt());","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * Receives input from the user and executes Duke\u0027s actions","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param sc       The given scanner instance","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    public void run(Scanner sc) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        Ui.greet();","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        while (!isExit \u0026\u0026 sc.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"                Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"                command.executeAndShow(taskList, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"                Ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     * Executes the main method.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * @param args the given args.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        new Duke().run(sc);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        sc.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result string based on the given input.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            String message \u003d command.execute(taskList, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"            return new Response(message, command.isExit());","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"            return new Response(e.getMessage(), false);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tsiyuk":67,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":" * This class represents exceptions in duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a DukeException instance using the given errorMessage","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"     * @param errorMessage The given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Returns a error message string.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @return Error message string.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tsiyuk":25}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import duke.command.CloneCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import duke.command.EditCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import duke.command.SetCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"import duke.command.ShowCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":" * The Parser class handles all actions from users\u0027 input.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    /** The spliter for the date time. */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    public static final String SPLITER \u003d \",\";","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /** The date time format. */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    public static final DateTimeFormatter INPUT_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * Returns an action based on the given input string.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     * @return An action based on the given string.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    public static Action getAction(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        switch (input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"            return Action.BYE;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            return Action.LIST;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"            return Action.DONE;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"            return Action.TODO;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"            return Action.DEADLINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"            return Action.EVENT;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"            return Action.DELETE;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"            return Action.FIND;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        case \"edit\":","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"            return Action.EDIT;","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        case \"clone\":","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            return Action.CLONE;","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            return Action.UNKNOWN;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"     * Returns the boolean value based on the input string.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     * @param input String 0 or 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"     * @return False if the string is 0, returns true otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    public static boolean parseIsDone(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        if (input.equals(\"0\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"     * Returns a task based on the given input string from .txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input string from .txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"     * @return A task based on the given input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException If parse fails.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    public static Task parseDocument(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"        String[] array \u003d input.split(SPLITER);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"        switch (array[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"        case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"            assert array.length \u003d\u003d 3 : \"Parse todo document fails\";","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"            return new Todo(array[2], parseIsDone(array[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"            assert array.length \u003d\u003d 4 : \"Parse event document fails\";","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"            return new Event(array[2], parseIsDone(array[1]), parseDateTime(array[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"        case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"            assert array.length \u003d\u003d 4 : \"Parse deadline document fails\";","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"            return new Deadline(array[2], parseIsDone(array[1]), parseDateTime(array[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"            String errorMessage \u003d \"Error in saved tasks document: \" + input;","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"     * Returns LocalDateTime instance based on the input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input string whose format follows dd/MM/yyyy HH:mm.","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"     * @return A LocalDateTime instance based on the input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"            LocalDateTime ldt \u003d LocalDateTime.parse(input, INPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"            return ldt;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"time should be in the format: DD/MM/YYYY HH:MM\");","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"     * Returns a command based on the given input.","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input.","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"     * @return A command.","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException When parse exception happens.","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"    public static Command parseCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"        int firstWordIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"tsiyuk"},"content":"        String actionText \u003d firstWordIndex \u003d\u003d -1 ? input : input.substring(0, firstWordIndex);","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"        Action action \u003d Parser.getAction(actionText);","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"        String rest \u003d input.substring(firstWordIndex + 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"tsiyuk"},"content":"        switch (action) {","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"tsiyuk"},"content":"        case BYE: {","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"            return new ExitCommand(Action.BYE);","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"        case LIST: {","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"            return new ShowCommand(Action.LIST);","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"        case DONE: {","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"tsiyuk"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"tsiyuk"},"content":"                int taskNumber \u003d Integer.parseInt(rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"tsiyuk"},"content":"                return new SetCommand(Action.DONE, taskNumber - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"tsiyuk"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"A number must be given to specified the task.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"tsiyuk"},"content":"        case TODO: {","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"tsiyuk"},"content":"            if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"            return new AddCommand(Action.TODO, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"tsiyuk"},"content":"        case DEADLINE: {","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"tsiyuk"},"content":"            if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"tsiyuk"},"content":"            return new AddCommand(Action.DEADLINE, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"tsiyuk"},"content":"        case EVENT: {","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"tsiyuk"},"content":"            if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"tsiyuk"},"content":"            return new AddCommand(Action.EVENT, rest);","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"tsiyuk"},"content":"        case DELETE: {","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"tsiyuk"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"tsiyuk"},"content":"                int taskNumber \u003d Integer.parseInt(rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"tsiyuk"},"content":"                return new DeleteCommand(Action.DELETE, taskNumber - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"tsiyuk"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"A number must be given to specified the task.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"tsiyuk"},"content":"        case FIND: {","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"tsiyuk"},"content":"            return new FindCommand(Action.FIND, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"tsiyuk"},"content":"        case EDIT: {","lastModifiedDate":"2021-09-08"},{"lineNumber":175,"author":{"gitId":"tsiyuk"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":176,"author":{"gitId":"tsiyuk"},"content":"                int indexOfSpace \u003d rest.indexOf(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"tsiyuk"},"content":"                String num \u003d rest.substring(0, indexOfSpace);","lastModifiedDate":"2021-09-08"},{"lineNumber":178,"author":{"gitId":"tsiyuk"},"content":"                String info \u003d rest.substring(indexOfSpace + 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"tsiyuk"},"content":"                int taskNumber \u003d Integer.parseInt(num);","lastModifiedDate":"2021-09-08"},{"lineNumber":180,"author":{"gitId":"tsiyuk"},"content":"                return new EditCommand(Action.EDIT, taskNumber - 1, info);","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"tsiyuk"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":182,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"A number must be given to specified the task.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":183,"author":{"gitId":"tsiyuk"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"Please provide more information to edit the task.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":185,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":186,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":187,"author":{"gitId":"tsiyuk"},"content":"        case CLONE: {","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"tsiyuk"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":189,"author":{"gitId":"tsiyuk"},"content":"                int taskNumber \u003d Integer.parseInt(rest);","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"tsiyuk"},"content":"                return new CloneCommand(taskNumber - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"tsiyuk"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":192,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"A number must be given to specified the task.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":193,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":194,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":195,"author":{"gitId":"tsiyuk"},"content":"        case UNKNOWN:","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"tsiyuk"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"tsiyuk"},"content":"            return null;","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":202,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":203,"author":{"gitId":"tsiyuk"},"content":"     * Returns the edit command info based on the given input.","lastModifiedDate":"2021-09-08"},{"lineNumber":204,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":205,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given input.","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"tsiyuk"},"content":"     * @return The edit command info based on the given input.","lastModifiedDate":"2021-09-08"},{"lineNumber":207,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":208,"author":{"gitId":"tsiyuk"},"content":"    public static String[] parseEditInfo(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":209,"author":{"gitId":"tsiyuk"},"content":"        String[] arr;","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"tsiyuk"},"content":"        if (input.contains(\"/t\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":211,"author":{"gitId":"tsiyuk"},"content":"            arr \u003d input.indexOf(\"/t\") !\u003d 0 ? input.split(\" /t \") : input.split(\"/t \");","lastModifiedDate":"2021-09-16"},{"lineNumber":212,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":213,"author":{"gitId":"tsiyuk"},"content":"            arr \u003d new String[]{input};","lastModifiedDate":"2021-09-08"},{"lineNumber":214,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":215,"author":{"gitId":"tsiyuk"},"content":"        return arr;","lastModifiedDate":"2021-09-08"},{"lineNumber":216,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":217,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tsiyuk":217}},{"path":"src/main/java/duke/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":" * This class represents the response from duke to gui.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"public class Response {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"    private String message;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"    private boolean isExit;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a response instance using the given message and is exit state.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     * @param message The given message.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"     * @param isExit The given is exit state.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    public Response(String message, boolean isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * Returns the message.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     * @return The message.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"        return this.message;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * Returns the is exit state.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * @return The is exit state.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        return this.isExit;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":38}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":" * This class handles file access.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /** The path of the .txt file storing task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a storage instance using the given file path.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * @param filePath The given file path.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Returns a task list read from the .txt file.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @return A task list read from the .txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    public ArrayList\u003cTask\u003e readFromTaskTxt() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"                Task task \u003d Parser.parseDocument(sc.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"            return tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"            int index \u003d filePath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"            String directoryName \u003d filePath.substring(0, index + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"            File directory \u003d new File(directoryName);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"                directory.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"     * Writes the task list to the .txt file","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    public void writeToTaskTxt(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"                String textToAdd \u003d task.toTxtFormat() + System.lineSeparator();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tsiyuk":72}},{"path":"src/main/java/duke/StringUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":" * This class contains some common utility methods regrading string.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"public class StringUtils {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string contains adding task message.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"     * @param task The given task.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"     * @return A string contains adding task message.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    public static String getAddTasKMessage(Task task, int size) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        result +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"            result +\u003d (\"Now you have \" + size + \" tasks in the list.\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"            result +\u003d (\"Now you have \" + size + \" task in the list.\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string contains removing task message.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @param task The given task.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     * @return A string contains removing task message.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    public static String getRemoveTaskMessage(Task task, int size) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        String result \u003d \"Got it. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        result +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"            result +\u003d (\"Now you have \" + size + \" tasks in the list.\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            result +\u003d (\"Now you have \" + size + \" task in the list.\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of all the tasks in the given task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of all the tasks in the given task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    public static String getTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"            result +\u003d \"No tasks\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"                result +\u003d ((i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of all the matching tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of all the tasks in the given task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    public static String getSearchMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"            result +\u003d \"No matching tasks\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"                result +\u003d ((i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"     * Returns a String representation of the updated task.","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"     * @param task The updated task.","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"     * @return A String representation of the updated task.","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"    public static String getEditMessage(Task task) {","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"        StringBuffer result \u003d new StringBuffer(\"Got it. Here is the updated task:\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"        result.append(task.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"        result.append(\"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"        return result.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"     * Returns the welcome message.","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"     * @return The welcome message.","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"        return \"Hello, I am Hagician\\nWhat can I do for you?\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":104}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":" * This class contains some common utility methods regrading text ui.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    /** Text UI: horizontal line. */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"    public static final String HORIZONTAL_LINE \u003d \"  -----------------------\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /** Text UI: indentation. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    /** Text UI: date time format. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Prints greeting message.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + \"Hello, I am Hagician.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + \"What can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     * Prints the given string with horizontal line and indentation.","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * @param s The given string.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    public static void showMessage(String s) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(INDENTATION + s);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     * Prints multilines message in the console.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     * @param input The given multiline message.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"    public static void showMultiLines(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        String[] strings \u003d input.split(\"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        for (String string : strings) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"            if (!string.equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"                System.out.println(Ui.INDENTATION + string);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        System.out.println(Ui.HORIZONTAL_LINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tsiyuk":52}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.StringUtils;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private final String info;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     * Constructs an AddCommand instance using the given action and info.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * @param info The given info.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    public AddCommand(Action action, String info) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        super(action);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        this.info \u003d info;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Executes the command and prints the result in console.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @param storage The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMultiLines(execute(taskList, storage));","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the add command.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        assert super.getAction() \u003d\u003d Action.TODO || super.getAction() \u003d\u003d Action.DEADLINE","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"                || super.getAction() \u003d\u003d Action.EVENT : \"Add command action type error\";","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        switch (super.getAction()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        case TODO: {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"            Todo temp \u003d new Todo(info);","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"            taskList.addTask(temp);","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"            return StringUtils.getAddTasKMessage(temp, taskList.getSize());","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        case DEADLINE: {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"            String[] arr \u003d info.split(\" /by \");","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"/by is needed to specified the time.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"            String description \u003d arr[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"            String detail \u003d arr[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            Deadline temp \u003d new Deadline(description, Parser.parseDateTime(detail));","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            taskList.addTask(temp);","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"            return StringUtils.getAddTasKMessage(temp, taskList.getSize());","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"        case EVENT: {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"            String[] arr \u003d info.split(\" /at \");","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"/at is needed to specified the time.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"            String description \u003d arr[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"            String detail \u003d arr[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"            Event temp \u003d new Event(description, Parser.parseDateTime(detail));","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"            taskList.addTask(temp);","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"            return StringUtils.getAddTasKMessage(temp, taskList.getSize());","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Error: wrong action type for add command\");","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":82}},{"path":"src/main/java/duke/command/CloneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.StringUtils;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"public class CloneCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private final int index;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a clone command using the given index.\\","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public CloneCommand(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        super(Action.CLONE, false);","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * Executes the command and prints the result in console.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMultiLines(execute(taskList, storage));","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the command.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException When cloning a invalid task.","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        Task target \u003d taskList.getTask(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        Task temp;","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        if (target instanceof Todo) {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"            temp \u003d new Todo(target.getDescription());","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"            taskList.addTask(temp);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        } else if (target instanceof Event) {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"            Event e \u003d (Event) target;","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"            temp \u003d new Event(e.getDescription(), e.getEventTime());","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"            taskList.addTask(temp);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        } else if (target instanceof Deadline) {","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            Deadline d \u003d (Deadline) target;","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"            temp \u003d new Deadline(d.getDescription(), d.getDeadlineTime());","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            taskList.addTask(temp);","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Clone a invalid task!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        return StringUtils.getAddTasKMessage(temp, taskList.getSize());","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"tsiyuk":66}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"    private final Action action;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a command instance using the given action and set isExit to false.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    public Command(Action action) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a command instance using the given action and isExit state.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     * @param isExit The given isExit state.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    public Command(Action action, boolean isExit) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * Returns the isExit status.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     * @return The isExit status.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        return isExit;","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     * Returns the action of the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     * @return The action of the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    public Action getAction() {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        return action;","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     * Executes the command and prints the result in console.","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"     * @param storage The local storage of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    public abstract void executeAndShow(TaskList taskList, Storage storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"     * @param storage The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    public abstract String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":66}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.StringUtils;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /** The index of the task in the list. */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    private final int index;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a delete command using the given action and index.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    public DeleteCommand(Action action, int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        super(action);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"     * Deletes the task specified by the index in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMultiLines(execute(taskList, storage));","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the delete command.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        assert super.getAction() \u003d\u003d Action.DELETE : \"Delete command action type error\";","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        Task temp \u003d taskList.removeTask(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        return StringUtils.getRemoveTaskMessage(temp, taskList.getSize());","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":49}},{"path":"src/main/java/duke/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.StringUtils;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    /** The index of the task. */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    private final int index;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    /** The new description */","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    private final String description;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * Constructs an edit command using the given index and new description.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action type.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given new description.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    public EditCommand(Action action, int index, String description) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        super(action, false);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     * Executes the command and prints the result in console.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMultiLines(execute(taskList, storage));","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the command.","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        Task temp \u003d taskList.getTask(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        if (description.contains(\"/t\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"            if (temp instanceof Deadline) {","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"                Deadline d \u003d (Deadline) temp;","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"                String[] arr \u003d Parser.parseEditInfo(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"                assert arr.length \u003d\u003d 2 : \"Parse edit info error\";","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"                d.setDeadlineTime(Parser.parseDateTime(arr[1]));","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"                if (!arr[0].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"                    d.setDescription(arr[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"                return StringUtils.getEditMessage(d);","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"            } else if (temp instanceof Event) {","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"                Event e \u003d (Event) temp;","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"                String[] arr \u003d Parser.parseEditInfo(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"                assert arr.length \u003d\u003d 2 : \"Parse edit info error\";","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"                e.setEventTime(Parser.parseDateTime(arr[1]));","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"                if (!arr[0].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"                    e.setDescription(arr[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"                return StringUtils.getEditMessage(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"            } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"                throw new DukeException(\"Todo task do not have a time\");","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"            temp.setDescription(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"            return StringUtils.getEditMessage(temp);","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"tsiyuk":82}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"     * Constructs an exit command using the given action and set isExit to true.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    public ExitCommand(Action action) {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"        super(action, true);","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * Exit the current process.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * @param storage The local storage of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMessage(execute(taskList, storage));","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the exit command.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        assert super.getAction() \u003d\u003d Action.BYE : \"Exit command action type error\";","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        storage.writeToTaskTxt(taskList.getTasks());","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":42}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.StringUtils;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    /** The query from the user */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    private String query;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a find command using the given action and query.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param query The given query.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public FindCommand(Action action, String query) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        super(action);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        this.query \u003d query;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * Finds all the tasks match the query.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMultiLines(execute(taskList, storage));","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the find command.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        assert super.getAction() \u003d\u003d Action.FIND : \"Find command action type error\";","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e matchTasks \u003d taskList.findTask(query);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        return StringUtils.getSearchMessage(matchTasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":51}},{"path":"src/main/java/duke/command/SetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    /** The index of the task in the list. */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"    private final int index;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a set command using the given action and index.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    public SetCommand(Action action, int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"        super(action);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     * Sets the task specified by the index to a new task.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMultiLines(taskList.markTaskAsDone(index));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        assert super.getAction() \u003d\u003d Action.DONE : \"Set command action type error\";","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        return taskList.markTaskAsDone(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":46}},{"path":"src/main/java/duke/command/ShowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Action;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.StringUtils;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a show command instance using the given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"     * @param action The given action.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    public ShowCommand(Action action) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        super(action);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    public void executeAndShow(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        Ui.showMultiLines(execute(taskList, storage));","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * Returns the result of executing the show command.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     * @param taskList The task list of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     * @param storage  The local storage of duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the result.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        assert super.getAction() \u003d\u003d Action.LIST : \"Show command action type error\";","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        return StringUtils.getTaskList(taskList.getTasks());","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"tsiyuk":43}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    private Circle displayPicture;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        dialog.setPadding(new Insets(10));","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        this.setSpacing(10);","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    private void setBackgroundColor(Color color) {","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        CornerRadii radii \u003d new CornerRadii(10);","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        dialog.setBackground(new Background(new BackgroundFill(color, radii, Insets.EMPTY)));","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"        db.setBackgroundColor(Color.LIGHTBLUE);","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"        return db;","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"        db.setBackgroundColor(Color.LIGHTGREEN);","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":79}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import duke.Response;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.StringUtils;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user_icon.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/frog_magician.jpg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * Initializes the main window.","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"                DialogBox.getDukeDialog(StringUtils.getWelcomeMessage(), dukeImage));","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        Response r \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        String response \u003d r.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        isExit \u003d r.isExit();","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        if (isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":66}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" * This class represents a deadline task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    /** Deadline time of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a Deadline instance using the given description and deadline time.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @param description  The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param deadlineTime The given deadline time.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public Deadline(String description, LocalDateTime deadlineTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a Deadline instance using the given description, complete state and deadline time.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param description  The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone       The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @param deadlineTime The given deadline time.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadlineTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    public void setDeadlineTime(LocalDateTime deadlineTime) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    public LocalDateTime getDeadlineTime() {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        return this.deadlineTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime.format(Ui.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the deadline following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the deadline following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        return \"D\" + Parser.SPLITER + super.toTxtFormat()","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"                + Parser.SPLITER + deadlineTime.format(Parser.INPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"     * @param o The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"        return super.equals(o) \u0026\u0026 Objects.equals(deadlineTime, deadline.deadlineTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":88}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" * This class represents an event task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    /** Start or end time of the event. */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    private LocalDateTime eventTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Constructs an event using the given description and event time.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * @param eventTime   The given event time.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public Event(String description, LocalDateTime eventTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     * Constructs an event using the given description, given complete state and event time.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone      The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * @param eventTime   The given event time.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public Event(String description, boolean isDone, LocalDateTime eventTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    public void setEventTime(LocalDateTime eventTime) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    public LocalDateTime getEventTime() {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        return this.eventTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventTime.format(Ui.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the event following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the event following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        return \"E\" + Parser.SPLITER + super.toTxtFormat()","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"                + Parser.SPLITER + eventTime.format(Parser.INPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"     * @param o The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"        return super.equals(o) \u0026\u0026 Objects.equals(eventTime, event.eventTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":85}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":" * This class represents a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /** Description of the task. */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    private String description;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    /** State of the task. */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a task instance using the given description.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a task using the given description and complete state.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone      The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        return isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     * Returns X when the task is done, space otherwise.","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     * @return X when the task is done, space otherwise.","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the task following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the task following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        String state \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        return state + Parser.SPLITER + description;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"     * @param o The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 Objects.equals(description, task.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":102}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":" * This class manage all the tasks of Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     * List of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a TaskList instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a TaskList instance based on the given task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * Adds the given task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     * @param task The given task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     * Removes the task specified by the given index from the list and returns the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"     * @return The removed task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Task number: \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e(this.tasks);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"     * Returns the task specified by the given index.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"     * @return The task specified by the given index.","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Task number: \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"     * Returns the size of the tasks list.","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"     * @return The size of the tasks list.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"     * Returns the string of mark message and","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"     * Marks the task specified by the given index as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"     * @return The string representation of marking as done result.","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"    public String markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Task number: \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"        Task temp \u003d tasks.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"        StringBuffer result \u003d new StringBuffer();","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"        if (temp.isDone()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"            result.append(\"Haha! The task has been marked as done before\");","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"            return result.toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"            temp.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"            tasks.set(index, temp);","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"            result.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"            result.append(temp.toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"            return result.toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"     * Returns a list of task that matches the query string.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"     * @param query The given query.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"     * @return A list of task that matches the query string.","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"    public ArrayList\u003cTask\u003e findTask(String query) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"                result.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"tsiyuk"},"content":"     * Sets the task specified by the given index to the given new task.","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"     * @param newTask The given new task.","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"     * @param index The given index.","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"    public void setTask(Task newTask, int index) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"tsiyuk"},"content":"            throw new DukeException(\"Task number: \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"tsiyuk"},"content":"        this.tasks.set(index, newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":142}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":" * This class represents a todo task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a todo using the given description.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a todo task using the given description and complete state.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * @param description The given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone      The given complete state.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * Returns a string representation of the todo following .txt format.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     * @return A string representation of the todo following .txt format.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    public String toTxtFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        return \"T\" + Parser.SPLITER + super.toTxtFormat();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     * @param obj The given object.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     * @return True if the given object is equal to this, otherwise false.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            Todo todo \u003d (Todo) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"            return (this.getDescription().equals(todo.getDescription())) \u0026\u0026 (this.isDone() \u003d\u003d todo.isDone());","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsiyuk":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" pickOnBounds\u003d\"true\" radius\u003d\"35\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.141\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tsiyuk":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    public void testGetAction() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(Action.LIST, Parser.getAction(\"list\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(Action.DEADLINE, Parser.getAction(\"deadline\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(Action.UNKNOWN, Parser.getAction(\"blah\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    public void testParseIsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(false, Parser.parseIsDone(\"0\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(true, Parser.parseIsDone(\"1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    public void testParseDateTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(LocalDateTime.parse(\"2020-01-20T00:00\"), Parser.parseDateTime(\"20/01/2020 00:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(LocalDateTime.parse(\"2021-12-03T23:59\"), Parser.parseDateTime(\"03/12/2021 23:59\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"            Parser.parseDateTime(\"20/1/2020 00:00\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! time should be in the format: DD/MM/YYYY HH:MM\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    public void testParseDocument() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"                Parser.parseDocument(\"D,0,project,25/08/2021 23:59\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Todo(\"read books\", true), Parser.parseDocument(\"T,1,read books\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"                Parser.parseDocument(\"E,1,meeting,03/12/2021 08:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"            Parser.parseDocument(\"W,0,read books\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! Error in saved tasks document\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tsiyuk":50}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        taskList.addTask(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"        taskList.addTask(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        taskList.addTask(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        TaskList taskList \u003d new TaskList(expectedList);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"                taskList.removeTask(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        expectedList.remove(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            taskList.removeTask(3);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! Task number: 4 does not exist.\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Todo(\"read books\", false));","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Deadline(\"project\", false, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        expectedList.add(new Event(\"meeting\", true, LocalDateTime.parse(\"2021-12-03T08:00\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        TaskList taskList \u003d new TaskList(expectedList);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        taskList.markTaskAsDone(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        expectedList.set(1, new Deadline(\"project\", true, LocalDateTime.parse(\"2021-08-25T23:59\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedList, taskList.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            taskList.markTaskAsDone(3);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(\"OOPS!!! Task number: 4 does not exist.\", exception.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tsiyuk":62}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"event project meeting /at Mon 2 - 4 pm","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"deadline return book /by Aug 20","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"done 5","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"done 7","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"event meeting","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tsiyuk":21}}]
