[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"\u003cimg align\u003d\"left\" height\u003d\"155\" width\u003d\"155\" src\u003d\"src/main/resources/images/bird.png\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"# Augury","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"#### Task management app for organized minds üê§","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"[![Latest release](https://badgen.net/github/release/qreoct/ip)](https://github.com/qreoct/ip/releases)","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"[![Java CI](https://github.com/qreoct/ip/actions/workflows/gradle.yml/badge.svg)](https://github.com/qreoct/ip/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"---","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"- [What is Augury?](#what-is-augury)","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"- [Download and Usage](#download-and-usage)","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"- [Development](#development)","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"---","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"## What is Augury?","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"Augury is a task-management application built for CS2103T - Software Engineering, as part of the Individual Project (IP).","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"Much like a certain (very dead) [Prince of Denmark](https://www.youtube.com/watch?v\u003dEHUZ1_cxdyw), indecision is a common source of downfall for us humans.","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"Turn your future tasks into omens of good fortune, today!","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"\u003eHold Infinity in the palm of your hand","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"\u003e ","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"\u003eAnd Eternity in an hour.","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"\u003e ‚Äî William Blake","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"  ![App screenshot](docs/Ui-2.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"## Features","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"### 1. **Customizable UI built with JavaFX**","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"![Themes](docs/Ui-themes.gif)","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"   ","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"Love customization? Augury is fully responsive, supporting fullscreen and windows of various sizes.","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"Switch between your favourite colour themes within the app!","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"This was my first time working on JavaFX, and I sought to create the best UI I could.","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"Overall, it was a great learning experience.","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"### 2. **Persistent data storage** ","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"   ","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"You no longer have to be afraid of losing your data, or worry about transferring data to another device!","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"Augury automatically saves your tasks in plaintext files (in the `data/tasks.txt` directory), so you can easily export to other formats.","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"### 3. **Command Line Interface for CLI lovers**","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"   ","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"![CLI](docs/Ui-cli.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"Are you a power user who loves the terminal?","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"Simply run Augury with the flag `-mode console` to launch the CLI mode!","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"### 4. **Cross-platform**","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"![Cross platform](docs/Ui-platforms.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"   ","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"Augury runs smoothly on Windows, Linux and MacOS systems!","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"### 5. **Automated Unit Testing and Github Continuous Integration**","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"   ","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"Unit tests were written using JUnit in order to test the individual parts of the code.","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"Gradle is used in conjunction with Github Continuous Integration (CI) to ensure tests run properly every commit.","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"### 6. **Fast and intuitive task management** ","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"Augury provides a super-intuitive way to manage your tasks -- just create a task, include the relevant details, and mark as done once completed!","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"Additional features included:","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"- **Search** - Blazing fast search to find tasks, with clever built-in search filters.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"- **Batch operations** - Delete or Mark multiple tasks at once!","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"- **Manage date \u0026 time** - Create Deadline or Event tasks that have a time associated with them!","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"- **Command aliases** - Less keystrokes to type, more time for productivity!","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"Check out the [full features included with Augury](docs/README.md)!","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"## Download and Usage","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"Cross-platform JAR of Augury can be downloaded [here](https://github.com/qreoct/ip/releases).","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"Launch Augury by double-clicking the .jar file, or run `java -jar duke.jar -mode console` to run Augury in console mode. ","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"### Using Augury","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"Here are some commands to get you started. For more information, read the [User Guide](docs/README.md).","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"#### `todo \u003cdescription\u003e` - Create new todo task","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"![Todo Feature](docs/Feature-todo.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"#### `list` - Show all tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"![List Feature](docs/Feature-list.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"#### `done \u003ctasknumber\u003e` - Mark task as done","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"![Done Feature](docs/Feature-done.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"## Development","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"**Prerequisites**","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"- Java 11.0.9","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"- Fork this repository to your GitHub account and clone the fork to your computer","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"  ","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"**Running Augury**","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"- Open the `ip` directory as a Project file in your IDE of choice","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"- Java source code is found in `ip/src/main/java/duke`","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"- Running `Launcher.java` with CLI arguments `-mode console` starts Augury in CLI mode","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"- Running `Launcher.java` without CLI arguments starts Augury in GUI mode","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"- Unit tests are located in the `ip/src/test/java/duke` directory","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"qreoct"},"content":"**Contributing**","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"qreoct"},"content":"- Augury is open source, and any feedback or pull requests are welcome üòä","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"qreoct"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"qreoct"},"content":"- [Pigeon image](https://www.irasutoya.com/2018/01/blog-post_419.html) from [Irastoya](https://www.irasutoya.com/p/terms.html)","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"qreoct"},"content":"- [Windy Cloudy Icon](https://www.s-ings.com/typicons/) from Typicons ","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"qreoct"},"content":"- Themes are based off [Hundred Rabbits\u0027 Theme Framework](https://github.com/hundredrabbits/Themes).","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"qreoct":116}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qreoct":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"\u003cimg align\u003d\"left\" height\u003d\"119\" width\u003d\"119\" src\u003d\"https://raw.githubusercontent.com/qreoct/ip/master/src/main/resources/images/bird.png\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"# Augury User Guide","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"*Jefferson LIM ([@qreoct](https://github.com/qreoct))*","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"![Augury](Ui-2.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"Augury is a task-management app for organized minds üê§","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"Track your todos, events, and deadlines, through your choice of CLI or GUI!","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"---","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"- [Usage](#usage)","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"- [GUI Specific Features](#gui-specific-features)","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"---","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"### Creating Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"In Augury, there are 3 different types of tasks you can create.","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"- Todos","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"- Events","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"- Deadlines","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"**Todos**","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"**Todos** are basic tasks that have a **description** and **completion status**.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"They are represented with `[T]` in the app.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"**Events**","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"**Events** are tasks that happen at a specific time.","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"Events contain a **description**, **completion status**, and the **time**.","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"They are represented with `[E]` in the app.","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"**Deadlines**","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"**Deadlines** are tasks that have to be completed by a specific time.","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"Deadlines contain a **description**, **completion status**, and the **time**.","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"They are represented with `[D]` in the app.","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"![Tasks](Feature-list2.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"### Command Line Interface","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"Prefer to be working in your terminal instead? Augury comes with a CLI mode!","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"Simply run the application using `java -jar duke.jar -mode console` and enjoy the experience!","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"![CLI](Ui-cli.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"### `todo` - Create a new Todo","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"A Todo is added to your list of tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `todo [description]`","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"**Example usage:** ","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"`todo set mousetraps`","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":" I\u0027ve added your todo:","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"        [T][ ] set mousetraps","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":" 1 task in total.","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"### `event` - Create a new Event","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"An Event is added to your list of tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `event [description] /at [time]`","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"`time` follows the format `YYYY-MM-DD HHMM`","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"**Example usage:**","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"`event catch the conscience of the king /at 2021-11-28 2100`","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":" I\u0027ve added your event:","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"        [E][ ] catch the conscience of the king (at: 28 Nov 2021, Sun, 21:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":" 1 task in total.","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"### `deadline` - Create a new Deadline","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"A Deadline is added to your list of tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `deadline [description] /by [time]`","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"`time` follows the format `YYYY-MM-DD HHMM`","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"**Example usage:**","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"`deadline shuffle off the mortal coil /by 2021-12-31 2359`","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"qreoct"},"content":" I\u0027ve added your event:","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"qreoct"},"content":"        [D][ ] shuffle off the mortal coil (at: 31 Dec 2021, Fri, 23:59)","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"qreoct"},"content":" 1 task in total.","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"qreoct"},"content":"### `list` - View all tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"qreoct"},"content":"Prints out all tasks in your task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `list`","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"qreoct"},"content":"**Example usage:**","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"qreoct"},"content":"`list`","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"qreoct"},"content":" Here are your tasks:","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"qreoct"},"content":" 1. [T][ ] set mousetraps","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"qreoct"},"content":" 2. [E][ ] catch the conscience of the king (at: 28 Nov 2021, Sun, 21:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"qreoct"},"content":" 3. [E][ ] shuffle off the mortal coil (at: 31 Dec 2021, Fri, 23:59)","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"qreoct"},"content":"**Command aliases:** `ls`, `l`","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"qreoct"},"content":"### `find` - Search for tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"qreoct"},"content":"Search for all tasks matching a search query.","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `find (status) (time) (type) (query)`","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"qreoct"},"content":"Arguments are optional, but at least one is required.","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"qreoct"},"content":"Including multiple arguments will filter the search to match all the arguments provided.","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"qreoct"},"content":"`status` represents whether tasks are done. Either `[X]` for done or `[]` for not done.","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"qreoct"},"content":"`time` represents the *date* of tasks. Use `YYYY-MM-DD` format.","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"qreoct"},"content":"`type` represents the *type* of tasks. One of `[T]` (Todo), `[E]` (Event), `[D]` (Deadline).","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"qreoct"},"content":"`query` is a single word that you want to search for in the task description.","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"qreoct"},"content":"**Example usage:**","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"qreoct"},"content":"The following searches will return the same result:","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"qreoct"},"content":"- `find 2021-12-31`","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"qreoct"},"content":"- `find [] coil`","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"qreoct"},"content":"- `find mortal [E]`","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"qreoct"},"content":"- `f shuffle 2021-12-31 [E] []`","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"qreoct"},"content":"Your search matched these tasks:","lastModifiedDate":"2021-09-14"},{"lineNumber":166,"author":{"gitId":"qreoct"},"content":" [E][ ] shuffle off the mortal coil (at: 31 Dec 2021, Fri, 23:59)","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"qreoct"},"content":"**Command aliases:** `f`","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"qreoct"},"content":"### `sort` - Sorts the tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"qreoct"},"content":"Sorts the tasks according to a given sort method.","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `sort [option]`","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"qreoct"},"content":"If `option` is left out, sort will use the default method, which is `Lexicographic (ascending)`.","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"qreoct"},"content":"`option` is a number from `0` to `6`.","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"qreoct"},"content":"**Sort options:**","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"qreoct"},"content":"Value | Sort method","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"qreoct"},"content":"---|---","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"qreoct"},"content":"`0` | Lexicographic (ascending)","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"qreoct"},"content":"`1` | Lexicographic (descending)","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"qreoct"},"content":"`2` | Task type","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"qreoct"},"content":"`3` | Task status (ascending)","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"qreoct"},"content":"`4` | Task status (descending)","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"qreoct"},"content":"`5` | Task time (ascending)","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"qreoct"},"content":"`6` | Task time (descending)","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"qreoct"},"content":"**Example usage:**","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"qreoct"},"content":"`sort 6`","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"qreoct"},"content":"I\u0027ve sorted your list with method \u003cTask time (descending)\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"qreoct"},"content":"Here are your tasks:","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"qreoct"},"content":" 1. [E][ ] shuffle off the mortal coil (at: 31 Dec 2021, Fri, 23:59)","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"qreoct"},"content":" 2. [E][ ] catch the conscience of the king (at: 28 Nov 2021, Sun, 21:00)","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"qreoct"},"content":" 3. [T][ ] set mousetraps","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"qreoct"},"content":"### `done` - Mark tasks as done","lastModifiedDate":"2021-09-12"},{"lineNumber":208,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":209,"author":{"gitId":"qreoct"},"content":"Marks the selected tasks as done, represented with an `[X]` checkbox in Augury.","lastModifiedDate":"2021-09-12"},{"lineNumber":210,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":211,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `done [index of tasks]`","lastModifiedDate":"2021-09-12"},{"lineNumber":212,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":213,"author":{"gitId":"qreoct"},"content":"`index of tasks` can be a single integer, or a comma-separated list of integers representing the index of tasks to mark","lastModifiedDate":"2021-09-12"},{"lineNumber":214,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":215,"author":{"gitId":"qreoct"},"content":"**Example usage:**","lastModifiedDate":"2021-09-12"},{"lineNumber":216,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":217,"author":{"gitId":"qreoct"},"content":"`done 1,3`","lastModifiedDate":"2021-09-12"},{"lineNumber":218,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":219,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":222,"author":{"gitId":"qreoct"},"content":"Nice! I\u0027ve marked these tasks as done:","lastModifiedDate":"2021-09-12"},{"lineNumber":223,"author":{"gitId":"qreoct"},"content":"      [T][X] set mousetraps","lastModifiedDate":"2021-09-12"},{"lineNumber":224,"author":{"gitId":"qreoct"},"content":"      [D][X] shuffle off the mortal coil (at: 31 Dec 2021, Fri, 23:59)","lastModifiedDate":"2021-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":226,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":227,"author":{"gitId":"qreoct"},"content":"### `delete` - Remove tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":228,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":229,"author":{"gitId":"qreoct"},"content":"Removes the selected tasks from your list.","lastModifiedDate":"2021-09-12"},{"lineNumber":230,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":231,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `delete [index of tasks]`","lastModifiedDate":"2021-09-12"},{"lineNumber":232,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":233,"author":{"gitId":"qreoct"},"content":"`index of tasks` can be a single integer, or a comma-separated list of integers representing the index of tasks to mark","lastModifiedDate":"2021-09-12"},{"lineNumber":234,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":235,"author":{"gitId":"qreoct"},"content":"**Example usage:**","lastModifiedDate":"2021-09-12"},{"lineNumber":236,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":237,"author":{"gitId":"qreoct"},"content":"`delete 1,2,3`","lastModifiedDate":"2021-09-12"},{"lineNumber":238,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":239,"author":{"gitId":"qreoct"},"content":"**Expected outcome:**","lastModifiedDate":"2021-09-12"},{"lineNumber":240,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":241,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":242,"author":{"gitId":"qreoct"},"content":"I\u0027ve removed these tasks:","lastModifiedDate":"2021-09-12"},{"lineNumber":243,"author":{"gitId":"qreoct"},"content":"    [D][X] shuffle off the mortal coil (at: 31 Dec 2021, Fri, 23:59)","lastModifiedDate":"2021-09-12"},{"lineNumber":244,"author":{"gitId":"qreoct"},"content":"    [E][ ] catch the conscience of the king (at: 28 Nov 2021, Sun, 21:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":245,"author":{"gitId":"qreoct"},"content":"    [T][X] set mousetraps","lastModifiedDate":"2021-09-12"},{"lineNumber":246,"author":{"gitId":"qreoct"},"content":"0 tasks remain.","lastModifiedDate":"2021-09-12"},{"lineNumber":247,"author":{"gitId":"qreoct"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":248,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":249,"author":{"gitId":"qreoct"},"content":"**Command aliases:** `del`, `rm`","lastModifiedDate":"2021-09-12"},{"lineNumber":250,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":251,"author":{"gitId":"qreoct"},"content":"### `help` - Show help menu","lastModifiedDate":"2021-09-12"},{"lineNumber":252,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":253,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `help`","lastModifiedDate":"2021-09-12"},{"lineNumber":254,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":255,"author":{"gitId":"qreoct"},"content":"Shows the in-app help menu, which links to this user guide.","lastModifiedDate":"2021-09-12"},{"lineNumber":256,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":257,"author":{"gitId":"qreoct"},"content":"**Command aliases:** `faq`, `?`","lastModifiedDate":"2021-09-12"},{"lineNumber":258,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":259,"author":{"gitId":"qreoct"},"content":"### `quit` - Exits Augury","lastModifiedDate":"2021-09-12"},{"lineNumber":260,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":261,"author":{"gitId":"qreoct"},"content":"**Command syntax:** `quit`","lastModifiedDate":"2021-09-12"},{"lineNumber":262,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":263,"author":{"gitId":"qreoct"},"content":"Closes Augury, saving your tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":264,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":265,"author":{"gitId":"qreoct"},"content":"**Command aliases:** `bye`, `exit`, `q`","lastModifiedDate":"2021-09-12"},{"lineNumber":266,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":267,"author":{"gitId":"qreoct"},"content":"## GUI Specific Features","lastModifiedDate":"2021-09-12"},{"lineNumber":268,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":269,"author":{"gitId":"qreoct"},"content":"### Themes","lastModifiedDate":"2021-09-12"},{"lineNumber":270,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":271,"author":{"gitId":"qreoct"},"content":"![Themes](Ui-themes.gif)","lastModifiedDate":"2021-09-15"},{"lineNumber":272,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":273,"author":{"gitId":"qreoct"},"content":"Augury comes with various colour themes.","lastModifiedDate":"2021-09-12"},{"lineNumber":274,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":275,"author":{"gitId":"qreoct"},"content":"From the menu-bar, click on `Settings \u003e Theme` in order to select your theme.","lastModifiedDate":"2021-09-12"},{"lineNumber":276,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":277,"author":{"gitId":"qreoct"},"content":"Themes are based off [Hundred Rabbits\u0027 Theme Framework](https://github.com/hundredrabbits/Themes).","lastModifiedDate":"2021-09-14"},{"lineNumber":278,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":279,"author":{"gitId":"qreoct"},"content":"## Command Summary","lastModifiedDate":"2021-09-12"},{"lineNumber":280,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":281,"author":{"gitId":"qreoct"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-12"},{"lineNumber":282,"author":{"gitId":"qreoct"},"content":"--------|------------------","lastModifiedDate":"2021-09-12"},{"lineNumber":283,"author":{"gitId":"qreoct"},"content":"**Todo** | `todo [description]`","lastModifiedDate":"2021-09-12"},{"lineNumber":284,"author":{"gitId":"qreoct"},"content":"**Event** | `event [description] /at [time]` \u003cbr\u003e\u003cbr\u003e e.g. `event nunnery open house /at 2021-08-24 0930`","lastModifiedDate":"2021-09-12"},{"lineNumber":285,"author":{"gitId":"qreoct"},"content":"**Deadline** | `deadline [description] /by [time]` \u003cbr\u003e\u003cbr\u003e e.g. `deadline avenge Claudius /by 2021-09-15 1800`","lastModifiedDate":"2021-09-12"},{"lineNumber":286,"author":{"gitId":"qreoct"},"content":"**Delete** | `delete [...index]`\u003cbr\u003e\u003cbr\u003e e.g. `delete 3, 4, 8`","lastModifiedDate":"2021-09-12"},{"lineNumber":287,"author":{"gitId":"qreoct"},"content":"**Mark as done** | `done [...index]`\u003cbr\u003e\u003cbr\u003e e.g. `done 1, 2, 5`","lastModifiedDate":"2021-09-12"},{"lineNumber":288,"author":{"gitId":"qreoct"},"content":"**Find tasks** | `find [query] [time] [status] [type]`\u003cbr\u003e\u003cbr\u003e e.g. `find revenge [] 2021-08-20`","lastModifiedDate":"2021-09-15"},{"lineNumber":289,"author":{"gitId":"qreoct"},"content":"**Sort tasks** | `sort [option]`, where `option` is a number `0`-`6`","lastModifiedDate":"2021-09-15"},{"lineNumber":290,"author":{"gitId":"qreoct"},"content":"**List tasks** | `list`, `ls`","lastModifiedDate":"2021-09-12"},{"lineNumber":291,"author":{"gitId":"qreoct"},"content":"**Help** | `help`, `faq`","lastModifiedDate":"2021-09-12"},{"lineNumber":292,"author":{"gitId":"qreoct"},"content":"**Quit** | `quit`, `exit`","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"qreoct":265,"-":27}},{"path":"src/main/java/duke/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.controllers.AppWindow;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":" * The {@code App} class starts the GUI for Augury.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"public class App extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"    private final Augury augury \u003d new Augury(\"data\");","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * Creates the GUI for {@code Augury}.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    public void start(Stage stage) throws AuguryException {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        augury.init();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"        AppWindow app \u003d new AppWindow(augury);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"        Scene scene \u003d new Scene(app);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        scene.getStylesheets().add(\"/styles/augury.css\");","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"        scene.getStylesheets().add(\"/styles/augury_\" + augury.getSettings().getTheme() + \".css\");","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        stage.getIcons().add(new Image(App.class.getResourceAsStream(\"/images/icon.png\")));","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"        stage.setTitle(\"Augury\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"        stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":32}},{"path":"src/main/java/duke/Augury.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.FileIoException;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import duke.io.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import duke.storage.Settings;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":" * The {@code Augury} class contains the entry point of the entire Task Management app.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":" * Create an instance of {@code Augury}, initialize with {@code init()}, and start the program","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":" * with {@code loop()}.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":" * \u003cp\u003e{@code Augury} takes in a {@code String path} as argument in its constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":" * This file stores data created by the app. If no file exists at the specified path,","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":" * {@code Augury} will create a new file.\u003c/p\u003e","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":" * @author Jefferson (@qreoct)","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"public class Augury {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    private static final String VER \u003d \"v1.3.0\"; // A-Release, More Themes, More Functionality, QOL Fixes","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"    private static final String WELCOME \u003d","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"            \"\\t+-------------------------------+\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"          + \"\\t| *                 *         * |\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"          + \"\\t|   (\u0027\u003c       augury     *      |\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"          + \"\\t| __/_)_______________________  |\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"          + \"\\t|   ||                      *   |\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"          + \"\\t|   ||   a task manager         |\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"          + \"\\t|      *             *          |\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"          + \"\\t|             *         \" + VER + \"  |\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"          + \"\\t+-------------------------------+\";","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"    public static final String HELP_MESSAGE \u003d","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"            \"Augury is a task management application\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"          + \"Type in your commands, such as \u0027list\u0027 to show all tasks, or \u0027todo shopping\u0027 to add a new task.\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"          + \"To view full documentation of commands, please visit https://github.com/qreoct/ip\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"          + VER;","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    private final Settings settings;","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"     * Initialises a new {@code Augury} object which uses the","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"     * provided {@code String path} as location of the .txt save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"     * @param path A {@code String} containing the location of the .txt save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"    public Augury(String path) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"        this.settings \u003d new Settings(this.storage);","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"     * Initialises the private {@code TaskList} using the data from the","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"     * save file provided.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"     * @throws FileIoException If file cannot be read or created","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"    public void init() throws AuguryException {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"            this.storage.initializeTaskList(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"            this.storage.initializeSettings(settings);","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"            throw new FileIoException(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"    public void greet() {","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"        System.out.println(WELCOME);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"     * Runs main loop of {@code Augury}. Parses and execute commands it receives.","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"    public void loop() {","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"        ui.speak(\"Hello! How may I help you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"            String input \u003d scan.nextLine().trim().toLowerCase();","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"                Command command \u003d parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"                String result \u003d command.execute(taskList, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"                ui.speak(result);","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"                if (command instanceof ExitCommand) {","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"            } catch (AuguryException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"                ui.speak(e.getMessage() + \"\\n\\t Please try again.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"qreoct"},"content":"     * Runs the supplied user input on {@code Augury}. Used in GUI mode of Augury.","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"qreoct"},"content":"     * @param input User supplied input","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing result of execution of command.","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"qreoct"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"qreoct"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"qreoct"},"content":"            String result \u003d command.execute(taskList, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"qreoct"},"content":"            return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"qreoct"},"content":"        } catch (AuguryException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"qreoct"},"content":"            return \"ERR\" + e.getMessage() + \"\\n\\t Please try again.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"qreoct"},"content":"     * Returns the current Version of {@code Augury}, for debugging purposes.","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} representing version of {@code Augury}","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"qreoct"},"content":"    public String getVer() {","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"qreoct"},"content":"        return Augury.VER;","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"qreoct"},"content":"     * @return","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"qreoct"},"content":"    public Settings getSettings() {","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"qreoct"},"content":"        return this.settings;","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":143}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.util.List;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" * The {@code Launcher} class is the entry point of Augury.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":" * If running using the command line, use the flag","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":" * \"-mode console\" to run the application in the console.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":" * Otherwise, Augury defaults to \"-mode gui\".","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * Starts {@code Augury}.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     * @param args Input parameters for Augury.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    public static void main(String[] args) throws AuguryException {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"        // Code gleaned from https://stackoverflow.com/a/1254338","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"        final List\u003cString\u003e arguments \u003d Arrays.asList(args);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        final int modeIndex \u003d arguments.indexOf(\"-mode\");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"        final String mode \u003d modeIndex \u003d\u003d -1 ? \"gui\" : arguments.get(modeIndex + 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        if (mode.equalsIgnoreCase(\"console\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"            runConsole();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"        } else if (mode.equalsIgnoreCase(\"gui\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"            Application.launch(App.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"            System.err.println(\"Incorrect mode specified (should be one of \u0027gui\u0027 or \u0027console\u0027).\");","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"     * Initializes the {@code Augury} application in console mode.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"    private static void runConsole() throws AuguryException {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        Augury a \u003d new Augury(\"data\");","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"        a.init();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        a.greet();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"        a.loop();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"qreoct":45}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":" * {@code Command} represents a command to be run by Augury.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"     * Static factory method to create {@code Command}s.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     * @param commandType enum representing type of {@code Command} to be created.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     * @param arguments optional parameter of user-supplied arguments.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * @return {@code Command} object.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     * @throws UnknownCommandException if {@code Command} is not one of the accepted commands","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    public static Command of (CommandTypes commandType, String... arguments) throws UnknownCommandException {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        switch(commandType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"        case QUIT:","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        case LIST:","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        case HELP:","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"        case SORT:","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"            return new SortCommand(arguments);","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        case MARKDONE:","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"            return new MarkDoneCommand(arguments);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"        case DELETE:","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"        case FIND:","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"        case MAKE:","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"            return new MakeCommand(arguments);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"            throw new UnknownCommandException(\"Unknown command.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"     * Executes the {@code Command}, and returns a String which contains","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"     * information of the execution.","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"     * @param tasks {@code TaskList} that the Command operates on","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"     * @param storage {@code Storage} instance that the Command operates on","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing information of execution.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"     * @throws AuguryException if invalid operation occurs during execution.","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"    public abstract String execute (TaskList tasks, Storage storage) throws AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":55}},{"path":"src/main/java/duke/commands/CommandTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.util.List;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":" * Enumerates the command types supported by Augury.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"public enum CommandTypes {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    QUIT(\"quit\", \"exit\", \"bye\", \"q\"),","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"    LIST(\"list\", \"ls\", \"l\"),","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"    MARKDONE(\"done\"),","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"    DELETE(\"delete\", \"del\", \"rm\"),","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    MAKE(\"todo\", \"deadline\", \"event\"),","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"    FIND(\"find\", \"f\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    SORT(\"sort\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    HELP(\"help\", \"faq\", \"h\", \"?\");","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    private final List\u003cString\u003e aliases;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    CommandTypes(String... aliases) {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        this.aliases \u003d Arrays.asList(aliases);","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    public List\u003cString\u003e getAliases() {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"        return aliases;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":28}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidActionException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import duke.util.StringCleaner;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":" * The {@code DeleteCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":" * delete specified {@code Task}s from the {@code TaskList}.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    private final String[] args;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code DeleteCommand} with user-supplied {@code String[] arguments}.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"     * @param arguments User-supplied arguments (expected format: first index of array contains a","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     *                  {@code String} of comma-separated integers [\"2, 3, 5\"])","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    public DeleteCommand(String[] arguments) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     * Deletes {@code Task}s at indices provided as arguments.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"     * @param tasks {@code TaskList} that {@code DeleteCommand} operates on.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"     * @param storage {@code Storage} instance that the {@code DeleteCommand} writes to.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing confirmation of {@code Task}s deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"     * @throws InvalidActionException if {@code Task} that does not exist is to be deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) throws AuguryException {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        String args \u003d this.args[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cInteger\u003e listOfTasks \u003d StringCleaner.toArrayListInteger(args);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        int taskListSize \u003d tasks.getSize();","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"        for (Integer i : listOfTasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"            if (i \u003e taskListSize) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"                throw new InvalidActionException(\"Task \" + i + \" does not exist.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"        String result \u003d tasks.deleteTasksAndAnnounce(listOfTasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"        storage.saveTaskListToStorage(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":53}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":" * The {@code ExitCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":" * terminates {@code Augury}.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"    public ExitCommand() { }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"     * Signals to exit from {@code Augury}.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} which signals to {@code Augury} to terminate.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"        return \"The readiness is all.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":23}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidActionException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":" * The {@code FindCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":" * finds {@code Task}s from the {@code TaskList} that match a user query.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"    private final String[] args;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code FindCommand} with user-supplied {@code String[] arguments}.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * @param arguments User-supplied search query (expected format: first index of array contains a","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     *                  search query {@code String} [\"shopping\"])","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    public FindCommand(String[] arguments) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"     * Executes the {@code FindCommand}, which searches the {@code TaskList}","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"     * for {@code Task}s that match the user-provided query.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     * @param tasks {@code TaskList} that the Command operates on","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing results of search.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     * @throws InvalidActionException if no search query is provided.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) throws InvalidActionException {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"        String userQueries \u003d this.args[0];","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"        return tasks.findAndAnnounce(userQueries);","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":38}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.Augury;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":" * The {@code HelpCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":" * returns a help message for the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"    public HelpCommand() { }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     * Returns a help message for the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} help message for the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        return Augury.HELP_MESSAGE;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"qreoct":24}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":" * The {@code ListCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":" * lists all {@code Task}s in the {@code TaskList}.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"    public ListCommand() { }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"     * Returns the list of {@code Tasks} in {@code Augury}.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} of {@code Tasks} in {@code Augury}.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"        return tasks.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":23}},{"path":"src/main/java/duke/commands/MakeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidActionException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskFactory;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":" * The {@code MakeCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":" * creates a new {@code Task} in {@code Augury}.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"public class MakeCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    private final String[] args;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code MakeCommand} with user-supplied {@code String[] arguments}.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"     * @param arguments User-supplied arguments","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    public MakeCommand(String[] arguments) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     * Creates a {@code Task} based on user-supplied arguments.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     * @param tasks {@code TaskList} that the {@code MakeCommand} writes to.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"     * @param storage {@code Storage} instance that gets updated.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing results of {@code Task} creation.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"     * @throws UnknownCommandException if invalid command input is provided.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"     * @throws InvalidActionException if invalid {@code Task} details are provided.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) throws AuguryException {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        String args \u003d this.args[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"        // type will be in the first word","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        String taskType \u003d args.split(\" \")[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"        String taskDescription;","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"        if (args.length() \u003d\u003d taskType.length()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"            taskDescription \u003d \"\"; // no description provided","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"            taskDescription \u003d args.replace(taskType + \" \", \"\");","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"        return createTask(tasks, storage, taskType, taskDescription);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"    private String createTask(TaskList tasks, Storage storage,","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"                              String taskType, String taskDescription) throws AuguryException {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"            TaskFactory tf \u003d new TaskFactory();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"            Task newTask \u003d tf.createTask(taskType, taskDescription);","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"            if (newTask \u003d\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"                throw new UnknownCommandException(\"Invalid command entered when creating task.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"            if (tasks.hasTaskWithDescription(newTask.getDescription())) {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"                return \"A task matching this description already exists! Task was not created.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"            String result \u003d tasks.addTaskAndAnnounce(taskType, newTask);","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"            storage.saveTaskListToStorage(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"            return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"        } catch (AuguryException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"            throw new AuguryException(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":74}},{"path":"src/main/java/duke/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidActionException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import duke.util.StringCleaner;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":" * The {@code MarkDoneCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":" * marks specified {@code Task}s from the {@code TaskList} as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    private final String[] args;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code MarkDoneCommand} with user-supplied {@code String[] arguments}.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"     * @param arguments User-supplied arguments (expected format: first index of array contains a","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     *                  {@code String} of comma-separated integers [\"2, 3, 5\"])","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    public MarkDoneCommand(String[] arguments) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     * Marks as done the {@code Task}s at indices provided as arguments.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"     * @param tasks {@code TaskList} that {@code MarkDoneCommand} operates on.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"     * @param storage {@code Storage} instance that the {@code MarkDoneCommand} writes to.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing confirmation of {@code Task}s marked as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"     * @throws InvalidActionException if {@code Task} that does not exist is to be marked.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) throws AuguryException {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        String args \u003d this.args[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cInteger\u003e listOfTasks \u003d StringCleaner.toArrayListInteger(args);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        int taskListSize \u003d tasks.getSize();","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"        for (Integer i : listOfTasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"            if (i \u003e taskListSize) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"                throw new InvalidActionException(\"Task \" + i + \" does not exist.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"        String result \u003d tasks.markAsDoneAndAnnounce(listOfTasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"        storage.saveTaskListToStorage(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":53}},{"path":"src/main/java/duke/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.commands;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidActionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":" * The {@code SortCommand} class extends from {@code Command}, which","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" * sorts the {@code Task}s in the {@code TaskList}.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    private static final int OPTION_LIMIT \u003d 6;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    private String arg \u003d \"0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     * Options for sorting.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    public enum SortOptions {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        LEXICOGRAPHIC_ASCENDING(\"Lexicographic (ascending)\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"        LEXICOGRAPHIC_DESCENDING(\"Lexicographic (descending)\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"        TASK_TYPE(\"Task type\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        TASK_STATUS(\"Task status (Not done first)\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"        TASK_STATUS_DESCENDING(\"Task status (Done first)\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        TASK_TIME(\"Task time (ascending)\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"        TASK_TIME_DESCENDING(\"Task time (descending)\");","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"        private String name;","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        SortOptions(String name) {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"        @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"        public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"            return this.name;","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    private SortOptions sortType \u003d SortOptions.LEXICOGRAPHIC_ASCENDING;","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"     * {@code String[] args} will either be {@code sort} (no sort option specified) or {@code sort \u003cint\u003e}.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"    public SortCommand(String... args) {","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"        if (args[0].length() \u003e 5) {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"            this.arg \u003d args[0].split(\" \")[1];","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"     * Sorts the {@code TaskList}.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} of sorted {@code TaskList}.","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"    public String execute(TaskList tasks, Storage storage) throws AuguryException {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"            setSortTypeAccordingToArg(Integer.parseInt(this.arg));","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"        } catch (NumberFormatException | InvalidActionException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"            throw new InvalidActionException(\"Invalid argument! \"","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"                    + \"Please enter an option from 0-\" + OPTION_LIMIT","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"                    + \" for the sort command.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"        tasks.sort(sortType);","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"        storage.saveTaskListToStorage(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"        String res \u003d \"I\u0027ve sorted your list with method \u003c\" + sortType.toString() + \"\u003e\\n\\n\\t\";","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"        return res + tasks.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"    private void setSortTypeAccordingToArg(int argument) throws InvalidActionException {","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"        switch(argument) {","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"        case 0:","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"            this.sortType \u003d SortOptions.LEXICOGRAPHIC_ASCENDING;","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"        case 1:","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"            this.sortType \u003d SortOptions.LEXICOGRAPHIC_DESCENDING;","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"        case 2:","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"            this.sortType \u003d SortOptions.TASK_TYPE;","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"        case 3:","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"            this.sortType \u003d SortOptions.TASK_STATUS;","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"        case 4:","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"            this.sortType \u003d SortOptions.TASK_STATUS_DESCENDING;","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"        case 5:","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"            this.sortType \u003d SortOptions.TASK_TIME;","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"        case 6:","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"            this.sortType \u003d SortOptions.TASK_TIME_DESCENDING;","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"        default:","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"            throw new InvalidActionException(\"Must be 0 - \" + OPTION_LIMIT);","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"qreoct":103}},{"path":"src/main/java/duke/controllers/AppWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.controllers;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.App;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.Augury;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":" * Controller for AppWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"public class AppWindow extends VBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    private Augury augury;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"    private Image img \u003d new Image(this.getClass().getResourceAsStream(\"/images/bird.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"    private String lastCommand \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"     * Main window of the {@code Augury} GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     * @param a Augury instance.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"    public AppWindow(Augury a) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        this.augury \u003d a;","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(App.class.getResource(\"/view/AppWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"            handleKeyboardCommands();","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"        String welcomeMessage \u003d \"Hello! How may I help you?\";","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"            DialogBox.getAuguryDialog(welcomeMessage, img)","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"     * Allows {@code scrollPane} to scroll when new messages are added","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"        String response \u003d augury.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"        DialogBox auguryDialogBox;","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"        if (input.trim().equals(\"\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"            return;","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"        } else if (response.startsWith(\"ERR\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"            auguryDialogBox \u003d DialogBox.getErrorDialog(response.substring(3), img);","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"            auguryDialogBox \u003d DialogBox.getAuguryDialog(response, img);","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"                DialogBox.getUserDialog(input),","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"                auguryDialogBox","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"        this.lastCommand \u003d input;","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"        if (response.equals(\"The readiness is all.\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"     * Creates a dialog box to display information about {@code Augury}.","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"     * https://code.makery.ch/blog/javafx-dialogs-official/","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"    private void handleHelpButton() {","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"        alert.setTitle(\"About Augury\");","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"        alert.setHeaderText(null);","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"        alert.setContentText(Augury.HELP_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"        alert.getDialogPane().getStylesheets().add(\"/styles/augury_\" + augury.getSettings().getTheme() + \".css\");","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"qreoct"},"content":"        alert.showAndWait();","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"qreoct"},"content":"     * Creates a dialog box to handle settings of {@code Augury}.","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"qreoct"},"content":"    private void handleSettingsButton() {","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"qreoct"},"content":"        SettingsWindow.showSettingsWindow(augury.getSettings());","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"qreoct"},"content":"        scrollPane.getScene().getStylesheets().remove(1);","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"qreoct"},"content":"        scrollPane.getScene().getStylesheets().add(\"/styles/augury_\" + augury.getSettings().getTheme() + \".css\");","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"qreoct"},"content":"    private void handleKeyboardCommands() {","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"qreoct"},"content":"        userInput.setOnKeyReleased(event -\u003e {","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"qreoct"},"content":"            String key \u003d event.getCode().toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"qreoct"},"content":"            if (key.equals(\"UP\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"qreoct"},"content":"                toggleLastCommand();","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"qreoct"},"content":"        });","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"qreoct"},"content":"    private void toggleLastCommand() {","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"qreoct"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"qreoct"},"content":"        String temp \u003d lastCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"qreoct"},"content":"        if (lastCommand.equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"qreoct"},"content":"            return;","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"qreoct"},"content":"        } else if (!input.isBlank()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"qreoct"},"content":"            temp \u003d input;","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"qreoct"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"qreoct"},"content":"        userInput.setText(lastCommand);","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"qreoct"},"content":"        userInput.positionCaret(lastCommand.length());","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"qreoct"},"content":"        this.lastCommand \u003d temp;","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"qreoct":149}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.controllers;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    private HBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    private DialogBox(String text) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(AppWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        dialog.setMinHeight(Label.USE_PREF_SIZE); // stops message from truncating","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        dialog.getStyleClass().add(\"dialog\");","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(AppWindow.class.getResource(\"/view/ImageDialogBox.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"        dialog.setMinHeight(Label.USE_PREF_SIZE); // stops message from truncating","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"        dialog.getStyleClass().add(\"dialog\");","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"        dialog.getStyleClass().add(\"dialog--augury\");","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"        DialogBox userDialog \u003d new DialogBox(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"        return userDialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"    public static DialogBox getAuguryDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"        DialogBox auguryDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"        auguryDialog.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"        return auguryDialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"        DialogBox auguryDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"        auguryDialog.getStyleClass().add(\"dialog--error\");","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"        auguryDialog.flip();","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"        return auguryDialog;","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"qreoct":87}},{"path":"src/main/java/duke/controllers/SettingsWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.storage.Settings;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import javafx.scene.control.ChoiceBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":" * For the choice box https://coderanch.com/t/649781/java/Set-values-ChoiceBox-created-Scene","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":" * Creating the stage https://stackoverflow.com/questions/38791933/how-to-define-stage-in-fxml","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"public class SettingsWindow extends Application {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    private static Settings settings;","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    private Button cancelButton;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    private ChoiceBox\u003cString\u003e choiceBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"    private Stage s \u003d new Stage();","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"    private SettingsWindow() {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        start(s);","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     * Creates a new {@code SettingsWindow}.","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"    public void start(Stage s) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"            FXMLLoader fxml \u003d new FXMLLoader(AppWindow.class.getResource(\"/view/SettingsWindow.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"            fxml.setController(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"            s \u003d fxml.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"            s.setResizable(false);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"            s.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"            s.getScene().getStylesheets().add(\"/styles/augury_\" + SettingsWindow.settings.getTheme() + \".css\");","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"            choiceBox.getItems().addAll(\"Apollo\", \"Dark\", \"Light\", \"Orca\", \"Solarised\", \"Sonicpi\", \"Tape\");","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"            String currentTheme \u003d SettingsWindow.settings.getTheme().substring(0, 1).toUpperCase()","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"                    + SettingsWindow.settings.getTheme().substring(1);","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"            choiceBox.setValue(currentTheme);","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"            s.showAndWait();","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"     * Instantiates a {@code SettingsWindow} instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"    public static void showSettingsWindow(Settings settings) {","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"        SettingsWindow.settings \u003d settings;","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"        SettingsWindow sw \u003d new SettingsWindow();","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"     * Save the Settings.","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"    private void handleSettingsSave() throws AuguryException {","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"        String userChoice \u003d choiceBox.getValue().toLowerCase();","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"        settings.setTheme(userChoice);","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"        Stage stage \u003d (Stage) choiceBox.getScene().getWindow();","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"        stage.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"     * Close the Settings Window.","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"    private void handleSettingsCancel() {","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"        Stage stage \u003d (Stage) cancelButton.getScene().getWindow();","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"        stage.close();","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"qreoct":86}},{"path":"src/main/java/duke/exceptions/AuguryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * The {@code AuguryException} class represents {@code Exceptions} thrown by {@code Augury}.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"public class AuguryException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"    public AuguryException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":10}},{"path":"src/main/java/duke/exceptions/FileIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * {@code FileIoException} extends from {@code AuguryException}s.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" * Gets thrown when file reading/writing fails.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"public class FileIoException extends AuguryException {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"    public FileIoException(String message) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"        super(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":11}},{"path":"src/main/java/duke/exceptions/InvalidActionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * {@code InvalidActionException} extends from {@code AuguryException}s.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" * Gets thrown when invalid parameters are provided to commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"public class InvalidActionException extends AuguryException {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"    public InvalidActionException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":11}},{"path":"src/main/java/duke/exceptions/InvalidTaskCreationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * {@code InvalidTaskCreationException} extends from {@code AuguryException}s.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" * Gets thrown when invalid parameters are passed during {@code Task} creation.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"public class InvalidTaskCreationException extends AuguryException {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"    public InvalidTaskCreationException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":11}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * {@code UnknownCommandException} extends from {@code AuguryException}s.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" * Gets thrown when an unrecognized command is sent to {@code Augury}.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"public class UnknownCommandException extends AuguryException {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":11}},{"path":"src/main/java/duke/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.io;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import duke.commands.CommandTypes;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidActionException;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskStatuses;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskTypes;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"import duke.util.Query;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":" * The {@code Parser} class handles command parsing.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    public Parser() { }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"     * Converts the provided user {@code String input} into a {@code Command}.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     * @param input {@code String} of user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} which corresponds to the command that the user entered.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"    public Command parse(String input) throws AuguryException {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        assert input.equals(input.toLowerCase());","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"        // search through valid CommandTypes and their aliases","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"        // gleaned from https://stackoverflow.com/questions/4197988/java-enum-valueof-with-multiple-values/4198066","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"        for (CommandTypes commandType : CommandTypes.values()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"            for (String alias : commandType.getAliases()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"                if (input.startsWith(alias)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"                    String args \u003d cleanCommandArguments(input, alias, commandType);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"                    if (args !\u003d null \u0026\u0026 args.equals(\"\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"                        throw new UnknownCommandException(\"Please enter an argument!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"                    }","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"                    return Command.of(commandType, args);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        throw new UnknownCommandException(\"Unknown command entered\");","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"     * Creates an {@code ArrayList} of {@code Query} objects representing the items that the user wants to find.","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"     * @param query {@code String} containing search items. Example: {@code [X] school 2021-01-31}","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"     * @return {@code ArrayList} of {@code Query} objects","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"    public static ArrayList\u003cQuery\u003e parseFindQueries(String query) {","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cQuery\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"        String[] queries \u003d query.split(\" \");","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"        for (String q : queries) {","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"            switch (q) {","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"            case \"[x]\":","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"                res.add(new Query(\"status\", TaskStatuses.ISDONE));","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"            case \"[]\":","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"                res.add(new Query(\"status\", TaskStatuses.ISNOTDONE));","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"            case \"[t]\":","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"                res.add(new Query(\"type\", TaskTypes.TODO));","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"            case \"[e]\":","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"                res.add(new Query(\"type\", TaskTypes.EVENT));","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"            case \"[d]\":","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"                res.add(new Query(\"type\", TaskTypes.DEADLINE));","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"            default:","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"                try {","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"                    LocalDateTime d \u003d LocalDate.parse(q, formatter).atStartOfDay();","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"                    res.add(new Query(\"datetime\", d));","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"                    res.add(new Query(\"string\", q));","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"        return res;","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"    private String cleanCommandArguments(String input,","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"                                         String alias,","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"                                         CommandTypes commandType) throws InvalidActionException {","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"        if (commandType \u003d\u003d CommandTypes.QUIT","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"                || commandType \u003d\u003d CommandTypes.LIST) {","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"            return null;","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"        } else if (commandType \u003d\u003d CommandTypes.DELETE","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"                || commandType \u003d\u003d CommandTypes.MARKDONE) {","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"            String userInput \u003d input.replace(alias, \"\").trim();","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"            checkIndexesAreValid(userInput);","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"            return userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"        } else if (commandType \u003d\u003d CommandTypes.FIND) {","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"            String userInput \u003d input.replace(alias, \"\").trim();","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"            return userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"        } else if (commandType \u003d\u003d CommandTypes.MAKE) {","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"            return input;","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"            return input;","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"qreoct"},"content":"    private void checkIndexesAreValid(String indexes) throws InvalidActionException {","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"qreoct"},"content":"        if (indexes.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"qreoct"},"content":"            throw new InvalidActionException(\"Please enter a valid task number.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"qreoct"},"content":"        String[] xs \u003d indexes.split(\",\");","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"qreoct"},"content":"        for (String s : xs) {","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"qreoct"},"content":"            if (!isPositiveInteger(s.trim())) {","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"qreoct"},"content":"                throw new InvalidActionException(\"Please enter a valid task number.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"qreoct"},"content":"    private boolean isPositiveInteger(String s) {","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"qreoct"},"content":"            return Integer.parseInt(s) \u003e 0;","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"qreoct"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"qreoct"},"content":"            return false;","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qreoct":131}},{"path":"src/main/java/duke/storage/Settings.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" * The {@code Settings} class contains user preferences.","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"public class Settings {","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    private String theme;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code Settings} instance with a {@code Storage} to read/write user preferences.","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"     * @param storage {@code Storage} instance that handles read/write of user preferences.","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    public Settings(Storage storage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"        this.theme \u003d \"light\";","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     * Returns the current theme of the application","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} of current theme","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    public String getTheme() {","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        return this.theme;","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     * Sets the current theme of the application","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"     * @param t {#code String} of theme to write","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"     * @throws AuguryException if file error occurs","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    public void setTheme(String t) throws AuguryException {","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"        this.theme \u003d t;","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"        storage.saveSettingsToStorage(this);","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"     * Returns the current theme of the application","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"        return this.theme;","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"qreoct":47}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.FileIoException;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskFactory;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":" * The {@code Storage} class handles reading and writing data from files.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    private String path;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    private String dataPath;","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    private String settingsPath;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code Storage} instance to have a {@code String path}.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"     * @param path {@code String} representing the filepath to work on.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        this.dataPath \u003d path + \"/tasks.txt\";","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        this.settingsPath \u003d path + \"/settings.txt\";","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code TaskList t} using data from the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"     * If save file does not exist, {@code Storage} will attempt to create the directory and file.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     * @param tasks {@code TaskList} to write data to.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"     * @throws IOException If file cannot be found or written to","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    public void initializeTaskList(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"        createDirectory();","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"        createFileAtPath(dataPath);","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"        loadTaskListFromStorage(tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"     * Initializes user {@code Settings} using data from the settings file.","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"     * If settings file does not exist, {@code Storage} will attempt to create the directory and file.","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"     * @param settings {@code Settings} instance to write data to","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"     * @throws IOException If file cannot be found or written to","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"    public void initializeSettings(Settings settings) throws IOException, AuguryException {","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"        createDirectory();","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"        createFileAtPath(settingsPath);","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"        loadSettingsFromStorage(settings);","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"     * Saves the given {@code TaskList tasks} into the save file.","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"     * @param tasks {@code TaskList} to read data from.","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"     * @throws FileIoException If file cannot be found or written to","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"    public void saveTaskListToStorage(TaskList tasks) throws AuguryException {","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"            File f \u003d new File(dataPath);","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"            String s \u003d convertTaskListToString(tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"            writeStringToStorage(s, dataPath);","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"            throw new FileIoException(\"File error occured\");","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"     * Saves the given {@code Settings} into the save file.","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"     * @param settings {@code Settings} to read data from.","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"     * @throws FileIoException If file cannot be found or written to","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"    public void saveSettingsToStorage(Settings settings) throws AuguryException {","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"            File f \u003d new File(settingsPath);","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"            writeStringToStorage(settings.toString(), settingsPath);","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"            throw new FileIoException(\"File error occured\");","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"    private void createDirectory() {","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"        String directory \u003d this.path;","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"            boolean dirCreated \u003d dir.mkdir();","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"            assert dirCreated;","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"    private void createFileAtPath(String path) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"        boolean fileCreated \u003d f.createNewFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"        assert fileCreated;","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"qreoct"},"content":"    private String convertTaskListToString(TaskList xs) {","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cTask\u003e tasks \u003d xs.getTasks();","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cString\u003e tasksString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"qreoct"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"qreoct"},"content":"            tasksString.add(t.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"qreoct"},"content":"        String res \u003d String.join(\"\\n\", tasksString);","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"qreoct"},"content":"        return res;","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"qreoct"},"content":"    private void loadTaskListFromStorage(TaskList t) throws IOException {","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"qreoct"},"content":"        // read tasks.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"qreoct"},"content":"        Scanner s \u003d new Scanner(new File(dataPath));","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"qreoct"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"qreoct"},"content":"            tasks.add(s.nextLine());","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"qreoct"},"content":"        // create a task for each line","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"qreoct"},"content":"        TaskFactory tf \u003d new TaskFactory();","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"qreoct"},"content":"        for (String task : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"qreoct"},"content":"            Task newTask \u003d tf.createTask(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"qreoct"},"content":"            t.addTask(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"qreoct"},"content":"    private void loadSettingsFromStorage(Settings settings) throws IOException, AuguryException {","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"qreoct"},"content":"        // read settings.txt","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"qreoct"},"content":"        Scanner s \u003d new Scanner(new File(settingsPath));","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"qreoct"},"content":"        String theme \u003d \"light\";","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"qreoct"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"qreoct"},"content":"            theme \u003d s.nextLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"qreoct"},"content":"        settings.setTheme(theme);","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"qreoct"},"content":"    private void writeStringToStorage(String s, String path) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"qreoct"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"qreoct"},"content":"        fw.write(s);","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"qreoct"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"qreoct":153}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" * The {@code DeadlineTask} class extends from {@code TaskWithTime}.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"public class DeadlineTask extends TaskWithTime {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code DeadlineTask} with {@code String description} and {@code LocalDateTime time}.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} Description of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"     * @param time {@code LocalDateTime} Time that the task is due by.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    public DeadlineTask(String description, LocalDateTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"        super(description, time);","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code DeadlineTask} with {@code String description}, {@code LocalDateTime time}","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"     * and {@code boolean isDone} status.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} Description of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"     * @param time {@code LocalDateTime} Time that the task is due by.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     * @param isDone {@code boolean} Done status of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    public DeadlineTask(String description, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        super(description, time, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code TaskTypes} query matches this {@code Task}.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     * @param query {@code TaskTypes} to be compared against this {@code Task}","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     * @return {@code boolean} value representing a match","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch(TaskTypes query) {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        return query.equals(TaskTypes.DEADLINE);","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    public String getType() {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        return \"[D]\";","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"     * Prints {@code DeadlineTask} description with the prefix [D] and deadline time.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time.format(Task.TIME_DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":57}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" * The {@code EventTask} class extends from {@code TaskWithTime}","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"public class EventTask extends TaskWithTime {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"     * Initializes an {@code EventTask} with {@code String description} and {@code LocalDateTime time}.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} Description of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"     * @param time {@code LocalDateTime} Time that the task takes place at.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    public EventTask(String description, LocalDateTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"        super(description, time);","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     * Initializes an {@code DeadlineTask} with {@code String description}, {@code LocalDateTime time}","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"     * and {@code boolean isDone} status.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} Description of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"     * @param time {@code LocalDateTime} Time that the task takes place at.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     * @param isDone {@code boolean} Done status of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    public EventTask(String description, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        super(description, time, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code TaskTypes} query matches this {@code Task}.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     * @param query {@code TaskTypes} to be compared against this {@code Task}","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     * @return {@code boolean} value representing a match","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch(TaskTypes query) {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        return query.equals(TaskTypes.EVENT);","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    public String getType() {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        return \"[E]\";","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"     * Prints {@code EventTask} description with the prefix [E] and event time.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time.format(TIME_DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":57}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":" * The {@code Task} parent class contains abstractions for tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"    public static final DateTimeFormatter TIME_DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM y, E, kk:mm\");","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     * Initializes an instance of {@code Task} with {@code String description}.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} that contains description of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"     * Initializes an instance of {@code Task} with {@code String description}","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"     * and {@code boolean isDone} status.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} that contains description of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     * @param isDone {@code boolean} that represents task completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     * Marks the current {@code Task} to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"     * Returns description of {@code Task}.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"        return this.description;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"     * Gets the time value of this {@code Task} (for sorting).","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"     * Since {@code Task}s do not have time, it has the minimum possible value.","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"        return LocalDateTime.of(LocalDate.MIN, LocalTime.MIN);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"     * Returns type of {@code Task}.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"    public abstract String getType();","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"        String checkbox \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"        return checkbox + \" \" + description;","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code String} query matches this {@code Task}.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"     * @param queryString {@code String} to be compared against this {@code Task}\u0027s description.","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"     * @return {@code boolean} value representing a match","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch(String queryString) {","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"        return this.description.contains(queryString);","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code TaskStatuses} query matches this {@code Task}.","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"     * @param queryStatus {@code String} to be compared against this {@code Task}\u0027s {@code isDone} status.","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"     * @return {@code boolean} value representing a match","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch(TaskStatuses queryStatus) {","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"        return (queryStatus.equals(TaskStatuses.ISDONE) \u0026\u0026 this.isDone)","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"                || (queryStatus.equals(TaskStatuses.ISNOTDONE) \u0026\u0026 !this.isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code String} query matches this {@code LocalDateTime}.","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"     * Since {@code Task}s have no time, false is returned by default.","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"     * @param queryDateTime {@code LocalDateTime} to be compared against this {@code Task}.","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"     * @return {@code false}, since {@code Task} objects have no time to be compared against.","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch(LocalDateTime queryDateTime) {","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"        return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"    };","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code TaskTypes} matches this {@code Task}.","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"    public abstract boolean isMatch(TaskTypes queryTaskType);","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":107}},{"path":"src/main/java/duke/tasks/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidTaskCreationException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import duke.util.StringCleaner;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" * The {@code TaskFactory} is a factory class responsible for creating {@code Task}s.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"public class TaskFactory {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    public TaskFactory() { }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     * Creates a single {@code Task} from the given {@code String newTaskDetails}.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * This method signature is called when creating tasks from the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     * @param newTaskDetails {@code String} containing details of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"     *                       Example: {@code [E] event (at: 6 Sep 2021, Tue, 21:00)}","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    public Task createTask(String newTaskDetails) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"        // this method is used when reading from duke.tasks.txt file","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        // the syntax is [E][X] description (at: time)","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        if (newTaskDetails.startsWith(\"[T\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"            boolean isDone \u003d newTaskDetails.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"            String description \u003d newTaskDetails.split(\"] \")[1].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"            return new TodoTask(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        } else if (newTaskDetails.startsWith(\"[E\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"            boolean isDone \u003d newTaskDetails.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"            String description \u003d newTaskDetails.split(\"] \")[1]","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"                    .split(\" \\\\(\")[0]","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"                    .trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"            String timeString \u003d newTaskDetails.split(\"\\\\(at: \")[1]","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"                    .replaceAll(\".$\", \"\"); // get rid of last character \u0027)\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"            LocalDateTime time \u003d LocalDateTime.parse(timeString, Task.TIME_DISPLAY_FORMAT);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"            return new EventTask(description, time, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        } else if (newTaskDetails.startsWith(\"[D\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"            boolean isDone \u003d newTaskDetails.substring(4).equals(\"X\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"            String description \u003d newTaskDetails.split(\"] \")[1]","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"                    .split(\" \\\\(\")[0]","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"                    .trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"            String timeString \u003d newTaskDetails.split(\"\\\\(by: \")[1]","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"                    .replaceAll(\".$\", \"\"); // get rid of last character \u0027)\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"            LocalDateTime time \u003d LocalDateTime.parse(timeString, Task.TIME_DISPLAY_FORMAT);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"            return new DeadlineTask(description, time, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"            return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"     * Creates a single {@code Task} from the given {@code String newTaskType} and {@code String newTaskDetails}.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"     * This method signature is called when creating tasks from user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"     * @param newTaskType {@code String}, one of: \u0027todo\u0027, \u0027event\u0027, \u0027deadline\u0027.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"     * @param newTaskDetails {@code String} representing full user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"     *                       Example: {@code event shopping /at 2021-08-08 2300}","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"     * @throws InvalidTaskCreationException If user input has missing parameters or malformed date.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"    public Task createTask(String newTaskType, String newTaskDetails) throws AuguryException {","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"        if (newTaskType \u003d\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"        } else if (newTaskType.equalsIgnoreCase(TaskTypes.TODO.toString())) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"            checkDetailsNonEmpty(newTaskType, newTaskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"            String description \u003d newTaskDetails.trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"            return new TodoTask(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"        } else if (newTaskType.equalsIgnoreCase(TaskTypes.EVENT.toString())) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"            checkDetailsNonEmpty(newTaskType, newTaskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"            checkTaskIncludesTime(newTaskType, newTaskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"            String description \u003d newTaskDetails.split(\"/at \")[0].trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"            String timeString \u003d newTaskDetails.split(\"/at \")[1].trim().toLowerCase();","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"            LocalDateTime time \u003d StringCleaner.toLocalDateTime(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"            return new EventTask(description, time);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"        } else if (newTaskType.equalsIgnoreCase(TaskTypes.DEADLINE.toString())) {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"            checkDetailsNonEmpty(newTaskType, newTaskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"            checkTaskIncludesTime(newTaskType, newTaskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"            String description \u003d newTaskDetails.split(\"/by \")[0].trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"            String timeString \u003d newTaskDetails.split(\"/by \")[1].trim().toLowerCase();","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"            LocalDateTime time \u003d StringCleaner.toLocalDateTime(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"            return new DeadlineTask(description, time);","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"    private void checkDetailsNonEmpty(String newTaskType, String details) throws AuguryException {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"        if (details.length() \u003c\u003d 1","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"                || details.contains(\"/at\") \u0026\u0026 details.split(\"/at\")[0].length() \u003c 1","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"                || details.contains(\"/by\") \u0026\u0026 details.split(\"/by\")[0].length() \u003c 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"            throw new InvalidTaskCreationException(\"Description of \" + newTaskType + \" cannot be empty!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"    private void checkTaskIncludesTime(String newTaskType, String details) throws AuguryException {","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"        if (newTaskType.equalsIgnoreCase(TaskTypes.EVENT.toString())) {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"            if (details.split(\"/at \").length \u003c 2 || details.split(\"/at \")[1].length() \u003c\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"                throw new InvalidTaskCreationException(\"Event task must include time! (use /at YYYY-MM-DD HHMM)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"        } else if (newTaskType.equalsIgnoreCase(TaskTypes.DEADLINE.toString())) {","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"            if (details.split(\"/by \").length \u003c 2 || details.split(\"/by \")[1].length() \u003c\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"                throw new InvalidTaskCreationException(\"Deadline task must include time! (use /by YYYY-MM-DD HHMM)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"            throw new InvalidTaskCreationException(\"Wrong event type used!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"qreoct":110}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import duke.commands.SortCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import duke.io.Parser;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"import duke.util.Query;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":" * The {@code TaskList} contains and has methods for interacting with {@code Task}s.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"     * Initializes an instance of {@code TaskList} with an {@code ArrayList} containing {@code Task}s.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     * Returns an {@code ArrayList} of {@code Task}s in this {@code TaskList},","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     * @return {@code ArrayList} containing all tasks in this {@code TaskList}.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     * Returns the number of {@code Task}s in this {@code TaskList},","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"     * @return {@code int} - the number of tasks in this {@code TaskList}.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"     * Adds a single {@code Task} to this {@code TaskList}.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"     * @param t {@code Task} to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"     * Adds a single {@code Task} to this {@code TaskList},","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"     * then forms a String with information about the {@code TaskList}.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"     * @param taskType {@code String}. One of: \u0027todo\u0027, \u0027event\u0027, \u0027deadline\u0027.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"     * @param t {@code Task} to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing information about the {@code TaskList} after the operation.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"    public String addTaskAndAnnounce(String taskType, Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"        res +\u003d \"I\u0027ve added your \" + taskType.toLowerCase() + \":\\n\\t\\t\" + t;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"        res +\u003d \"\\n\\t \" + tasks.size() + \" tasks in total.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"        return res;","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"qreoct"},"content":"     * Marks a given {@code listOfTasks} as done,","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"qreoct"},"content":"     * then forms a String with information about the {@code TaskList}.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"qreoct"},"content":"     * @param listOfTasks {@code ArrayList\u003cInteger\u003e} representing the index of {@code Task}s to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing information about the {@code TaskList} after the operation.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"qreoct"},"content":"    public String markAsDoneAndAnnounce(ArrayList\u003cInteger\u003e listOfTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"qreoct"},"content":"        StringBuilder res \u003d new StringBuilder(\"Nice! I\u0027ve marked these tasks as done: \\n\\t\\t\");","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"qreoct"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"qreoct"},"content":"            // have to decrement by one since duke.tasks ArrayList is 0-indexed,","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"qreoct"},"content":"            // but the user-provided arguments uses a 1-indexed list","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"qreoct"},"content":"            int index \u003d listOfTasks.get(i) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"qreoct"},"content":"            tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"qreoct"},"content":"            res.append(tasks.get(index));","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"qreoct"},"content":"            if (i !\u003d listOfTasks.size() - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"qreoct"},"content":"                // do not append newline to the last item","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"qreoct"},"content":"                res.append(\"\\n\\t\\t\");","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"qreoct"},"content":"        return res.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"qreoct"},"content":"     * Deletes a given {@code listOfTasks},","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"qreoct"},"content":"     * then forms a String with information about the {@code TaskList}.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"qreoct"},"content":"     * @param listOfTasks {@code ArrayList\u003cInteger\u003e} representing the index of {@code Task}s to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"qreoct"},"content":"     * @return {@code String} containing information about the {@code TaskList} after the operation.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"qreoct"},"content":"    public String deleteTasksAndAnnounce(ArrayList\u003cInteger\u003e listOfTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"qreoct"},"content":"        StringBuilder res \u003d new StringBuilder(\"I\u0027ve removed these tasks: \\n\\t\\t\");","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"qreoct"},"content":"        // reverse-sort the tasks and remove duplicates","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"qreoct"},"content":"        Set\u003cInteger\u003e s \u003d new LinkedHashSet\u003c\u003e(listOfTasks);","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"qreoct"},"content":"        listOfTasks.clear();","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"qreoct"},"content":"        listOfTasks.addAll(s);","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"qreoct"},"content":"        Collections.sort(listOfTasks);","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"qreoct"},"content":"        Collections.reverse(listOfTasks);","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"qreoct"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"qreoct"},"content":"            // have to decrement by one since tasks ArrayList is 0-indexed,","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"qreoct"},"content":"            // but the user-provided arguments uses a 1-indexed list","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"qreoct"},"content":"            int index \u003d listOfTasks.get(i) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"qreoct"},"content":"            res.append(tasks.get(index));","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"qreoct"},"content":"            tasks.remove(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"qreoct"},"content":"            if (i !\u003d listOfTasks.size() - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"qreoct"},"content":"                // do not append newline to the last item","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"qreoct"},"content":"                res.append(\"\\n\\t\\t\");","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"qreoct"},"content":"        res.append(\"\\n\\t \").append(tasks.size()).append(\" tasks remain.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"qreoct"},"content":"        return res.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"qreoct"},"content":"     * Returns a {@code String} containing the {@code Task}s that match the given","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"qreoct"},"content":"     * {@code String query}.","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"qreoct"},"content":"     * @param userQueries {@code String} search query of the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"qreoct"},"content":"     * @returns {@code String} - Newlined list of {@code Task}s.","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"qreoct"},"content":"    public String findAndAnnounce(String userQueries) {","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cQuery\u003e queries \u003d Parser.parseFindQueries(userQueries);","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"qreoct"},"content":"        Stream\u003cTask\u003e matchedTasks \u003d tasks.stream();","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"qreoct"},"content":"        String resultTasks \u003d matchedTasks.filter(t -\u003e queries.stream().allMatch(q -\u003e q.isMatch(t)))","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"qreoct"},"content":"            .map(t -\u003e t.toString()).collect(Collectors.joining(\"\\n\\t  \"));","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"qreoct"},"content":"        if (resultTasks.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"qreoct"},"content":"            return \"Your search didn\u0027t match any tasks.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"qreoct"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"qreoct"},"content":"            StringBuilder res \u003d new StringBuilder(\"Your search matched these tasks:\\n\\t  \");","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"qreoct"},"content":"            res.append(resultTasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"qreoct"},"content":"            return res.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"qreoct"},"content":"     * Checks if there is a {@code Task} in this {@code TaskList} which matches the provided description.","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} to check against","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"qreoct"},"content":"     * @return {@boolean} value","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"qreoct"},"content":"    public boolean hasTaskWithDescription(String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"qreoct"},"content":"        return tasks.stream().anyMatch(t -\u003e t.getDescription().equalsIgnoreCase(description));","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"qreoct"},"content":"     * Sorts the {@code TaskList} according to a given {@sode SortOption}.","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"qreoct"},"content":"     * @param option Sorting method to use.","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"qreoct"},"content":"    public void sort(SortCommand.SortOptions option) {","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"qreoct"},"content":"        Comparator\u003cTask\u003e compareDescription \u003d Comparator.comparing((Task t) -\u003e t.description);","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"qreoct"},"content":"        Comparator\u003cTask\u003e compareType \u003d Comparator.comparing(Task::getType);","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"qreoct"},"content":"        Comparator\u003cTask\u003e compareStatus \u003d (Task t1, Task t2) -\u003e Boolean.compare(t1.isDone, t2.isDone);","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"qreoct"},"content":"        Comparator\u003cTask\u003e compareTime \u003d Comparator.comparing(Task::getTime);","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"qreoct"},"content":"        switch(option) {","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"qreoct"},"content":"        case LEXICOGRAPHIC_DESCENDING:","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"qreoct"},"content":"            tasks.sort(compareDescription.reversed());","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"qreoct"},"content":"        case TASK_TYPE:","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"qreoct"},"content":"            tasks.sort(compareType);","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"qreoct"},"content":"        case TASK_STATUS:","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"qreoct"},"content":"            tasks.sort(compareStatus);","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"qreoct"},"content":"        case TASK_STATUS_DESCENDING:","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"qreoct"},"content":"            tasks.sort(compareStatus.reversed());","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"qreoct"},"content":"        case TASK_TIME:","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"qreoct"},"content":"            tasks.sort(compareTime);","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"qreoct"},"content":"        case TASK_TIME_DESCENDING:","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"qreoct"},"content":"            tasks.sort(compareTime.reversed());","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"qreoct"},"content":"        default:","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"qreoct"},"content":"            tasks.sort(compareDescription);","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"qreoct"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"qreoct"},"content":"     * Returns an indented, newlined, 1-indexed {@code String} of the","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"qreoct"},"content":"     * {@code Task}s contained in this {@code TaskList}.","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"qreoct"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":203,"author":{"gitId":"qreoct"},"content":"        StringBuilder res \u003d new StringBuilder(\"Here are your tasks:\\n\\t \");","lastModifiedDate":"2021-08-16"},{"lineNumber":204,"author":{"gitId":"qreoct"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"qreoct"},"content":"            res.append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"qreoct"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"qreoct"},"content":"                // do not append a newline to the last item","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"qreoct"},"content":"                res.append(\"\\n\\t \");","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"qreoct"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"qreoct"},"content":"        return res.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":213,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":213}},{"path":"src/main/java/duke/tasks/TaskStatuses.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * Enumerates the task statuses supported by Augury.","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"public enum TaskStatuses {","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"    ISDONE,","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"    ISNOTDONE","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"qreoct":9}},{"path":"src/main/java/duke/tasks/TaskTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * Enumerates the task types supported by Augury.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"public enum TaskTypes {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"    TODO,","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"    DEADLINE,","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"    EVENT","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qreoct":10}},{"path":"src/main/java/duke/tasks/TaskWithTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":" * The {@code TaskWithTime} class extends from {@code Task} to additionally include a {@code LocalDateTime time} field.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"public abstract class TaskWithTime extends Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code TaskWithTime} with {@code String description} and {@code LocalDateTime time}.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} Description of task.","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     * @param time {@code LocalDateTime} Time associated with the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"    public TaskWithTime(String description, LocalDateTime time) {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"        super(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code TaskWithTime} with {@code String description} and {@code LocalDateTime time}.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"     * @param description {@code String} Description of task.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"     * @param time {@code LocalDateTime} Time associated with the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     * @param isDone {@code boolean} Done status of task.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    public TaskWithTime(String description, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"     * Gets the time value of this {@code TaskWithTime}.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     * @return {@LocalDateTime time} field.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"        return this.time;","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"     * Compares whether given {@code LocalDateTime} falls on the same date as the {@code time}","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"     * of this {@code TaskWithTime}.","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"     * @param date {@code LocalDateTime} to compare against","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"     * @return {@code boolean} representing whether the two dates match.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch(LocalDateTime date) {","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"        return this.isSameDateAs(date);","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"    private boolean isSameDateAs(LocalDateTime otherDate) {","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"        return otherDate.getYear() \u003d\u003d this.time.getYear()","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"                \u0026\u0026 otherDate.getMonth() \u003d\u003d this.time.getMonth()","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"                \u0026\u0026 otherDate.getDayOfMonth() \u003d\u003d this.time.getDayOfMonth();","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"     * Compares the {@code LocalDateTime} value of this {@code TaskWithTime} with another.","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"qreoct"},"content":"    public int compareTo(TaskWithTime otherTask) {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"qreoct"},"content":"        return otherTask.getTime().compareTo(this.time);","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"qreoct":68}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * The {@code TodoTask} class extends from {@code Task}.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code TodoTask} with {@code String description}.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"     * @param description Description of {@code Task}.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code TodoTask} with {@code String description}","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * and {@code boolean isDone status}.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     * @param description Description of {@code Task}.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"     * @param isDone Status of {@code Task}.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    public TodoTask(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code TaskTypes} query matches this {@code Task}.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"     * @param query {@code TaskTypes} to be compared against this {@code Task}","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"     * @return {@code boolean} value representing a match","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch(TaskTypes query) {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"        return query.equals(TaskTypes.TODO);","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"    public String getType() {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        return \"[T]\";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"     * Prints {@code TodoTask} description with the prefix [T].","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":49}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":" * The {@code Ui} class handles interfacing with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"     * Prints a string in a specific response format.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"     * @param message {@code String} to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    public void speak(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"        System.out.println(\"\\t_________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"        System.out.println(\"\\t \" + message);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"        System.out.println(\"\\t_________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qreoct":19}},{"path":"src/main/java/duke/util/Query.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.util;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskStatuses;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import duke.tasks.TaskTypes;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":" * The {@code Query} class represents a user query when using the {@code Find} command.","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"public class Query {","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    private final String queryType;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"    private String queryString;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    private TaskStatuses queryStatus;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    private TaskTypes queryTaskType;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"    private LocalDateTime queryDateTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"     * Initializes a {@code Query} with a specified {@code queryType} and {@code queryValue}.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"     * @param queryType {@code String} representing type of {@code Query}","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"     * @param queryValue Value of Query. One of String, TaskStatuses, TaskTypes, or LocalDateTime","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    public Query (String queryType, Object queryValue) {","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        this.queryType \u003d queryType;","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"        if (queryValue instanceof String) {","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"            this.queryString \u003d (String) queryValue;","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        } else if (queryValue instanceof TaskStatuses) {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"            this.queryStatus \u003d (TaskStatuses) queryValue;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"        } else if (queryValue instanceof TaskTypes) {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"            this.queryTaskType \u003d (TaskTypes) queryValue;","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"        } else if (queryValue instanceof LocalDateTime) {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"            this.queryDateTime \u003d (LocalDateTime) queryValue;","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"     * Checks if given {@code Task} matches with the {@code Query}.","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"     * @param task {@code Task} to be compared against the {@code Query}","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"     * @return {@code boolean} value representing a match","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"    public boolean isMatch (Task task) {","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"        switch (queryType) {","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"        case \"string\":","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"            return task.isMatch(queryString);","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"        case \"status\":","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"            return task.isMatch(queryStatus);","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"        case \"type\":","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"            return task.isMatch(queryTaskType);","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"        case \"datetime\":","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"            return task.isMatch(queryDateTime);","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"        default:","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"qreoct":60}},{"path":"src/main/java/duke/util/StringCleaner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidTaskCreationException;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":" * The {@code StringCleaner} class is a utility class that operates on {@code Strings}.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"public class StringCleaner {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"     * Returns an {@code ArrayList\u003cInteger\u003e} from a {@code String}.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"     * @param commaSeparatedString User provided String.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"     * @return An {@code ArrayList\u003cInteger\u003e}.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    public static ArrayList\u003cInteger\u003e toArrayListInteger(String commaSeparatedString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        String[] strings \u003d commaSeparatedString.split(\",\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"        // clean input","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"            strings[i] \u003d strings[i].trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"        // convert String[] to ArrayList\u003cInteger\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"        ArrayList\u003cInteger\u003e integers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"        for (String s : strings) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"            integers.add(Integer.parseInt(s));","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"        return integers;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"     * Returns an {@code LocalDateTime} from a {@code String}.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"     * @param dateInput User provided String (should be lowercase).","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"     * @return A {@code LocalDateTime} object.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"     * @throws InvalidTaskCreationException If input String does not match format.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    public static LocalDateTime toLocalDateTime(String dateInput) throws AuguryException {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"        assert dateInput.equals(dateInput.toLowerCase());","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"            return LocalDateTime.parse(dateInput, formatter);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"            throw new InvalidTaskCreationException(\"Please use the YYYY-MM-DD HHMM format to specify time!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"qreoct":53}},{"path":"src/main/resources/view/AppWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"\u003cfx:root prefHeight\u003d\"640.0\"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"         prefWidth\u003d\"450.0\"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"         type\u003d\"VBox\"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.17\"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"        \u003cHBox fx:id\u003d\"titleBar\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"            \u003cHyperlink fx:id\u003d\"helpButton\"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"                       onAction\u003d\"#handleHelpButton\"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"                       text\u003d\"Help\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"            \u003cHyperlink fx:id\u003d\"settingsButton\"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"                       onAction\u003d\"#handleSettingsButton\"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"                       text\u003d\"Settings\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"                    fitToHeight\u003d\"true\"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"                    prefWidth\u003d\"372.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"                    vbarPolicy\u003d\"ALWAYS\"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"                    VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" focusTraversable\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"            \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"                       onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"                       minHeight\u003d\"41.0\"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"                       prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"                       HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"                       promptText\u003d\"Enter your command here...\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"            \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"                    mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"                    onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"                    minHeight\u003d\"41.0\"","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"                    prefWidth\u003d\"76.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"                    text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"qreoct":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"\u003cfx:root prefWidth\u003d\"372.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"         minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"         type\u003d\"HBox\"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"         alignment\u003d\"CENTER_RIGHT\"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.17\"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"    \u003cHBox fx:id\u003d\"messageContainer\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"               styleClass\u003d\"dialog__text\"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"               text\u003d\"Label\"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"               wrapText\u003d\"true\"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"               HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"qreoct":20}},{"path":"src/main/resources/view/ImageDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"\u003cfx:root prefWidth\u003d\"372.0\"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"         minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"         type\u003d\"HBox\"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"         alignment\u003d\"CENTER_RIGHT\"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.17\"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    ","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"    \u003cHBox fx:id\u003d\"messageContainer\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"               styleClass\u003d\"dialog__text\"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"               text\u003d\"Label\"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"               wrapText\u003d\"true\"","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"               HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"               fitHeight\u003d\"75.0\"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"               fitWidth\u003d\"75.0\"","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"               pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"               preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"qreoct":28}},{"path":"src/main/resources/view/SettingsWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.ChoiceBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"\u003cStage title\u003d\"Settings\"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"       xmlns\u003d\"http://javafx.com/javafx/8.0.17\"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"       xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"            \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"            \u003cGridPane vgap\u003d\"10.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"              \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"              \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"              \u003crowConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"              \u003c/rowConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"                  \u003cLabel text\u003d\"Theme\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"                  \u003cChoiceBox fx:id\u003d\"choiceBox\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"                  \u003cLabel text\u003d\"Settings\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"                        \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"                  \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"            \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"100.0\" spacing\u003d\"50.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"                  \u003cButton text\u003d\"Save\"","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"                          fx:id\u003d\"saveButton\"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"                          onAction\u003d\"#handleSettingsSave\"/\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"                  \u003cButton text\u003d\"Cancel\"","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"                          fx:id\u003d\"cancelButton\"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"                          onAction\u003d\"#handleSettingsCancel\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"qreoct"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"qreoct"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"qreoct"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"qreoct"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"qreoct"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"qreoct"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"qreoct"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"qreoct"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"qreoct"},"content":"\u003c/Stage\u003e","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"qreoct":64}},{"path":"src/test/java/duke/io/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.io;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.InvalidActionException;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    public void getListCommandFromInput() throws AuguryException {","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"        Command c \u003d p.parse(\"list\");","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"        assertTrue(c instanceof ListCommand);","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"    public void getDeleteCommandFromInput() throws AuguryException {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"        Command c \u003d p.parse(\"delete 2,3\");","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        assertTrue(c instanceof DeleteCommand);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"    public void invalidInput_nonInteger_exceptionThrown() throws AuguryException {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"        Exception e \u003d assertThrows(InvalidActionException.class, () -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"            Command c \u003d p.parse(\"delete 1,a,b,c\");","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"        });","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"        String expectedMessage \u003d \"Please enter a valid task number.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"        String actualMessage \u003d e.getMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"    public void invalidInput_negativeInteger_exceptionThrown() throws AuguryException {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"qreoct"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"qreoct"},"content":"        Exception e \u003d assertThrows(InvalidActionException.class, () -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"qreoct"},"content":"            Command c \u003d p.parse(\"delete 1,-999\");","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"qreoct"},"content":"        });","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"qreoct"},"content":"        String expectedMessage \u003d \"Please enter a valid task number.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"qreoct"},"content":"        String actualMessage \u003d e.getMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"qreoct"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"qreoct":55}},{"path":"src/test/java/duke/tasks/TaskFactoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"import duke.exceptions.AuguryException;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"public class TaskFactoryTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"    public void createTaskFromFileTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"        TaskFactory tf \u003d new TaskFactory();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"        Task t \u003d tf.createTask(\"[T] wash dishes\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"        assertFalse(t instanceof EventTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"        assertTrue(t instanceof TodoTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"    public void returnNullWithMalformattedEventTypeTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"        TaskFactory tf \u003d new TaskFactory();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"        assertNull(tf.createTask(\"woowo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"    public void throwsErrorWithMalformattedTime() throws AuguryException {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"        // gleaned from https://www.baeldung.com/junit-assert-exception","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"        TaskFactory tf \u003d new TaskFactory();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"        Exception e \u003d assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"qreoct"},"content":"            tf.createTask(\"[E] do this (at: jjjjj)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"qreoct"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"qreoct"},"content":"        String expectedMessage \u003d \"Text \u0027jjjjj\u0027 could not be parsed at index 0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"qreoct"},"content":"        String actualMessage \u003d e.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"qreoct"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"qreoct":44}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"    public void markAsDoneTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"        Task t \u003d new TodoTask(\"wash dishes\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"        assertFalse(t.isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"        assertTrue(t.isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"qreoct":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"todo item one","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"todo item one","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"event item two /at 2021-2-22 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"deadline item three /by 2021-4-19 0900","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"done 500","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"deadline ","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"deadline x","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"event item four","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"event /at xyz","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"event item four /by tomorrow","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"event item four /at tomorrow","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"event item four /at 2021-05-22 2999","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"event item four /at 2021-05-22 2359","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"done 2,3","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"todo five","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"todo six","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"todo seven","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"todo eight","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"find  ","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"find i","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"qreoct"},"content":"find []","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"qreoct"},"content":"find [x] e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"qreoct"},"content":"find 2021-05-22 [d]","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"qreoct"},"content":"find 2021-05-22 [e]","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"qreoct"},"content":"sort 6","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"qreoct"},"content":"delete 9","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"delete 1,9,1","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"qreoct"},"content":"delete 5,2","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"qreoct"},"content":"sort","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"qreoct"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"qreoct"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qreoct":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"javac --module-path %PATH_TO_FX% --add-modules ALL-MODULE-PATH -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"java -classpath ..\\bin duke.Launcher -mode console \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qreoct":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"# delete data from previous run","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"then","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"    rm -rf ./data","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"fi","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"find ../src/main/java/*/*.java \u003e sources.txt","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qreoct"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"qreoct"},"content":"java -classpath ../bin duke/Launcher -mode console \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qreoct":10,"-":36}},{"path":"text-ui-test/runtestCI.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"@ECHO OFF","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"REM delete output from previous run","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"    exit /b 1","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":")","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qreoct"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qreoct"},"content":"java -classpath ..\\bin duke.Launcher -mode console \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"qreoct"},"content":"REM compare the output to the expected output","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qreoct"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"qreoct":22}},{"path":"text-ui-test/viewtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"qreoct"},"content":"@ECHO OFF","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qreoct"},"content":"if exist EXPECTED_2.TXT del EXPECTED_2.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qreoct"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qreoct"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qreoct"},"content":"javac --module-path %PATH_TO_FX% --add-modules ALL-MODULE-PATH -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qreoct"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qreoct"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qreoct"},"content":"    exit /b 1","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qreoct"},"content":")","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qreoct"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qreoct"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qreoct"},"content":"java -classpath ..\\bin duke.Launcher -mode console \u003c input.txt \u003e EXPECTED_2.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qreoct"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qreoct"},"content":"FC EXPECTED.TXT EXPECTED_2.TXT","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qreoct":17}}]
