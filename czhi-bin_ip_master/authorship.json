[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"repositories {","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"dependencies {","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"run {","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"czhi-bin":26,"-":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     * A constructor for a dialog box.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * @param text The text to be shown.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     * @param img The profile picture for the speaker.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"        dialog.setTranslateX(10.0);","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"        DialogBox db \u003d new DialogBox(s, i);","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"    public static DialogBox getDukeDialog(String s, Image i) {","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"        DialogBox db \u003d new DialogBox(s, i);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"czhi-bin":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * Encapsulate a bot which helps user to keep track of a list of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"public class Duke {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    private boolean isActive;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     * Constructor of Duke","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"        taskList.loadFromList(storage.load());","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"        parser \u003d new Parser(taskList, storage, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"        isActive \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     * Takes in the user\u0027s input and returns the response","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"     * that duke is going to display on the GUI.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     * @return A string containing the response to be displayed under duke.","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        if (isActive) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"            assert isActive : \"Should only respond when duke is active\";","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"            try {","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"                DukeCommand c \u003d parser.processInput(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"                if (c instanceof ExitCommand) {","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"                    isActive \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"                return c.execute();","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"                return e.getMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"        return \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"czhi-bin":56,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * A Launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public class Launcher {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"czhi-bin":15}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":" * @version  Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * The main entry point for all JavaFX applications.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * The start method is called after the init method has returned,","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * and after the system is ready for the application to begin running.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"     * NOTE: This method is called on the JavaFX Application Thread.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     *                     the application scene can be set.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     *                     Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     *                     primary stages.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * @throws Exception if something goes wrong","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"            primaryStage.setTitle(\"Duke Bot\");","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"            primaryStage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"czhi-bin":50}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shrek.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pepe.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     * The function to invoke once the Main has loaded. This shows","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     * the greeting message and sets some property.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"                DialogBox.getDukeDialog(Ui.showGreetingMessage(), dukeImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * then appends them to the dialog container. Clears the user input after processing. If the","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     * response is empty string, it means that user has entered bye command. The platform will","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"     * close after 5 seconds.","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"        if (!response.equals(\"\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"            );","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"            if (response.equals(Ui.showFarewellMessage())) {","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"                new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"                    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"                    public void run() {","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"                        Platform.exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"                        System.exit(0);","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"                    }","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"                }, 3000);","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"            assert response.equals(\"\") : \"Response should be empty because duke is not active anymore\";","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"            dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"czhi-bin":82}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates an Add command that deals with adding task to the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public class AddCommand extends DukeCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    private final Task task;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for an Add command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param task    The task to be added to the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    public AddCommand(Ui ui, Storage storage, TaskList list, Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     * Executes the Add command. Adds task to the task list and","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     * prints a message after adding, and update the local data file.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"    public String execute() {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"        list.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"        storage.save(list.getList());","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        return ui.addTaskMessage(list.size(), task);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":41}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates a delete commands that deals with deleting a specific task from the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"public class DeleteCommand extends DukeCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a Delete Command.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param ui         The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param storage    The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param list       The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * @param taskNumber The task number that corresponds to the task that user want to delete.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    public DeleteCommand(Ui ui, Storage storage, TaskList list, int taskNumber) {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     * Executes the Delete command. Deletes task to the task list and","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * prints a message after deleting, and update the local data file.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     * @throws NoSuchTaskException When the task number is invalid.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    public String execute() throws NoSuchTaskException {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"            Task t \u003d list.delete(taskNumber);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"            storage.save(list.getList());","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"            return ui.deleteTaskMessage(list.size(), t);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":48}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates a Done commands that deals with marking a task in the task list as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public class DoneCommand extends DukeCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a Done Command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param ui         The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param storage    The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param list       The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param taskNumber The task number that corresponds to the task that user want to mark as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    public DoneCommand(Ui ui, Storage storage, TaskList list, int taskNumber) {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     * Executes the Delete command. Marks a task in the task list as done,","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     * prints a message after marking, and update the local data file.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     * @throws NoSuchTaskException When the task number is invalid.s","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"    public String execute() throws NoSuchTaskException {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"            storage.save(list.getList());","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"            return ui.markDoneMessage(list.mark(taskNumber));","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":46}},{"path":"src/main/java/duke/command/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates commands that can be executed by the duke program.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public abstract class DukeCommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    protected final Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    protected final Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    protected final TaskList list;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a DukeCommand.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    public DukeCommand(Ui ui, Storage storage, TaskList list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     * @return A message to be displayed on the GUI.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     * @throws DukeException When an error occurred.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"    public abstract String execute() throws DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     * Checks if the command is an Exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     * Returns false by default, only overridden by","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * Exit class to return true.","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"     * @return false","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":50}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates an Exit commands that deals with exiting the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"public class ExitCommand extends DukeCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for an Exit Command.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    public ExitCommand(Ui ui, Storage storage, TaskList list) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"     * Executes the exit command. Prints farewellMessage","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     * and save the task list onto the local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    public String execute() {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"        storage.save(list.getList());","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        return ui.showFarewellMessage();","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"     * Checks if the command is an Exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"     * Returns true.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     * @return true","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"        return true;","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":47}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates a Find commands that deals with finding related tasks given a keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"public class FindCommand extends DukeCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a Find Command.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param keyword The keyword to find for related task in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    public FindCommand(Ui ui, Storage storage, TaskList list, String keyword) {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     * Executes the Find command. The command tries to find tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     * that have descriptions related to the keyword, and add those","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     * tasks to a list, then prints the list of related task.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"    public String execute() {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"        return ui.showRelatedTasks(list.findRelatedTask(keyword));","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":39}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"public class HelpCommand extends DukeCommand {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a DukeCommand.","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    public HelpCommand(Ui ui, Storage storage, TaskList list) {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @return A message to be displayed on the GUI.","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * @throws DukeException When an error occurred.","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        return ui.showHelpMessage();","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"czhi-bin":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates a List commands that deals with listing out all the task in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"public class ListCommand extends DukeCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a List Command.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    public ListCommand(Ui ui, Storage storage, TaskList list) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"     * Executes the List command. Prints the list of","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     * tasks currently stored in the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    public String execute() {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"        return ui.listTasks(list.getList());","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":35}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates a Sort command that deals sorting the task in the task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public class SortCommand extends DukeCommand {","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    private final boolean isReverse;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a DukeCommand.","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param ui        The Ui handler that handles the printing of message with respect to the command.","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param storage   The storage handler that handles saving or loading data to local directory.","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param list      The TaskList handler that handles operation related to task.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param isReverse The order of sorting.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    public SortCommand(Ui ui, Storage storage, TaskList list, boolean isReverse) {","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        super(ui, storage, list);","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        this.isReverse \u003d isReverse;","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * @return A message to be displayed on the GUI.","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     * @throws DukeException When an error occurred.","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"        list.sortTaskList(isReverse);","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        return ui.sortListMessage(list.getList());","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"czhi-bin":41}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred during the usage of duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * This abstract class is the general class of exception","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * produced by failed or interrupted operations.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":13}},{"path":"src/main/java/duke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred while trying","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * to create a task with date and time. The datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * format entered by the user is not supported by","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to indicate to the","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * user that the inputted datetime format is not supported.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * The message also included the format that the program supports.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        return \"Entered DateTime format not supported. \"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"                + \"Please enter Date and Time in YYYY-MM-DD HH:MM.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"czhi-bin":29}},{"path":"src/main/java/duke/exception/NoCommandDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred due to empty description of a command.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"public class NoCommandDescriptionException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"    public NoCommandDescriptionException() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"        super();","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to tell the","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * user that a command must come with a description.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"        return \"Hello??? Your command no description one ah???\";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":24}},{"path":"src/main/java/duke/exception/NoDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred due to empty","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * datetime description of a deadline or event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"public class NoDateTimeException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"    public NoDateTimeException() {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"        super();","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to tell the","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * user that a deadline or event task must come","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * with a datetime.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        return \"Hello??? Your task no date and time one ah???\";","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":26}},{"path":"src/main/java/duke/exception/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred while trying to do","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * an operation related to a task where it couldn\u0027t be found.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to indicate to the","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"     * user that the task they want to do some operations on","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * cannot be found.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"        return \"Hello??? You sure got this task or not???\";","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"czhi-bin":23}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred when processing user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * The user input could not be understood by the program or the","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * operation is not supported by the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to signal user","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * that the input could not be read or the operation","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * they require is not supported by the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        return \"I cannot understand what you want lah!!!\";","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":27}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.NoCommandDescriptionException;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.NoDateTimeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the processing of user inputs to duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"    private final TaskList list;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * Creates a Parser that handles user input and turn it into respective","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     * commands and execute the required functions that user demands.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that is handling the list of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The Storage handler that is in-charged of saving and loading files on local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles printing of output, if required.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"    public Parser(TaskList list, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"     * Returns the respective DukeCommand that user want duke to do.","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"     * If the command is not supported","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"     * @param userInput User\u0027s input on what they want duke to do.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"     * @return The respective command object.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"     * @throws DukeException If some error occurred in the processing of user input,","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"     *                       like the user inputted some command that duke does not support.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"    public DukeCommand processInput(String userInput) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"        String commandType \u003d getCommandType(userInput).toLowerCase();","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"        String commandDescription \u003d getCommandDescription(userInput, \" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"        if (checkDescriptionExist(commandDescription, commandType)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"            switch (commandType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"            case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"                return new ListCommand(ui, storage, list);","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"                return new ExitCommand(ui, storage, list);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"            case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"                return new DoneCommand(ui, storage, list, getTaskNumber(commandDescription));","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"            case \"todo\": case \"deadline\": case \"event\":","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"                return new AddCommand(ui, storage, list, processTaskDescriptions(commandType, userInput));","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"                return new DeleteCommand(ui, storage, list, getTaskNumber(commandDescription));","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"            case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"                return new FindCommand(ui, storage, list, commandDescription);","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"            case \"sort\":","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"                return new SortCommand(ui, storage, list, checkReverseSort(commandDescription));","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"            case \"help\":","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"                return new HelpCommand(ui, storage, list);","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"            default:","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"        throw new NoCommandDescriptionException();","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"czhi-bin"},"content":"    private Task processTaskDescriptions(String taskType, String userInput) throws InvalidDateTimeException,","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"czhi-bin"},"content":"            NoDateTimeException, NoCommandDescriptionException {","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"czhi-bin"},"content":"        if (checkDescriptionExist(userInput, taskType)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"czhi-bin"},"content":"            String commandDescription \u003d getCommandDescription(userInput, \" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"czhi-bin"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"czhi-bin"},"content":"            case \"deadline\": case \"event\":","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"czhi-bin"},"content":"                return createTaskWithDateTime(commandDescription, taskType);","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"czhi-bin"},"content":"            default:","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"czhi-bin"},"content":"                return new ToDo(commandDescription, false);","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"czhi-bin"},"content":"        throw new NoCommandDescriptionException();","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"czhi-bin"},"content":"    private String getCommandType(String userInput) {","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"czhi-bin"},"content":"        return userInput.split(\" \")[0];","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"czhi-bin"},"content":"    private boolean checkDescriptionExist(String commandDescription, String commandType)","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"czhi-bin"},"content":"            throws NoCommandDescriptionException {","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"czhi-bin"},"content":"        if (!(commandType.equals(\"list\") || commandType.equals(\"bye\"))) {","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"czhi-bin"},"content":"            if (commandDescription.isBlank()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"czhi-bin"},"content":"                throw new NoCommandDescriptionException();","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"czhi-bin"},"content":"        return true;","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"czhi-bin"},"content":"    private Task createTaskWithDateTime(String commandDescription, String taskType) throws NoDateTimeException,","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"czhi-bin"},"content":"            InvalidDateTimeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"czhi-bin"},"content":"        LocalDateTime dt \u003d getDateTime(commandDescription, taskType);","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"czhi-bin"},"content":"        String taskDescription \u003d getTaskDescription(commandDescription);","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"czhi-bin"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"czhi-bin"},"content":"            return new Deadline(taskDescription, false, dt);","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"czhi-bin"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"czhi-bin"},"content":"            return new Event(taskDescription, false, dt);","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"czhi-bin"},"content":"    private String getCommandDescription(String userInput, String substring) {","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"czhi-bin"},"content":"        int index \u003d userInput.indexOf(substring);","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"czhi-bin"},"content":"        String description \u003d userInput.substring(index + 1);","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"czhi-bin"},"content":"        return description;","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"czhi-bin"},"content":"    private String getTaskDescription(String commandDescription) throws NoDateTimeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"czhi-bin"},"content":"        int slashIndex \u003d commandDescription.indexOf(\"/\");","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"czhi-bin"},"content":"        if (slashIndex \u003c 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"czhi-bin"},"content":"            throw new NoDateTimeException();","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"czhi-bin"},"content":"        return commandDescription.substring(0, slashIndex - 1);","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"czhi-bin"},"content":"    private int getTaskNumber(String commandDescription) {","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"czhi-bin"},"content":"        return Integer.parseInt(commandDescription.split(\" \")[0]);","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":160,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":161,"author":{"gitId":"czhi-bin"},"content":"    private LocalDateTime getDateTime(String taskDescription, String taskType) throws NoDateTimeException,","lastModifiedDate":"2021-09-09"},{"lineNumber":162,"author":{"gitId":"czhi-bin"},"content":"            InvalidDateTimeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":163,"author":{"gitId":"czhi-bin"},"content":"        String indicator;","lastModifiedDate":"2021-09-09"},{"lineNumber":164,"author":{"gitId":"czhi-bin"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":165,"author":{"gitId":"czhi-bin"},"content":"            indicator \u003d \"/by\";","lastModifiedDate":"2021-09-09"},{"lineNumber":166,"author":{"gitId":"czhi-bin"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"czhi-bin"},"content":"            indicator \u003d \"/at\";","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":170,"author":{"gitId":"czhi-bin"},"content":"        int index \u003d taskDescription.indexOf(indicator);","lastModifiedDate":"2021-09-09"},{"lineNumber":171,"author":{"gitId":"czhi-bin"},"content":"        if (index \u003e\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"czhi-bin"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"czhi-bin"},"content":"                return LocalDateTime.parse(taskDescription.substring(index + 4),","lastModifiedDate":"2021-09-09"},{"lineNumber":174,"author":{"gitId":"czhi-bin"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-M-d H:m\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"czhi-bin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"czhi-bin"},"content":"                throw new InvalidDateTimeException();","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"czhi-bin"},"content":"        throw new NoDateTimeException();","lastModifiedDate":"2021-09-09"},{"lineNumber":181,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":183,"author":{"gitId":"czhi-bin"},"content":"    private boolean checkReverseSort(String commandDescription) {","lastModifiedDate":"2021-09-09"},{"lineNumber":184,"author":{"gitId":"czhi-bin"},"content":"        return commandDescription.toLowerCase().contains(\"reverse\");","lastModifiedDate":"2021-09-09"},{"lineNumber":185,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":186,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"czhi-bin":186}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":" * Encapsulate the handling of loading and storing files on local directory for duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    private static final String FOLDER_NAME \u003d \"data\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * Creates a data file named \u0027duke.txt\u0027 to store the task list on local directory under the folder data.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     * Prints different message when it is created successfully or failed due to an error or file existed.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    public void createFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        File file \u003d new File(String.format(\"%s/%s\", FOLDER_NAME, FILE_NAME));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"        boolean isCreated \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"            isCreated \u003d file.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        } finally {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"            if (isCreated) {","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"                System.out.println(\"New data file has been created.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"                System.out.println(\"Data file already exist.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     * Creates a folder named \u0027data\u0027 to contain the data file storing task list on local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"     * Prints message if the folder could not be created.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    public void createFolder() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"        File folder \u003d new File(FOLDER_NAME);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"        boolean created \u003d folder.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"        if (!created) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"Folder could not be created.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"     * Loads the data file stored on the local directory into duke to get the previously stored task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"     * If the data file does not exist, means it is the first time user use duke, proceed to create folder and file.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"     * Else, load the data from the file to an ArrayList to be used by TaskList class.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"     * @return The ArrayList of Task to be used by TaskList class to recreate the stored task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"        File file \u003d new File(String.format(\"%s/%s\", FOLDER_NAME, FILE_NAME));","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"I have found past data in your local storage, \"","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"                    + \"type \u0027list\u0027 to view the previous tasks.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"                String curr \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"                Task task \u003d TaskList.stringToTask(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"            sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"No past data found in your local storage, initializing from blank state.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"            createFolder();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"            createFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"     * Saves the current task list to a data file on local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"     * Prints error message if an IOException is thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"     * @param taskList The current task list to be saved to the data file.","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"            FileWriter writer \u003d new FileWriter(String.format(\"%s/%s\", FOLDER_NAME, FILE_NAME));","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"czhi-bin":101}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the representation of a task with deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * The deadline task has a description of what is due by a certain datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"public class Deadline extends TaskWithDateTime {","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * Constructor of a Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * @param description The description of the task to be done","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone      Boolean representing if task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param by          The deadline for the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"        super(description, isDone, \u0027D\u0027, by);","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the type of task,","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     * whether the task is done, its description, and its deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"    public String checkStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        return super.checkStatus() + \" \" + showDeadline();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the dateline of the task,","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"     * in the format of dd MMM yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    public String showDeadline() {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"(by: %s)\", dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")));","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"     * Used in storing of data to local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"        return super.toString() + String.format(\"|%s\", dateTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the representation of an event.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * The event has a description of what is it about,","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * and when is the event occurring.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public class Event extends TaskWithDateTime {","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * Constructor of an Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * @param description The description of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone      Boolean representing if user went for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param when        The datetime of the event occurring.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    public Event(String description, boolean isDone, LocalDateTime when) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        super(description, isDone, \u0027E\u0027, when);","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the type of task,","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     * whether the user went for the event, the description","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     * of the event, and the datetime of it occurring.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    public String checkStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        return super.checkStatus() + \" \" + showWhen();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the datetime of the event,","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     * in the format of dd MMM yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information on when the event is happening.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    public String showWhen() {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"(at: %s)\", dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")));","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"     * Used in storing of data to local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"        return super.toString() + String.format(\"|%s\", dateTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Encapsulate the representation of a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * The task has a description of what the task is about,","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * and a boolean to store if the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    protected final String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * A one letter character to represent the type of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    protected final char representation;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param description    The description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone         Boolean representing if task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * @param representation The type of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    public Task(String description, boolean isDone, char representation) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"        this.representation \u003d representation;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the type of task,","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     * whether the task is done, and its description.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"    public String checkStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"[%s][%s] %s\", representation, (isDone ? \u0027X\u0027 : \u0027 \u0027), description);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"     * Used in storing of data to local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"%s|%c|%s\", representation, (isDone ? \u00271\u0027 : \u00270\u0027), description);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"     * Returns true if the task description contains the keyword provided by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"     * @param s The keyword to search for in the description.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"     * @return True if the description contains the keyword, else false.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"    public boolean findKeyword(String s) {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"        return description.contains(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"     * Compares the task description with another task.","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"     * @param t The task to be compared with.","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"     * @return -1 if the description for this task is lexicographically smaller, 0 if same, else 1.","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"        return description.compareTo(t.description);","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"czhi-bin":79}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import java.util.List;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the operations related to managing task.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * Returns a task created from the description mentioned in the string.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * Used to convert stored data from local directory into task.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * @param str The string with a task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     * @return The created task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    public static Task stringToTask(String str) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        String[] taskData \u003d str.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"        boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"        case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(taskData[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"            return new Deadline(taskData[2], isDone, by);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"            LocalDateTime at \u003d LocalDateTime.parse(taskData[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"            return new Event(taskData[2], isDone, at);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"            return new ToDo(taskData[2], isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     * Adds the task to current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"     * Deletes a specific task corresponding to the number in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"     * @param taskNumber The task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"     * @return The task deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"     * @throws NoSuchTaskException When the task number is invalid.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"    public Task delete(int taskNumber) throws NoSuchTaskException {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e list.size() + 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"        return list.remove(taskNumber - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"     * Marks a specific task corresponding to the number in the list as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"     * @param taskNumber The task number.","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"     * @throws NoSuchTaskException When the task number is invalid.","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"    public Task mark(int taskNumber) throws NoSuchTaskException {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e list.size() + 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"        Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"        task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"     * Returns the number of task in the current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"     * @return The number of task in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"        return list.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"     * Returns the current list of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"     * @return Returns an ArrayList consisting of all the Task stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"        return list;","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"czhi-bin"},"content":"     * Stores the task from the given task list into the current task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"czhi-bin"},"content":"     * @param list The task list to be stored to the current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"czhi-bin"},"content":"    public void loadFromList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"czhi-bin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"czhi-bin"},"content":"     * Returns an ArrayList containing task related to the keyword provided by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"czhi-bin"},"content":"     * @param s The keyword to search for in the description of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"czhi-bin"},"content":"     * @return The list containing the related task.","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"czhi-bin"},"content":"    public List\u003cTask\u003e findRelatedTask(String s) {","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"czhi-bin"},"content":"        Stream\u003cTask\u003e taskStream \u003d list.stream().filter(task -\u003e task.findKeyword(s));","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"czhi-bin"},"content":"        List\u003cTask\u003e list \u003d Arrays.asList(taskStream.toArray(Task[]::new));","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"czhi-bin"},"content":"        return list;","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"czhi-bin"},"content":"     * Sorts the task list according to the date and time.","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"czhi-bin"},"content":"    public void sortTaskList(boolean isReverse) {","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"czhi-bin"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"czhi-bin"},"content":"            for (int j \u003d i + 1; j \u003c list.size(); j++) {","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"czhi-bin"},"content":"                if (!isReverse) {","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"czhi-bin"},"content":"                    if (list.get(i).compareTo(list.get(j)) \u003d\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"czhi-bin"},"content":"                        Task temp \u003d list.get(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"czhi-bin"},"content":"                        list.set(i, list.get(j));","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"czhi-bin"},"content":"                        list.set(j, temp);","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"czhi-bin"},"content":"                    }","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"czhi-bin"},"content":"                } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"czhi-bin"},"content":"                    if (list.get(i).compareTo(list.get(j)) \u003d\u003d -1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"czhi-bin"},"content":"                        Task temp \u003d list.get(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"czhi-bin"},"content":"                        list.set(i, list.get(j));","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"czhi-bin"},"content":"                        list.set(j, temp);","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"czhi-bin"},"content":"                    }","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"czhi-bin"},"content":"                }","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"czhi-bin":146}},{"path":"src/main/java/duke/task/TaskWithDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * Encapsulate the representation of a task with date and time.","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * The task has a description of what the task is about,","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * and a boolean to store if the task is done.","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public class TaskWithDateTime extends Task {","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    protected final LocalDateTime dateTime;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param description    The description of the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone         Boolean representing if task is done.","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param representation The type of task.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param dt             The Date and Time for the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    public TaskWithDateTime(String description, boolean isDone, char representation, LocalDateTime dt) {","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        super(description, isDone, representation);","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        this.dateTime \u003d dt;","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    private int compareDateTime(TaskWithDateTime t) {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"        return this.dateTime.compareTo(t.dateTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     * Compares the task description with another task.","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     * Checks time as well. If the other task do not have Date and Time,","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     * it is deemed to be \"larger\" than the task with Date and Time.","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"     * @param t The task to be compared with.","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     * @return -1 if the description for this task is lexicographically smaller","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     *         and chronologically later, 0 if same, else 1.","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"        if (t instanceof TaskWithDateTime) {","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"            if (super.compareTo(t) !\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"                TaskWithDateTime t1 \u003d (TaskWithDateTime) t;","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"                return compareDateTime(t1);","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"        return -1;","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"czhi-bin":53}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the representation of a todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * The task has a description of what the user wants to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"     * Constructor of a ToDo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * @param description The description of the task to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone      Boolean representing if task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"        super(description, isDone, \u0027T\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * Compares the task description with another task.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * Checks time as well. If the other task do not have Date and Time,","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     * it is deemed to be \"larger\" than the task with Date and Time.","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"     * @param t The task to be compared with.","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     * @return -1 if the description for this task is lexicographically smaller","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     *         and chronologically later, 0 if same, else 1.","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"        if (t instanceof TaskWithDateTime) {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"            return 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        return super.compareTo(t);","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":38}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.util.List;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the handling of user interactions of duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 10","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    private static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    private static final String WELCOME_MSG \u003d \"Welcome to duke you little shit. What do you want from me?\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"            + \"Type \\\"help\\\" if you are dumb and requires help.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    private static final String FAREWELL_MSG \u003d \"Bye bye, I go sleep already. See you again.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_TODO \u003d \"todo \u003cdescription\u003e - Adds a Todo task with the specified description.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_DEADLINE \u003d \"deadline \u003cdescription\u003e \u003c/by\u003e \u003cyyyy-mm-dd\u003e \u003chh:mm\u003e\"","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"            + \"- Adds a Deadline task.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_EVENT \u003d \"event \u003cdescription\u003e \u003c/by\u003e \u003cyyyy-mm-dd\u003e \u003chh:mm\u003e\"","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"            + \"- Adds a Event.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_DELETE \u003d \"delete \u003ctask number\u003e - Deletes the task corresponding to the number.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_DONE \u003d \"done \u003ctask number\u003e - Mark the task corresponding to the number as done.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_LIST \u003d \"list - List out all the tasks added.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_FIND \u003d \"find \u003ckeyword\u003e - Finds all task with description containing the keyword.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_BYE \u003d \"bye - Exits the application\";","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"    private static final String HELP_SORT \u003d \"sort \u003creverse\u003e - Sorts the task list.\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"            + \"Adding the optional reverse flag reverse the sorting order.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     * Returns farewell message when the user exits duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     * @return A farewell message","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    public static String showFarewellMessage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"        return FAREWELL_MSG;","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     * Returns greeting message when the user exits duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     * @return A welcome message.","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"    public static String showGreetingMessage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"        return WELCOME_MSG;","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted message when a task is added from the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     * Message includes the descriptions of the task and number of task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"     * @param taskLeft Number of task in the task list after adding the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"     * @param t     The task to be added.","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"     * @return A formatted message to show that task has been added.","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"    public String addTaskMessage(int taskLeft, Task t) {","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"        String s \u003d \"Got it. I\u0027ve added this task:\\n\" + INDENTATION + \"  \" + t.checkStatus();","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"        s +\u003d String.format(\"\\nNow you have %d tasks in the list.\", taskLeft);","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"        return s;","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted message when a task is deleted from the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"     * Message includes the descriptions of the task and number of task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"     * @param taskLeft Number of task in the task list after deleting the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"     * @param t     The task to be deleted.","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"     * @return A formatted message to show that task has been deleted.","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"    public String deleteTaskMessage(int taskLeft, Task t) {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"        String s \u003d \"Noted. I\u0027ve removed this task:\\n\" + INDENTATION + \"  \" + t.checkStatus();","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"        s +\u003d String.format(\"\\nNow you have %d tasks in the list.\", taskLeft);","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"        return s;","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted message when a task is mark as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"     * Message includes the descriptions of the task and number of task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"     * @param t The task to be marked.","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"     * @return A formatted message to show that task has been mark as done","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"    public String markDoneMessage(Task t) {","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"        String s \u003d \"Nice! I\u0027ve marked this task as done:\\n   \";","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"        s +\u003d INDENTATION + t.checkStatus();","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"        return s;","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted message showing the list of task, including the description of the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"     * @param taskList The task list to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the list of tasks","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"    public String listTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"            StringBuilder s \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"czhi-bin"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"czhi-bin"},"content":"                s.append(String.format(\"\\n%s%d. %s\", INDENTATION, i, taskList.get(i - 1).checkStatus()));","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"czhi-bin"},"content":"            return s.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"czhi-bin"},"content":"        return \"There are no task in your list currently, please add some.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"czhi-bin"},"content":"     * Shows the list of task containing the tasks related to the keyword provided by user.","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"czhi-bin"},"content":"     * @param list The list of related tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"czhi-bin"},"content":"     * @return A string showing the list of related tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"czhi-bin"},"content":"    public String showRelatedTasks(List\u003cTask\u003e list) {","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"czhi-bin"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"czhi-bin"},"content":"        if (list.size() \u003e 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"czhi-bin"},"content":"            s.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"czhi-bin"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"czhi-bin"},"content":"                s.append(String.format(\"\\n%s%d. %s\", INDENTATION, i, list.get(i - 1).checkStatus()));","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"czhi-bin"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"czhi-bin"},"content":"            s.append(\"There are no matching task in your list.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"czhi-bin"},"content":"        return s.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"czhi-bin"},"content":"     * Shows the sorted list with a message.","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"czhi-bin"},"content":"     * @param list The sorted list.","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"czhi-bin"},"content":"     * @return A string with a message and the sorted list.","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"czhi-bin"},"content":"    public String sortListMessage(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"czhi-bin"},"content":"        StringBuilder s \u003d new StringBuilder(\"I have sorted the list according to the chronological order. \"","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"czhi-bin"},"content":"                + \"Here is the sorted list.\\n\");","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"czhi-bin"},"content":"        s.append(listTasks(list));","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"czhi-bin"},"content":"        return s.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"czhi-bin"},"content":"     * Shows a help message with instructions on how the commands work.","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"czhi-bin"},"content":"     * @return A help message.","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"czhi-bin"},"content":"    public String showHelpMessage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"czhi-bin"},"content":"        StringBuilder s \u003d new StringBuilder(addLineBreakAfter(\"Here are the supported commands.\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_BYE));","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_TODO));","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_DEADLINE));","lastModifiedDate":"2021-09-10"},{"lineNumber":153,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_EVENT));","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_DELETE));","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_DONE));","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_LIST));","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentationAndLineBreakAfter(HELP_FIND));","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"czhi-bin"},"content":"        s.append(addIndentation(HELP_SORT));","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"czhi-bin"},"content":"        return s.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"czhi-bin"},"content":"    private String addIndentation(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"czhi-bin"},"content":"        return INDENTATION + s;","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":166,"author":{"gitId":"czhi-bin"},"content":"    private String addLineBreakAfter(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"%s\\n\", s);","lastModifiedDate":"2021-09-10"},{"lineNumber":168,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":169,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"czhi-bin"},"content":"    private String addIndentationAndLineBreakAfter(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"czhi-bin"},"content":"        return addLineBreakAfter(addIndentation(s));","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"czhi-bin":173}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"260\" minHeight\u003d\"-Infinity\" translateX\u003d\"-5\" wrapText\u003d\"true\" style\u003d\"-fx-border-radius: 10; -fx-border-style: solid; -fx-border-color: #202120; -fx-padding: 10 10 10 10; -fx-text-fill: #202120;\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"                \u003cFont name\u003d\"Yu Gothic Regular\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"czhi-bin":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"CENTER\" layoutY\u003d\"557.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"340.0\" promptText\u003d\"Enter text here\" style\u003d\"-fx-background-color: #f0f8ff; -fx-prompt-text-fill: #202120;  -fx-text-fill: #202120; -fx-border-color: #202120;\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"            \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"BASELINE_CENTER\" layoutX\u003d\"340.0\" layoutY\u003d\"557.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"60.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" style\u003d\"-fx-background-color: #f0f8ff; -fx-text-fill: #202120; -fx-border-color: #202120; -fx-padding: 5 5 5 5\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"            \u003cFont name\u003d\"Yu Gothic Regular\" size\u003d\"19.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #f0f8ff;\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"czhi-bin":26}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"czhi-bin":5}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    public void addTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"        list.add(new ToDo(\"sleep\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    public void loadFromListTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        list.add(new ToDo(\"sleep\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        tasklist.loadFromList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(1, tasklist.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"    public void deleteTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        list.add(new ToDo(\"sleep\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"        tasklist.loadFromList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"            tasklist.delete(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"            assertEquals(0, tasklist.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        } catch (NoSuchTaskException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"czhi-bin":43}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"    public void checkStatusTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"        Task toDo \u003d new ToDo(\"sleep\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(\"[T][ ] sleep\", toDo.checkStatus());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"        Task toDo \u003d new ToDo(\"sleep\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(\"T|0|sleep\", toDo.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"czhi-bin":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"deadline return book /by 2021-06-06 12:30","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"event project meeting /at 2021-08-06 14:00","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"todo!!!","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":18}}]
