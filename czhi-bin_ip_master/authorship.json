[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"import duke.data.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    private boolean isActive;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"        parser \u003d new Parser(taskList, storage, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    private void start() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        isActive \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        taskList.loadFromList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        ui.greet();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"        while (isActive) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"                isActive \u003d parser.process(command);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        duke.start();","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"czhi-bin":42,"-":4}},{"path":"src/main/java/duke/commands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the representation of a task with deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * The deadline task has a description of what is due by a certain datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * Constructor of a Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * @param description The description of the task to be done","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone      Boolean representing if task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param by          The deadline for the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        super(description, isDone, \u0027D\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the type of task,","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     * whether the task is done, its description, and its deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    public String checkStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        return super.checkStatus() + \" \" + showDeadline();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the dateline of the task,","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     * in the format of dd MMM yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    public String showDeadline() {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"(by: %s)\", by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"     * Used in storing of data to local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"        return super.toString() + String.format(\"|%s\", by);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":59}},{"path":"src/main/java/duke/commands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the representation of a event.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * The event has a description of what is it about,","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * and when is the event occuring.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    private LocalDateTime when;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Constructor of an Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * @param description The description of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone      Boolean representing if user went for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param when        The datetime of the event occurring.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    public Event(String description, boolean isDone, LocalDateTime when) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        super(description, isDone, \u0027E\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        this.when \u003d when;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the type of task,","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     * whether the user went for the event, the description","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     * of the event, and the datetime of it occurring.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    public String checkStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"        return super.checkStatus() + \" \" + showWhen();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the datetime of the event,","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * in the format of dd MMM yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information on when the event is happening.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    public String showWhen() {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"(at: %s)\", when.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")));","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * Used in storing of data to local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"        return super.toString() + String.format(\"|%s\", when);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":61}},{"path":"src/main/java/duke/commands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Encapsulate the representation of a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * The task has a description of what the task is about,","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * and a boolean to store if the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    protected final String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * A one letter character to represent the type of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    protected final char representation;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @param description    The description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone         Boolean representing if task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * @param representation The type of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    public Task(String description, boolean isDone, char representation) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"        this.representation \u003d representation;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string containing the type of task,","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     * whether the task is done, and its description.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"     * @return The string containing the information of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"    public String checkStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        return String.format(\"[%s][%s] %s\", representation, (isDone ? \u0027X\u0027 : \u0027 \u0027), description);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"     * Used in storing of data to local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"        String str \u003d String.format(\"%s|%c|%s\", representation, (isDone ? \u00271\u0027 : \u00270\u0027), description);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"czhi-bin":61}},{"path":"src/main/java/duke/commands/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the representation of a todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * The task has a description of what the user wants to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"     * Constructor of a ToDo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * @param description The description of the task to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * @param isDone      Boolean representing if task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"        super(description, isDone, \u0027T\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":22}},{"path":"src/main/java/duke/data/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.data;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred during the usage of duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * This abstract class is the general class of exception","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * produced by failed or interrupted operations.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted message. Used by child","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * class exception to format their error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * @param msg The message to be formatted.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    protected String formatMessage(String msg) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"        String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"        String INDENTATION \u003d \"    \";","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"        String finalMsg \u003d INDENTATION + HORIZONTAL_LINE + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        finalMsg +\u003d INDENTATION + \"☹ OI!!! \" + msg + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        finalMsg +\u003d INDENTATION + HORIZONTAL_LINE;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        return finalMsg;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":28}},{"path":"src/main/java/duke/data/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.data;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred while trying","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * to create a task with date and time. The datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * format entered by the user is not supported by","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to indicate to the","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * user that the inputted datetime format is not supported.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     * The message also included the format that the program supports.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        return super.formatMessage(\"Entered DateTime format not supported. \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"                \"Please enter Date and Time in YYYY-MM-DD HH:MM.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"czhi-bin":29}},{"path":"src/main/java/duke/data/NoToDoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.data;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred due to empty description of a todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"public class NoToDoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"    public NoToDoDescriptionException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to tell the","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"     * user that a todo task must come with a description.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"        return super.formatMessage(\"Hello??? What you want me to do???\");","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":24}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.data;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the operations related to managing task.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"     * Returns a task created from the description mentioned in the string.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"     * Used to convert stored data from local directory into task.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"     * @param str The string with a task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"     * @return The created task.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    public static Task stringToTask(String str) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"        String[] taskData \u003d str.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"        boolean isDone \u003d (taskData[1].equals(\"1\")) ? true : false;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(taskData[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"            Deadline deadline \u003d new Deadline(taskData[2], isDone, by);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"            return deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"            LocalDateTime at \u003d LocalDateTime.parse(taskData[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"            Event event \u003d new Event(taskData[2], isDone, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"            return event;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"            ToDo toDo \u003d new ToDo(taskData[2], isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"            return toDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"     * Adds the task to current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"     * Deletes a specific task corresponding to the number in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"     * @param taskNum The task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"     * @return The task deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"        return list.remove(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"     * Marks a specific task corresponding to the number in the list as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"     * @param taskNum The task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"    public Task mark(int taskNum) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"        Task task \u003d list.get(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"        task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"     * Returns the number of task in the current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"     * @return The number of task in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"        return list.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"     * Returns the current list of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"     * @return Returns an ArrayList consisting of all the Task stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"        return list;","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"     * Stores the task from the given task list into the current task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"czhi-bin"},"content":"     * @param list The task list to be stored to the current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"czhi-bin"},"content":"    public void loadFromList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"czhi-bin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"czhi-bin":107}},{"path":"src/main/java/duke/data/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.data;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":" * Signals that an error has occurred when processing user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":" * The user input could not be understood by the program or the","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":" * operation is not supported by the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"     * Returns a formatted error message to signal user","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * that the input could not be read or the operation","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     * they require is not supported by the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"     * @return The formatted error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        return super.formatMessage(\"I cannot understand what you want lah!!!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":27}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import duke.data.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import duke.data.NoToDoDescriptionException;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"import duke.data.UnknownCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the processing of user inputs to duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"     * The list of commands that the parser can handle.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"    private enum Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        EXIT, LIST, DONE, TODO, DEADLINE, EVENT, UNKNOWN, DELETE","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     * Creates a Parser that handles user input and turn it into respective","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     * commands and execute the required functions that user demands.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"     * @param list    The TaskList handler that is handling the list of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"     * @param storage The Storage handler that is in-charged of saving and loading files on local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"     * @param ui      The Ui handler that handles printing of output, if required.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"    public Parser(TaskList list, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     * Processes the user inputs into commands that duke can understand.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"     * @param cmd The user inputs in the form of String.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"     * @return Returns false if the command processed is to exit duke, else true.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"     * @throws DukeException If some error occurred in the processing of user input,","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"     *                       like the user requires some function that duke does not support.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"    public boolean process(String cmd) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"        switch (stringToCommand(cmd)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"        case EXIT:","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"            ui.farewellMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"        case LIST:","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"            ui.listTasks(list.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"        case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"            int taskNumber \u003d Integer.parseInt(cmd.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"            ui.markDoneMessage(list.mark(taskNumber));","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"            storage.save(list.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"            String eventDescription \u003d cmd.substring(cmd.indexOf(\" \") + 1, cmd.indexOf(\"/at\") - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"                LocalDateTime at \u003d LocalDateTime.parse(cmd.substring(cmd.indexOf(\"at\") + 3),","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-M-d H:m\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"                Event event \u003d new Event(eventDescription, false, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"                addTask(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"                System.out.println(\"Please enter Date and Time in YYYY-MM-DD HH:MM.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"            String deadlineDescription \u003d cmd.substring(cmd.indexOf(\" \") + 1, cmd.indexOf(\"/by\") - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(cmd.substring(cmd.indexOf(\"by\") + 3),","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-M-d H:m\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"                Deadline deadline \u003d new Deadline(deadlineDescription, false, by);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"                addTask(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"                System.out.println(\"Please enter Date and Time in YYYY-MM-DD HH:MM.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"czhi-bin"},"content":"            int spaceIndex \u003d cmd.indexOf(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"czhi-bin"},"content":"            String toDoDescription \u003d cmd.substring(spaceIndex + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"czhi-bin"},"content":"            if (toDoDescription.isBlank() || spaceIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"czhi-bin"},"content":"                throw new NoToDoDescriptionException();","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"czhi-bin"},"content":"            ;","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"czhi-bin"},"content":"            ToDo toDo \u003d new ToDo(toDoDescription, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"czhi-bin"},"content":"            addTask(toDo);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"czhi-bin"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"czhi-bin"},"content":"        case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"czhi-bin"},"content":"            int taskNum \u003d Integer.parseInt(cmd.substring(cmd.indexOf(\" \") + 1));","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"czhi-bin"},"content":"            Task task \u003d list.delete(taskNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"czhi-bin"},"content":"            ui.deleteTaskMessage(list.size(), task);","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"czhi-bin"},"content":"            storage.save(list.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"czhi-bin"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"czhi-bin"},"content":"        case UNKNOWN:","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"czhi-bin"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"czhi-bin"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"czhi-bin"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"czhi-bin"},"content":"     * Returns the respective Command that user want duke to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"czhi-bin"},"content":"     * Anything not in the list of commands will be treated as UNKNOWN.","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"czhi-bin"},"content":"     * @param str User\u0027s ionput on what they want duke to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"czhi-bin"},"content":"     * @return The respective command to call the methods.","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"czhi-bin"},"content":"    private Command stringToCommand(String str) {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"czhi-bin"},"content":"        String cmdType \u003d str.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"czhi-bin"},"content":"        switch (cmdType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"czhi-bin"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"czhi-bin"},"content":"            return Command.LIST;","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"czhi-bin"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"czhi-bin"},"content":"            return Command.EXIT;","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"czhi-bin"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"czhi-bin"},"content":"            return Command.DONE;","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"czhi-bin"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"czhi-bin"},"content":"            return Command.TODO;","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"czhi-bin"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"czhi-bin"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"czhi-bin"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"czhi-bin"},"content":"            return Command.EVENT;","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"czhi-bin"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"czhi-bin"},"content":"            return Command.DELETE;","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"czhi-bin"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"czhi-bin"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"czhi-bin"},"content":"     * Adds task to the task list and","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"czhi-bin"},"content":"     * prints a message after adding,","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"czhi-bin"},"content":"     * and update the local data file.","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"czhi-bin"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"czhi-bin"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"czhi-bin"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"czhi-bin"},"content":"        ui.addTaskMessage(list.size(), task);","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"czhi-bin"},"content":"        storage.save(list.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"czhi-bin":174}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":" * Encapsulate the handling of loading and storing files on local directory for duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    private static final String FOLDER_NAME \u003d \"data\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"     * Creates a data file named \u0027duke.txt\u0027 to store the task list on local directory under the folder data.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"     * Prints different message when it is created successfully or failed due to an error or file existed.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    public void createFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"        File file \u003d new File(String.format(\"%s/%s\", FOLDER_NAME, FILE_NAME));","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"        boolean created \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"            created \u003d file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        } finally {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"            if (created) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"                System.out.println(\"    New data file has been created.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"                System.out.println(\"Data file already exist.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"     * Creates a folder named \u0027data\u0027 to contain the data file storing task list on local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"     * Prints message if the folder could not be created.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    public void createFolder() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"        File folder \u003d new File(FOLDER_NAME);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"        boolean created \u003d folder.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"        if (!created) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"Folder could not be created.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"     * Loads the data file stored on the local directory into duke to get the previously stored task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"     * If the data file does not exist, means it is the first time user use duke, proceed to create folder and file.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"     * Else, load the data from the file to an ArrayList to be used by TaskList class.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"     * @return The ArrayList of Task to be used by TaskList class to recreate the stored task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"        File file \u003d new File(String.format(\"%s/%s\", FOLDER_NAME, FILE_NAME));","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"            Ui.printMessageWithFormat(\"I have found past data in your local storage, type \u0027list\u0027 to view the previous tasks.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"                String curr \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"                Task task \u003d TaskList.stringToTask(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"            sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"            Ui.printMessageWithFormat(\"No past data found in your local storage, initializing from blank state.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"            createFolder();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"            createFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"     * Saves the current task list to a data file on local directory.","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"     * Prints error message if an IOException is thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"     * @param taskList The current task list to be saved to the data file.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"            FileWriter writer \u003d new FileWriter(String.format(\"%s/%s\", FOLDER_NAME, FILE_NAME));","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"czhi-bin":102}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":" * Encapsulates the handling of user interactions of duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":" * @author Zhi Bin","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":" * @version Duke Level 8","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    private static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"     * Introduction message with duke\u0027s logo.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    private static final String INTRO \u003d \"Hello from\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"            + INDENTATION + \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"            + INDENTATION + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"            + INDENTATION + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"            + INDENTATION + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"            + INDENTATION + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"            + INDENTATION + \"What can I do for you?\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"     * Prints the argument with indentation and horizontal lines.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"     * @param s The message to be printed on screen in between horizontal lines and with indentation.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"    public static void printMessageWithFormat(String s) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        System.out.println(INDENTATION + HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"        System.out.println(INDENTATION + s);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        System.out.println(INDENTATION + HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"czhi-bin"},"content":"     * Prints formatted message when duke start.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"czhi-bin"},"content":"    public void greet() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"czhi-bin"},"content":"        printMessageWithFormat(INTRO);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"czhi-bin"},"content":"     * Prints formatted message when the user exits duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"czhi-bin"},"content":"    public void farewellMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"czhi-bin"},"content":"        printMessageWithFormat(\"Bye bye, i go sleep already. See you again.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"czhi-bin"},"content":"     * Prints formatted message when a task is added from the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"czhi-bin"},"content":"     * Message includes the descriptions of the task and number of task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"czhi-bin"},"content":"     * @param taskLeft Number of task in the task list after adding the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"czhi-bin"},"content":"     * @param task     The task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"czhi-bin"},"content":"    public void addTaskMessage(int taskLeft, Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"czhi-bin"},"content":"        String s \u003d \"Got it. I\u0027ve added this task:\\n\" + INDENTATION + \"  \" + task.checkStatus();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"czhi-bin"},"content":"        s +\u003d String.format(\"\\n%sNow you have %d tasks in the list.\", INDENTATION, taskLeft);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"czhi-bin"},"content":"        printMessageWithFormat(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"czhi-bin"},"content":"     * Prints formatted message when a task is deleted from the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"czhi-bin"},"content":"     * Message includes the descriptions of the task and number of task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"czhi-bin"},"content":"     * @param taskLeft Number of task in the task list after deleting the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"czhi-bin"},"content":"     * @param task     The task to be deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"czhi-bin"},"content":"    public void deleteTaskMessage(int taskLeft, Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"czhi-bin"},"content":"        String s \u003d \"Noted. I\u0027ve removed this task:\\n\" + INDENTATION + \"  \" + task.checkStatus();","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"czhi-bin"},"content":"        s +\u003d String.format(\"\\n%sNow you have %d tasks in the list.\", INDENTATION, taskLeft);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"czhi-bin"},"content":"        printMessageWithFormat(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"czhi-bin"},"content":"     * Prints formatted message when a task is mark as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"czhi-bin"},"content":"     * Message includes the descriptions of the task and number of task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"czhi-bin"},"content":"     * @param task The task to be marked.","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"czhi-bin"},"content":"    public void markDoneMessage(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"czhi-bin"},"content":"        String s \u003d \"Nice! I\u0027ve marked this task as done:\\n   \";","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"czhi-bin"},"content":"        s +\u003d INDENTATION + task.checkStatus();","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"czhi-bin"},"content":"        printMessageWithFormat(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"czhi-bin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"czhi-bin"},"content":"     * Prints formatted message showing the list of task, including the description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"czhi-bin"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"czhi-bin"},"content":"     * @param taskList The task list to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"czhi-bin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"czhi-bin"},"content":"    public void listTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"czhi-bin"},"content":"        String s \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"czhi-bin"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"czhi-bin"},"content":"            s +\u003d String.format(\"\\n%s%d. %s\", INDENTATION, i, taskList.get(i - 1).checkStatus());","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"czhi-bin"},"content":"        printMessageWithFormat(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"czhi-bin":103}},{"path":"src/test/java/duke/commands/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"    public void checkStatusTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"        Task toDo \u003d new ToDo(\"sleep\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(\"[T][ ] sleep\", toDo.checkStatus());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"    public void toStringTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"        Task toDo \u003d new ToDo(\"sleep\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(\"T|0|sleep\", toDo.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"czhi-bin":20}},{"path":"src/test/java/duke/data/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.data;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.commands.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    public void addTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"        list.add(new ToDo(\"sleep\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(1,list.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"    public void loadFromListTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"czhi-bin"},"content":"        list.add(new ToDo(\"sleep\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"czhi-bin"},"content":"        tasklist.loadFromList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(1, tasklist.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"czhi-bin"},"content":"    public void deleteTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"czhi-bin"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"czhi-bin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"czhi-bin"},"content":"        list.add(new ToDo(\"sleep\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"czhi-bin"},"content":"        tasklist.loadFromList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"czhi-bin"},"content":"        tasklist.delete(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"czhi-bin"},"content":"        assertEquals(0, tasklist.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"czhi-bin":38}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"package duke.parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"import duke.data.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"    public void processTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"        Parser parser \u003d new Parser(new TaskList(), new Storage(), new Ui());","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"        String cmd \u003d \"deadline finish 2103T iP /by 2021-8-25 23:59\";","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"            assertEquals(true, parser.process(cmd));","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"czhi-bin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"czhi-bin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"czhi-bin"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"czhi-bin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"czhi-bin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"czhi-bin":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"czhi-bin"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"czhi-bin"},"content":"deadline return book /by 2021-06-06 12:30","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"czhi-bin"},"content":"event project meeting /at 2021-08-06 14:00","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"czhi-bin"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"czhi-bin"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"czhi-bin"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"czhi-bin"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"czhi-bin"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"czhi-bin"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"czhi-bin"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"czhi-bin"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"czhi-bin"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"czhi-bin"},"content":"todo!!!","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"czhi-bin"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"czhi-bin"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"czhi-bin":18}}]
