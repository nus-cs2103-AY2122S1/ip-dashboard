[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chetwinlow":2,"-":22}},{"path":"data/file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"T | 0 | pepe","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"T | 0 |     t","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":" * Represents the Entry point for Chat bot Duke as a whole.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the DUke from a given file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @param filePath The given file pth.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"            tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"        } catch (DukeException e){","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"     * initialises the Duke bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"    public void run() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"                c.exec(this.tasks, this.ui, this.storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"            new Duke(\"./data/file.txt\").run();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chetwinlow":49,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.EmptyDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.IllegalCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" * Represents a class that deals with making sense of the user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"     * Returns the appropriate Command that a given string contains.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     * @param input The given input string from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @return The Command that the string contains.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * @throws IllegalCommandException If the string did not contain a valid command.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * @throws EmptyDescriptionException If the string contains todo but no following description.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    public static Command parse(String input) throws IllegalCommandException, EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"            return new Exit();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"            return new List();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"            int value \u003d Character.getNumericValue(input.charAt(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"            return new Done(value);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"        }  else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"            int value \u003d Character.getNumericValue(input.charAt(7));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"            return new Delete(value);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"            String searchTerm \u003d input.substring(4);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"            return new Find(searchTerm);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"                return new Add(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"            } catch (IllegalCommandException | EmptyDescriptionException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"                throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":41}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":" * Represents a wrapper class that deals with loading and saving tasks in a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    private File file;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a Storage from a given filePath.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * @param filePath The given String filePath.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        if (!this.file.getParentFile().exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     * Converts a string that contains info about a Task into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"     * @param fullString The given string","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"     * @return The Task with the appropriate information.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"    public static Task stringToTask(String fullString) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"        String[] arr \u003d fullString.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"            arr[i] \u003d arr[i].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"        Task curr;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"            curr \u003d new Todo(arr[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        } else if (arr[0].equals(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"            curr \u003d new Event(arr[2], arr[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"            curr \u003d new Deadline(arr[2], arr[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"        if (arr[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"            curr.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"        return curr;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"     * Converts a Task into a string.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"     * @param task THe given Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"     * @return The string to be stored into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"    public static String taskToString(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"chetwinlow"},"content":"        return task.fileFormat();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"chetwinlow"},"content":"     * Returns an ArrayList\u003cTask\u003e that contains all the tasks in a give file.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chetwinlow"},"content":"     * @return the arraylist of Task inside the fiven file.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no file to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"chetwinlow"},"content":"    public ArrayList\u003cTask\u003e load() throws NoListException {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"chetwinlow"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"chetwinlow"},"content":"            ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"chetwinlow"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"chetwinlow"},"content":"                String currTask \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"chetwinlow"},"content":"                Task task \u003d Storage.stringToTask(currTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"chetwinlow"},"content":"                temp.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"chetwinlow"},"content":"            return temp;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"chetwinlow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"chetwinlow"},"content":"            throw new NoListException(new IOException());","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"chetwinlow"},"content":"     * Saves the tasks in a tasklist into the file associated with this storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no file to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"chetwinlow"},"content":"    public void save(TaskList tasks) throws NoListException {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"chetwinlow"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"chetwinlow"},"content":"            String curr\u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"chetwinlow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"chetwinlow"},"content":"                curr +\u003d Storage.taskToString(tasks.get(i)) + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"chetwinlow"},"content":"            fw.write(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"chetwinlow"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"chetwinlow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"chetwinlow"},"content":"            throw new NoListException(new IOException());","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":108}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" * Represents a wrapper class for an arraylist of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a TaskList from an existing arraylist of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The given arraylist.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"     * Performs an adding of a task to a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"     * @param task The given task.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"     * Returns a task at a given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"     * @return the task at the given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"     * Returns the size of the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"     * @return The size of a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"    public int size() {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"     * Displays all the tasks in a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"    public void display() {","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"            System.out.println(String.format(\"%s. %s\", i+1, this.list.get(i).toString()));","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"chetwinlow"},"content":"     * Performs a deletion of a task at a given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"chetwinlow"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chetwinlow"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"chetwinlow"},"content":"        this.list.remove(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":75}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":" * Represents the class that handles all the interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    private final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the handler.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     * Displays the welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     * Displays the error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"     * @param errorMessage The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"     * Returns the given command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"     * @return The most recent command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"     * Displays loading error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"Oh no, looks like you don\u0027t have a existing list! \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"                \"Lets help you create a new one!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":58}},{"path":"src/main/java/duke/command/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.EmptyDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.IllegalCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":" * Rpresents a type of Command that adds a Task to a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"public class Add extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    private Task task;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the Command Add.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * @param input The user\u0027s input to be converted into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @throws IllegalCommandException If a command given by the user is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     * @throws EmptyDescriptionException If a todo command is not followed by a description.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    public Add(String input) throws IllegalCommandException, EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"            String temp \u003d input.substring(4);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"            if (temp.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"                String message \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"                throw new EmptyDescriptionException(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"            this.task \u003d new Todo(temp.trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"            String[] arr \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"            this.task \u003d new Deadline(arr[0].substring(9), arr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"            String[] arr \u003d input.split(\"/at \");","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"            this.task \u003d new Event(arr[0].substring(6), arr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"            throw new IllegalCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"     * Performs the addition of the given task to the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws NoListException {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"        tasks.add(this.task);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"                    + this.task.toString() + \"\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"            throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":66}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" * Represents a general Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     * Shows the method signature of exec method for concrete classes to implement.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public abstract void exec(TaskList tasks, Ui ui, Storage storage) throws NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * Returns a boolean that indicates if this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @return Whether this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":30}},{"path":"src/main/java/duke/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that deletes a task from a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"public class Delete extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    private int index;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the Command Delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public Delete(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * Performs the deletion of the task from the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws NoListException {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"        Task temp \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"        tasks.delete(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"                    + temp.toString() + \"\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"            throw new NoListException(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":45}},{"path":"src/main/java/duke/command/Done.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that marks a task in a tasklist as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"public class Done extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    private int index;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the Command Done.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public Done(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * Performs the marking of the task in the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws NoListException {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"            tasks.get(this.index - 1).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"            throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":40}},{"path":"src/main/java/duke/command/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that exits the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"public class Exit extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     * Performs the exiting of the program and printing the exit message.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * Returns a boolean that indicates if this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     * @return Whether this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":32}},{"path":"src/main/java/duke/command/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that finds tasks in a tasklist based on a given searchTerm.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"public class Find extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    private String searchTerm;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a Command Find from a given search term.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param searchTerm The given search term.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    public Find(String searchTerm) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * Performs the search based on the search term and displays the results using List Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"            if (tasks.get(i).toString().toLowerCase().contains(this.searchTerm.toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"                temp.add(tasks.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"        new List().exec(temp, ui, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":37}},{"path":"src/main/java/duke/command/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that lists all the tasks in a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"public class List extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     * Performs the listing of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"        tasks.display();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":22}},{"path":"src/main/java/duke/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents the overarching exception for any problems related to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the DukeException from a message.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     * @param message The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the DukeException from an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     * @param e The exception that can be converted into a Duke Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    public DukeException(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        super(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":24}},{"path":"src/main/java/duke/dukeexception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents an exception for cases where todo is called but no description follows it.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the EmptyDescriptionException from a message.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     * @param message The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":15}},{"path":"src/main/java/duke/dukeexception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents an exception when an illegal command is given by a user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class IllegalCommandException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the IllegalCommandException from an error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     * @param message The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":15}},{"path":"src/main/java/duke/dukeexception/NoListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":" * Represents an exception when file operations are performed when a file/directory does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"public class NoListException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the NoListException from an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     * @param e The given exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    public NoListException(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"        super(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":18}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    protected String by;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"        String[] arr \u003d by.split(\" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"        String[] arr1 \u003d arr[0].split(\"\\\\/\");","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"        this.date \u003d LocalDate.parse(String.format(\"%s-%s-%s\", arr1[2], arr1[1].length() \u003d\u003d 1 ?","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"                \"0\" + arr1[1] : arr1[0], arr1[0].length() \u003d\u003d 1 ? \"0\" + arr1[0] : arr1[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        this.time \u003d LocalTime.parse(arr[1].substring(0, 2) + \":\" + arr[1].substring(2));","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"                this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"D%s | %s\", super.fileFormat(), this.by);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"    protected String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"E%s | %s\", super.fileFormat(), this.at);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":21}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        return description;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\" | %s | %s\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":31}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"T%s\", super.fileFormat());","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":21}},{"path":"src/test/java/duke/command/DoneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"public class DoneTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    public void execute_normalInput_markedAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"            Storage storage \u003d new Storage(\"./testData/file.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"            tasks.add(new Todo(\"project log\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"            new Done(1).exec(tasks, ui, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"            assertEquals(\"X\", tasks.get(0).getStatusIcon());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":26}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"    public void fileFormat_normalNoInput_properFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"D | 0 | report | 2/12/2021 1800\",","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"                new Deadline(\"report\", \"2/12/2021 1800\").fileFormat());","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    public void toString_normalNoInput_expectedString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"[D][ ] report (by: Dec 2 2021 06:00 PM)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"                new Deadline(\"report\", \"2/12/2021 1800\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"    public void fileFormat_normalNoInput_properFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"T | 0 | buy bread\", new Todo(\"buy bread\").fileFormat());","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    public void toString_normalNoInput_expectedString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"[T][ ] buy bread\", new Todo(\"buy bread\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":16}},{"path":"src/test/testData/file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"T | 1 | project log","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"hello","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"todo wash car","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"deadline project submission /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"event project meeting /at Monday 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chetwinlow":1,"-":20}}]
