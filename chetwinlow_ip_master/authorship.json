[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chetwinlow":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"    mainClassName \u003d \"dukegui.Launcher\"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chetwinlow":16,"-":45}},{"path":"data/file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"T | 1 | H | bread","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"D | 1 | H | return book | 12/12/2021 1800 p\u003dH","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"E | 0 | L | bowling | friday","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"D | 1 | H | buy beer | 12/12/2021 0600","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"chetwinlow":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"## Features","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"### Manage all your tasks with Dukebro!","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"Dukebro breaks down all your tasks into 3 types: Todos, Deadlines and Events.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"You can add, update, delete, list all your tasks! Dukebro does it all.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"You can even use keywords to filter out tasks by keywords if your tasklist gets too long!","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"But that means you are either very active or procrastinating your work :P","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"### `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"List out all tasks in your tasklist.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"`list`","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    1. [T][ ][H] read book","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    2. [D][ ][M] return book (by: Jul 7 2021 1800)","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    3. [E][ ][L] project meeting (at: Dec 1 2021 1100)","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"### `todo`","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"Adds a Todo type task to your tasklist.","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"`todo buy bread p\u003dH`","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"   [T][ ][H] buy bread","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"### `deadline`","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"Adds a Deadline type task to your tasklist.","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"`deadline work report /by 2021-05-05 1800 p\u003dM`","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"   [D][ ][M] work report (by: May 5 2021 1800)","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"### `event`","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"Adds a Event type task to your tasklist.","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"chetwinlow"},"content":"`event concert /at 2021-05-03 1200 p\u003dL`","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"chetwinlow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"chetwinlow"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"chetwinlow"},"content":"   [E][ ][L] concert (at: May 3 2021 1200)","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"chetwinlow"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"chetwinlow"},"content":"### `delete`","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"chetwinlow"},"content":"Deletes a task from your tasklist.","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"chetwinlow"},"content":"`delete 1`","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"chetwinlow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"chetwinlow"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"chetwinlow"},"content":"    [T][X][H] buy bread","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"chetwinlow"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"chetwinlow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"chetwinlow"},"content":"### `done`","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"chetwinlow"},"content":"Updates the status of a task in your tasklist as completed.","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"chetwinlow"},"content":"`done 1`","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"chetwinlow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"chetwinlow"},"content":"Done.","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"chetwinlow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"chetwinlow"},"content":"### `find`","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"chetwinlow"},"content":"Finds tasks that match the given keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"chetwinlow"},"content":"`find bread`","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"chetwinlow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"chetwinlow"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"chetwinlow"},"content":"1.[T][ ][H] buy bread","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"chetwinlow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"chetwinlow"},"content":"### `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"chetwinlow"},"content":"Exits the bot.","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"chetwinlow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"chetwinlow"},"content":"`bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"chetwinlow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"chetwinlow"},"content":"``` ","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"chetwinlow"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"chetwinlow"},"content":"```","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"chetwinlow":117,"-":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" * Represents the Entry point for Chat bot Duke as a whole.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the DUke from a given file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     * @param filePath The given file pth.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"            tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     * Initialises the Duke bot.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"    public void run() {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"                System.out.println(c.exec(this.tasks, this.ui, this.storage));","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"     * Returns an appropriate response based on the given input.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"     * @param input The given input string from user.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"     * @return The appropriate response as a String.","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"            return c.exec(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"        new Duke(\"./data/file.txt\").run();","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"chetwinlow":66,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Add;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Delete;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Done;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Exit;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import duke.command.Find;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import duke.command.List;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.EmptyDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.IllegalCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":" * Represents a class that deals with making sense of the user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * Returns the appropriate Command that a given string contains.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"     * @param input The given input string from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"     * @return The Command that the string contains.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * @throws IllegalCommandException If the string did not contain a valid command.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * @throws EmptyDescriptionException If the string contains todo but no following description.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    public static Command parse(String input) throws IllegalCommandException, EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"        assert(input.length() !\u003d 0);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"            return new Exit();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"            return new List();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"            int value \u003d Character.getNumericValue(input.charAt(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"            assert(value \u003e 0);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"            return new Done(value);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"            int value \u003d Character.getNumericValue(input.charAt(7));","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"            assert(value \u003e 0);","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"            return new Delete(value);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"            String searchTerm \u003d input.substring(4);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"            return new Find(searchTerm);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"                return new Add(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"            } catch (IllegalCommandException | EmptyDescriptionException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"                throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":50}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.io.File;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":" * Represents a wrapper class that deals with loading and saving tasks in a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    private File file;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a Storage from a given filePath.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * @param filePath The given String filePath.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        if (!this.file.getParentFile().exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     * Converts a string that contains info about a Task into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"     * @param fullString The given string.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"     * @return The Task with the appropriate information.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"    public static Task convertStringToTask(String fullString) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"        String[] arr \u003d fullString.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"            arr[i] \u003d arr[i].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"        assert(fullString.length() \u003e 0);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"        //left uninitialized as at this point, there should be a valid task format to convert.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"        Task curr;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"            curr \u003d new Todo(arr[3], arr[2]);","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"        } else if (arr[0].equals(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"            curr \u003d new Event(arr[3], arr[2], arr[4]);","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"            curr \u003d new Deadline(arr[3], arr[2], arr[4]);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"        if (arr[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"            curr.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"        return curr;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"     * Converts a Task into a string.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"     * @param task THe given Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"     * @return The string to be stored into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"    public static String convertTaskToString(Task task) {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"chetwinlow"},"content":"        return task.convertToFileFormat();","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chetwinlow"},"content":"     * Returns an ArrayList of Task that contains all the tasks in a give file.","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"chetwinlow"},"content":"     * @return the arraylist of Task inside the given file.","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no file to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"chetwinlow"},"content":"    public ArrayList\u003cTask\u003e load() throws NoListException {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"chetwinlow"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"chetwinlow"},"content":"            ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"chetwinlow"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"chetwinlow"},"content":"                String currTask \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"chetwinlow"},"content":"                Task task \u003d Storage.convertStringToTask(currTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"chetwinlow"},"content":"                temp.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"chetwinlow"},"content":"            return temp;","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"chetwinlow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"chetwinlow"},"content":"            throw new NoListException(new IOException());","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"chetwinlow"},"content":"     * Saves the tasks in a tasklist into the file associated with this storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no file to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"chetwinlow"},"content":"    public void save(TaskList tasks) throws NoListException {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"chetwinlow"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"chetwinlow"},"content":"            String curr \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"chetwinlow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"chetwinlow"},"content":"                curr +\u003d Storage.convertTaskToString(tasks.get(i)) + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"chetwinlow"},"content":"            fw.write(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"chetwinlow"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"chetwinlow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"chetwinlow"},"content":"            throw new NoListException(new IOException());","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":110}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" * Represents a wrapper class for an arraylist of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a TaskList from an existing arraylist of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The given arraylist.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"     * Performs an adding of a task to a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     * @param task The given task.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"     * Returns a task at a given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"     * @return the task at the given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"     * Returns the size of the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"     * @return The size of a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"    public int size() {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"     * Displays all the tasks in a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"    public String showTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"chetwinlow"},"content":"            temp +\u003d String.format(\"%s. %s\\n\", i + 1, this.list.get(i).toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"chetwinlow"},"content":"        return temp;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chetwinlow"},"content":"     * Performs a deletion of a task at a given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"chetwinlow"},"content":"     * @param index The given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"chetwinlow"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"chetwinlow"},"content":"        this.list.remove(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":79}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":" * Represents the class that handles all the interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"    private static final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the handler.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * Displays the welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"     * Displays the error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     * @param errorMessage The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"     * Returns the given command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"     * @return The most recent command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"     * Displays loading error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"Oh no, looks like you don\u0027t have a existing list! \"","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"                + \"Lets help you create a new one!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":57}},{"path":"src/main/java/duke/command/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.EmptyDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.IllegalCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that adds a Task to a tasklist.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"public class Add extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    private Task task;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the Command Add.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * @param input The user\u0027s input to be converted into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @throws IllegalCommandException If a command given by the user is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     * @throws EmptyDescriptionException If a todo command is not followed by a description.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    public Add(String input) throws IllegalCommandException, EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"            String temp \u003d input.substring(4);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"            if (temp.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"                String message \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"                throw new EmptyDescriptionException(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"            String[] arr \u003d temp.split(\"p\u003d\");","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"            this.task \u003d new Todo(arr[0].trim(), arr[1].trim());","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"            String[] arr \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"            String[] temp \u003d arr[1].split(\"p\u003d\");","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"            this.task \u003d new Deadline(arr[0].substring(9), temp[1].trim(), temp[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"            String[] arr \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"            String[] temp \u003d arr[1].split(\"p\u003d\");","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"            this.task \u003d new Event(arr[0].substring(6), temp[1].trim(), temp[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"            throw new IllegalCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"     * Performs the addition of the given task to the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"    public String exec(TaskList tasks, Ui ui, Storage storage) throws NoListException {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"        tasks.add(this.task);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"        System.out.println(\"hello\");","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chetwinlow"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"chetwinlow"},"content":"            return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"chetwinlow"},"content":"                    + this.task.toString() + \"\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"chetwinlow"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"chetwinlow"},"content":"            throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":70}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" * Represents a general Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     * Shows the method signature of exec method for concrete classes to implement.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public abstract String exec(TaskList tasks, Ui ui, Storage storage) throws NoListException;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * Returns a boolean that indicates if this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @return Whether this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":30}},{"path":"src/main/java/duke/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that deletes a task from a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"public class Delete extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    private int index;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the Command Delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public Delete(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * Performs the deletion of the task from the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    public String exec(TaskList tasks, Ui ui, Storage storage) throws NoListException {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"        Task temp \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"        tasks.delete(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"                    + temp.toString() + \"\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"            throw new NoListException(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":45}},{"path":"src/main/java/duke/command/Done.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that marks a task in a tasklist as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"public class Done extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    private int index;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the Command Done.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    public Done(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * Performs the marking of the task in the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"     * @throws NoListException If there is no list to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    public String exec(TaskList tasks, Ui ui, Storage storage) throws NoListException {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"            tasks.get(this.index - 1).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"            return \"Done.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"            throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":40}},{"path":"src/main/java/duke/command/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that exits the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"public class Exit extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"     * Performs the exiting of the program and printing the exit message.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    public String exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * Returns a boolean that indicates if this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @return Whether this is an Exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":31}},{"path":"src/main/java/duke/command/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that finds tasks in a tasklist based on a given searchTerm.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"public class Find extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    private String searchTerm;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a Command Find from a given search term.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param searchTerm The given search term.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    public Find(String searchTerm) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * Performs the search based on the search term and displays the results using List Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public String exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"            if (tasks.get(i).toString().toLowerCase().contains(this.searchTerm.toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"                temp.add(tasks.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"        return \"Here are the matching tasks in your list:\\n\" + new List().exec(temp, ui, storage);","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":36}},{"path":"src/main/java/duke/command/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" * Represents a type of Command that lists all the tasks in a tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"public class List extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"     * Performs the listing of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * @param ui The ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * @param storage The storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    public String exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"        return tasks.showTask();","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":21}},{"path":"src/main/java/duke/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents the overarching exception for any problems related to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the DukeException from a message.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     * @param message The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the DukeException from an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     * @param e The exception that can be converted into a Duke Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    public DukeException(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        super(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":24}},{"path":"src/main/java/duke/dukeexception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents an exception for cases where todo is called but no description follows it.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the EmptyDescriptionException from a message.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     * @param message The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":15}},{"path":"src/main/java/duke/dukeexception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents an exception when an illegal command is given by a user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class IllegalCommandException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the IllegalCommandException from an error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     * @param message The given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":15}},{"path":"src/main/java/duke/dukeexception/NoListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.dukeexception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" * Represents an exception when file operations are performed when a file/directory does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"public class NoListException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     * Constructs the NoListException from an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     * @param e The given exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    public NoListException(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"        super(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":" * Represents a specific type of Task that have deadlines.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     * @param by The deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    public Deadline(String description, String priority, String by) {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        super(description, priority);","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"        this.by \u003d LocalDateTime.parse(by.trim(), DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"     * Converts a Deadline into the format for storing.","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     * @return A String specific to a Deadline that follows the storing conventions for our data file.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        String temp \u003d this.by.toString().replace(\"T\", \" \").replace(\":\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"D%s | %s\", super.convertToFileFormat(), temp);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":" * Represents a specific type of Task like Events.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a Event task.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"     * @param at The date and time of the event.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public Event(String description, String priority, String at) {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        super(description, priority);","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"        this.at \u003d LocalDateTime.parse(at.trim(), DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"     * Converts an Event into the format for storing.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"     * @return A String specific to an Event that follows the storing conventions for our data file.","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"        String temp \u003d this.at.toString().replace(\"T\", \" \").replace(\":\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"E%s | %s\", super.convertToFileFormat(), temp);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents a general Task that can be added to our task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"    protected String priority;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a task.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"     * @param description The decription of the task.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    public Task(String description, String priority) {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     * Returns the status of a task.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     * @return \"X\" if task is done else \" \".","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"[%s][%s] %s\", this.getStatusIcon(), this.priority, this.description);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"     * Converts a Task into the format for storing.","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"     * @return A String that follows the storing conventions for our data file.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\" | %s | %s | %s\", this.isDone ? \"1\" : \"0\", this.priority, this.description);","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":50}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":" * Represents a specific type of Task like Todos.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"     * Constructs a Todo task.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    public Todo(String description, String priority) {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        super(description, priority);","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"     * Converts an Todo into the format for storing.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"     * @return A String specific to a Todo that follows the storing conventions for our data file.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"        return String.format(\"T%s\", super.convertToFileFormat());","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chetwinlow":31}},{"path":"src/main/java/dukegui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package dukegui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"chetwinlow"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"chetwinlow"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"chetwinlow"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"chetwinlow"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"chetwinlow":61}},{"path":"src/main/java/dukegui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package dukegui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"chetwinlow":13}},{"path":"src/main/java/dukegui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package dukegui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    private Duke duke \u003d new Duke(\"./data/file.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"            stage.setTitle(\"Dukebro\");","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"chetwinlow":33}},{"path":"src/main/java/dukegui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package dukegui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mosshead.jpeg\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/luffy.jpeg\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"chetwinlow"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"chetwinlow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"chetwinlow"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"chetwinlow"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"chetwinlow"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"chetwinlow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"chetwinlow"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"chetwinlow"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"chetwinlow"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"chetwinlow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"chetwinlow"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"chetwinlow"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"chetwinlow"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"chetwinlow"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"chetwinlow"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"chetwinlow"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"chetwinlow"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"chetwinlow":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"chetwinlow":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dukegui.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"chetwinlow":19}},{"path":"src/test/java/duke/command/DoneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"import duke.dukeexception.NoListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"public class DoneTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    public void execute_normalInput_markedAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"            Storage storage \u003d new Storage(\"./testData/file.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chetwinlow"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chetwinlow"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chetwinlow"},"content":"            tasks.add(new Todo(\"project log\", \"H\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"chetwinlow"},"content":"            new Done(1).exec(tasks, ui, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chetwinlow"},"content":"            assertEquals(\"X\", tasks.get(0).getStatusIcon());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chetwinlow"},"content":"        } catch (NoListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chetwinlow"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chetwinlow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":29}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"    public void fileFormat_normalNoInput_properFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"D | 0 | H | report | 2021-12-20 1800\",","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"                new Deadline(\"report\", \"H\", \"2021-12-20 1800\").convertToFileFormat());","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    public void toString_normalNoInput_expectedString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"[D][ ][H] report (by: Dec 2 2021 1800)\",","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"                new Deadline(\"report\", \"H\", \"2021-12-02 1800\").toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":19}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"    public void fileFormat_normalNoInput_properFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"T | 0 | H | buy bread\", new Todo(\"buy bread\", \"H\").convertToFileFormat());","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chetwinlow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chetwinlow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chetwinlow"},"content":"    public void toString_normalNoInput_expectedString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chetwinlow"},"content":"        assertEquals(\"[T][ ][H] buy bread\", new Todo(\"buy bread\", \"H\").toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"chetwinlow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":18}},{"path":"src/test/testData/file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"T | 1 | project log","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chetwinlow":1}},{"path":"testData/file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"T | 1 | H | project log","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"chetwinlow":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chetwinlow"},"content":"hello","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"chetwinlow"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"chetwinlow"},"content":"todo wash car","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"chetwinlow"},"content":"deadline project submission /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"chetwinlow"},"content":"event project meeting /at Monday 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"chetwinlow"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"chetwinlow"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"chetwinlow"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"chetwinlow"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"chetwinlow"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chetwinlow":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chetwinlow"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chetwinlow":1,"-":20}}]
