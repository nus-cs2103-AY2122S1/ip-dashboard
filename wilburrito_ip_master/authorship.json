[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"wilburrito":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"plugins {","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"repositories {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"dependencies {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"test {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    testLogging {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"        showExceptions true","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"        showCauses true","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"        showStackTraces true","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"application {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"shadowJar {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"checkstyle {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"run{","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":62}},{"path":"data/dukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"[T][ ] kill morty","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"Duke can help you sort out your life! Just give him a chance.","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"## Interface","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"![Image of Duke](https://github.com/wilburrito/ip/tree/master/docs/Ui.png)","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"### Add Different Types of Tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"Categorise your tasks, from **deadlines, to to-dos and even events**!","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"### Find tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"Fret not if you are a busy bee, you can sieve through your tasks with our search function!","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"### `todo` - Creates a new ToDo task.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"`todo kill rick and morty`","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"A ToDo is added to your list of stuff to do.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"[T][ ] kill rick and morty","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"Now you have x tasks in your list.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"### `event` - Creates a new Event Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"`event chemistry lesson /at 15-09-2021 12:00`","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"An event is added to your list of stuff to do.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"[E][ ] chemistry lesson (at: MONDAY 12PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"Now you have x tasks in your list.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"### `deadline` - Creates a Deadline Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"`deadline chemistry homework /by 27-09-2021 12:00`","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"A Deadline is added to your list of stuff to do.","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"[D][ ] chemistry homework (by: MONDAY 12PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"Now you have x tasks in your list.","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"### `find` - Finds a specific task.","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"`find morty`","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"A list will be generated with Tasks that have substrings that match your query.","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"Here is what I found:","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"1. .....","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"2. .....","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"3. .....","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":23,"wilburrito":60}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"goto fail","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"goto fail","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":":init","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":":win9xME_args","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"set _SKIP\u003d2","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":":win9xME_args_slurp","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":":execute","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":":end","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":":fail","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"exit /b 1","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":":mainEnd","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":":omega","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":103}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"public class Deadline extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    protected LocalDateTime byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    protected String dateAndTimeInString;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a duke.Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"     * @param byDateAndTime the by-date of the task, e.g. \"by 27-04-1999 12:00\"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    public Deadline(String description, LocalDateTime byDateAndTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"        this.byDateAndTime \u003d byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"        if (byDateAndTime.getDayOfMonth() \u003d\u003d LocalDateTime.now().getDayOfMonth()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"            int hour \u003d byDateAndTime.getHour();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"            int minute \u003d byDateAndTime.getMinute();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d \"Today at \" + hour + \":\" + minute;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d this.byDateAndTime.getDayOfWeek().toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"     * toFileString returns the Deadline in a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"     * @return returns the Deadline in a string format that is specifically made for the dukeData.txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"        return \"[D]\" + super.toString() + \"--\" + byDateAndTime.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * @return a string representation of the duke.Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.dateAndTimeInString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":" * The Duke class.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    private static boolean active;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    private static int listIndex \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"    private Scene scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/IMG_5401.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/IMG_4596.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"        taskList \u003d new TaskList(Storage.loadData());","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"        return Parser.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"     * Iteration 1:","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        return textToAdd;","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"     * awaken() awakens duke.Duke and allows one to input commands to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    public static void awaken() {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        taskList \u003d new TaskList(Storage.loadData());","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"        Duke.active \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"        Ui.sendStartMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"        java.util.Scanner scanner \u003d new java.util.Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"        while (active) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"            boolean cont \u003d Parser.interpretCommand(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"            if (!cont) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"     * deletes a task from the list that duke.Duke creates.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"     * @param taskToBeDeleted the index of the task to be deleted.","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"     * @throws DukeException An exception stemming from incorrect or awkward input to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"    public static String deleteTask(String taskToBeDeleted) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"        int taskNumber \u003d Integer.parseInt(taskToBeDeleted);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"        if (taskList.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! The task you chose to delete does not exist.\"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"                            + \" Use the \u0027list\u0027 command to check the items in your list.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"            );","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"        TaskItem removedTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"        int taskListSize \u003d taskList.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"        return Ui.deletedTaskMessage(removedTask, taskListSize);","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"     * markAsFinished marks items on duke.Duke\u0027s list as completed. Completed tasks will have a checkbox \"[X]\".","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"     * @param taskItemNumber the index of the task to be marked as finished.","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"     * @throws DukeException An exception stemming from incorrect or awkward input to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"    public static String markAsFinished(String taskItemNumber) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"        int taskNumber \u003d Integer.parseInt(taskItemNumber);","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"        assert taskNumber \u003e\u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"        if (taskList.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! The task you chose to delete does not exist.\"","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"                            + \" Use the \u0027list\u0027 command to check the items in your list.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"            );","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"        taskList.get(taskNumber - 1).completeTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"        return Ui.completedTaskMessage(taskList.get(taskNumber - 1));","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"     * addToList adds a taskItem of type duke.TaskItem to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"     * @param taskItem a duke.TaskItem that is to be added to duke.Duke\u0027s list.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"    public static String addToList(TaskItem taskItem) {","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"wilburrito"},"content":"        Duke.taskList.add(taskItem);","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"        Duke.listIndex \u003d taskList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wilburrito"},"content":"        assert Duke.listIndex \u003e\u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"wilburrito"},"content":"        String body \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"wilburrito"},"content":"        if (listIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"wilburrito"},"content":"            body \u003d \"Now you have \" + 1 + \" task in the list.\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"wilburrito"},"content":"        if (listIndex \u003e 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"wilburrito"},"content":"            body \u003d \"Now you have \" + (Duke.listIndex) + \" tasks in your list.\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"wilburrito"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"wilburrito"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"wilburrito"},"content":"                + taskItem.toString() + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"wilburrito"},"content":"                + body","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"wilburrito"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"wilburrito"},"content":"     * prints the list upon inputting the \u0027list\u0027 command.","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"wilburrito"},"content":"    public static String printList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"wilburrito"},"content":"        int number \u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"wilburrito"},"content":"        StringBuilder output \u003d new StringBuilder(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"wilburrito"},"content":"                + \"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"wilburrito"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"wilburrito"},"content":"            if (taskList.get(i) !\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"wilburrito"},"content":"                output.append(number).append(\".\").append(taskList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"wilburrito"},"content":"                number++;","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"wilburrito"},"content":"        return output.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"wilburrito"},"content":"     * Finds tasks based on the keyword the user inputs and prints them to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"wilburrito"},"content":"     * @param keyword keyword used to find matching tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"wilburrito"},"content":"     * @return a TaskList with matching tasks to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"wilburrito"},"content":"    public static TaskList findTask(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"wilburrito"},"content":"        return taskList.findTask(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"wilburrito"},"content":"     * main method.","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"wilburrito"},"content":"     * @param args input from the user to control Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":161,"author":{"gitId":"wilburrito"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"wilburrito"},"content":"        Duke.awaken();","lastModifiedDate":"2021-08-16"},{"lineNumber":163,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":164,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"wilburrito"},"content":"     * Returns a boolean to indicate whether Duke is still active","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"wilburrito"},"content":"     * @return a boolean active.","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"wilburrito"},"content":"    public static boolean isActive() {","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"wilburrito"},"content":"        return active;","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"wilburrito"},"content":"     * Makes Duke inactive.","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"wilburrito"},"content":"    public static void makeInactive() {","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"wilburrito"},"content":"        Duke.active \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"wilburrito"},"content":"     * Returns the taskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":182,"author":{"gitId":"wilburrito"},"content":"     * @return Duke\u0027s taskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":184,"author":{"gitId":"wilburrito"},"content":"    public static TaskList getTaskList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":185,"author":{"gitId":"wilburrito"},"content":"        return Duke.taskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":186,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"wilburrito":187}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"     * Constructor for duke.DukeException. duke.DukeException inherits from the Exception parent class.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"     * @param errorMessage the error message that is presented when an incorrent input is entered to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":14}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"public class Event extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    protected boolean readFromFile \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"    protected LocalDateTime byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    protected String dateAndTimeInString;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating an duke.Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"     * @param description description of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"     * @param byDateAndTime date and time of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    public Event(String description, LocalDateTime byDateAndTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"        this.byDateAndTime \u003d byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"        if (byDateAndTime.getDayOfMonth() \u003d\u003d LocalDateTime.now().getDayOfMonth()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"            int hour \u003d byDateAndTime.getHour();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"            int minute \u003d byDateAndTime.getMinute();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d \"Today at \" + hour + \":\" + minute;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"            String timeOfDay;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"            int hour \u003d byDateAndTime.getHour();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"            if (byDateAndTime.getHour() \u003e 12) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"                timeOfDay \u003d \"PM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"                hour -\u003d 12;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"            } else if (byDateAndTime.getHour() \u003d\u003d 12) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"                timeOfDay \u003d \"PM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"                timeOfDay \u003d \"AM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d this.byDateAndTime.getDayOfWeek().toString() + \" \" + hour + timeOfDay;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"     * returns the Event in a writable format to the data.txt file, such that it can be loaded","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"     * in, in the event that Duke is restarted.","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"     * @return a String representation of an Event.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        return \"[E]\" + super.toString() + \"--\" + byDateAndTime.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"     * @return a String representation of an duke.Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.dateAndTimeInString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":54}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":28}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/IMG_5401.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/IMG_4596.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"     * Initialises the GUI.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     * interprets string input from the user and translates it into commands, and uses Duke to execute them.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"     * @param input string input from the user of Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"     * @return a boolean indicating whether Duke should continue or whether it should go to sleep based on the input.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    public static boolean interpretCommand(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"        boolean cont \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"        if (input.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"                String[] splitString \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"                                + \"☹ OOPS!!! Choose the task number to be considered done.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"                                + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"                String taskItemNumber \u003d splitString[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"                if (Integer.parseInt(taskItemNumber) \u003e Duke.getTaskList().size()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! Choose a valid task number to be considered done.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"                Duke.markAsFinished(taskItemNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"                Storage.rewriteFile(Duke.getTaskList());","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"            //input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"                String actualToDo \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"                if (actualToDo.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"                ToDo newToDo \u003d new ToDo(actualToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"                Duke.addToList(newToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"                Storage.appendToFile(newToDo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"                input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! The description or by-date (or both) cannot be empty.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"                String by \u003d input.split(\"/\")[1].split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"                String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"                    LocalDateTime byDateAndTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"                    Deadline dead \u003d new Deadline(description, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"                    Duke.addToList(dead);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"                    Storage.appendToFile(dead.toFileString());","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"                input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! The description of an event,\"","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"                                    + \" as well as its date and time, cannot be empty.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"                String date \u003d input.split(\"/\")[1].split(\" \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"                String time \u003d input.split(\"/\")[1].split(\" \")[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"                    LocalDateTime byDateAndTime \u003d LocalDateTime.parse(date + \" \" + time, formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"                    String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"                    Event someEvent \u003d new Event(description, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"                    Duke.addToList(someEvent);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"                    Storage.appendToFile(someEvent.toFileString());","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wilburrito"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"wilburrito"},"content":"            Duke.printList();","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"wilburrito"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"wilburrito"},"content":"            Duke.makeInactive();","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"wilburrito"},"content":"            Ui.sendEndMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"wilburrito"},"content":"            //save txt file here or something idk","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"wilburrito"},"content":"            Storage.rewriteFile(Duke.getTaskList());","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"wilburrito"},"content":"            cont \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! Please state the task number that you want to delete.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"wilburrito"},"content":"                String taskToBeDeleted \u003d input.split(\" \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"wilburrito"},"content":"                Duke.deleteTask(taskToBeDeleted);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"wilburrito"},"content":"                //rewrite whole txt file","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"wilburrito"},"content":"                Storage.rewriteFile(Duke.getTaskList());","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! Please tell me what you want to find!\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"wilburrito"},"content":"                String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"wilburrito"},"content":"                TaskList matchingTasks \u003d Duke.findTask(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"wilburrito"},"content":"                if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"wilburrito"},"content":"                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! No tasks match your search.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"wilburrito"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"wilburrito"},"content":"                    int number \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"wilburrito"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"wilburrito"},"content":"                    System.out.println(\"Here is what I found:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"wilburrito"},"content":"                    for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"wilburrito"},"content":"                        System.out.println(number + \".\" + matchingTasks.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"wilburrito"},"content":"                        number++;","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"wilburrito"},"content":"        return cont;","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":184,"author":{"gitId":"wilburrito"},"content":"     * Interprets string input like the above interpretCommand method, but this method instead returns a String","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"wilburrito"},"content":"     * @param input string input from the user of Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":186,"author":{"gitId":"wilburrito"},"content":"     * @return a String containing the response from Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":187,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":188,"author":{"gitId":"wilburrito"},"content":"    public static String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"wilburrito"},"content":"        String response \u003d \"No response from Duke for some reason!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":191,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":192,"author":{"gitId":"wilburrito"},"content":"        if (input.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":193,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":194,"author":{"gitId":"wilburrito"},"content":"                String[] splitString \u003d input.split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"wilburrito"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! Choose the task number to be considered done.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! Choose the task number to be considered done.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"wilburrito"},"content":"                String taskItemNumber \u003d splitString[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"wilburrito"},"content":"                if (Integer.parseInt(taskItemNumber) \u003e Duke.getTaskList().size()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":208,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! Choose a valid task number to be considered done.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-31"},{"lineNumber":212,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":213,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! Choose a valid task number to be considered done.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":214,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":215,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-31"},{"lineNumber":216,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":217,"author":{"gitId":"wilburrito"},"content":"                response \u003d Duke.markAsFinished(taskItemNumber);","lastModifiedDate":"2021-08-31"},{"lineNumber":218,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":219,"author":{"gitId":"wilburrito"},"content":"                Storage.rewriteFile(Duke.getTaskList());","lastModifiedDate":"2021-08-31"},{"lineNumber":220,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":221,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":222,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":223,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":224,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":225,"author":{"gitId":"wilburrito"},"content":"                String actualToDo \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":226,"author":{"gitId":"wilburrito"},"content":"                if (actualToDo.equals(\"\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":227,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":229,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-31"},{"lineNumber":231,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":232,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":233,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":234,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-31"},{"lineNumber":235,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":236,"author":{"gitId":"wilburrito"},"content":"                ToDo newToDo \u003d new ToDo(actualToDo);","lastModifiedDate":"2021-08-31"},{"lineNumber":237,"author":{"gitId":"wilburrito"},"content":"                response \u003d Duke.addToList(newToDo);","lastModifiedDate":"2021-08-31"},{"lineNumber":238,"author":{"gitId":"wilburrito"},"content":"                Storage.appendToFile(newToDo.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":239,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":240,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":241,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":242,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":243,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":244,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":245,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":246,"author":{"gitId":"wilburrito"},"content":"                input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":247,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":248,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! The description or by-date (or both) cannot be empty.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-31"},{"lineNumber":252,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":253,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! The description or by-date (or both) cannot be empty.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":254,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":255,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-31"},{"lineNumber":256,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":257,"author":{"gitId":"wilburrito"},"content":"                String by \u003d input.split(\"/\")[1].split(\" \", 2)[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":258,"author":{"gitId":"wilburrito"},"content":"                String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":259,"author":{"gitId":"wilburrito"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-31"},{"lineNumber":260,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-31"},{"lineNumber":261,"author":{"gitId":"wilburrito"},"content":"                    LocalDateTime byDateAndTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-31"},{"lineNumber":262,"author":{"gitId":"wilburrito"},"content":"                    Deadline dead \u003d new Deadline(description, byDateAndTime);","lastModifiedDate":"2021-08-31"},{"lineNumber":263,"author":{"gitId":"wilburrito"},"content":"                    response \u003d Duke.addToList(dead);","lastModifiedDate":"2021-08-31"},{"lineNumber":264,"author":{"gitId":"wilburrito"},"content":"                    Storage.appendToFile(dead.toFileString());","lastModifiedDate":"2021-08-31"},{"lineNumber":265,"author":{"gitId":"wilburrito"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":266,"author":{"gitId":"wilburrito"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2021-08-31"},{"lineNumber":267,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":268,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":269,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":270,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":271,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":272,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":273,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":274,"author":{"gitId":"wilburrito"},"content":"                input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":275,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":276,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":277,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! The description of an event,\"","lastModifiedDate":"2021-09-17"},{"lineNumber":278,"author":{"gitId":"wilburrito"},"content":"                            + \" as well as its date and time, cannot be empty.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":279,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":280,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-31"},{"lineNumber":281,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":282,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! The description of an event,\"","lastModifiedDate":"2021-08-31"},{"lineNumber":283,"author":{"gitId":"wilburrito"},"content":"                                    + \" as well as its date and time, cannot be empty.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":284,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":285,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-31"},{"lineNumber":286,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":287,"author":{"gitId":"wilburrito"},"content":"                String date \u003d input.split(\"/\")[1].split(\" \")[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":288,"author":{"gitId":"wilburrito"},"content":"                String time \u003d input.split(\"/\")[1].split(\" \")[2];","lastModifiedDate":"2021-08-31"},{"lineNumber":289,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":290,"author":{"gitId":"wilburrito"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-31"},{"lineNumber":291,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-31"},{"lineNumber":292,"author":{"gitId":"wilburrito"},"content":"                    LocalDateTime byDateAndTime \u003d LocalDateTime.parse(date + \" \" + time, formatter);","lastModifiedDate":"2021-08-31"},{"lineNumber":293,"author":{"gitId":"wilburrito"},"content":"                    String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":294,"author":{"gitId":"wilburrito"},"content":"                    Event someEvent \u003d new Event(description, byDateAndTime);","lastModifiedDate":"2021-08-31"},{"lineNumber":295,"author":{"gitId":"wilburrito"},"content":"                    response \u003d Duke.addToList(someEvent);","lastModifiedDate":"2021-08-31"},{"lineNumber":296,"author":{"gitId":"wilburrito"},"content":"                    Storage.appendToFile(someEvent.toFileString());","lastModifiedDate":"2021-08-31"},{"lineNumber":297,"author":{"gitId":"wilburrito"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":298,"author":{"gitId":"wilburrito"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2021-08-31"},{"lineNumber":299,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":300,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":301,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":302,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":303,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":304,"author":{"gitId":"wilburrito"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":305,"author":{"gitId":"wilburrito"},"content":"            response \u003d Duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":306,"author":{"gitId":"wilburrito"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":307,"author":{"gitId":"wilburrito"},"content":"            Duke.makeInactive();","lastModifiedDate":"2021-08-31"},{"lineNumber":308,"author":{"gitId":"wilburrito"},"content":"            response \u003d Ui.sendEndMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":309,"author":{"gitId":"wilburrito"},"content":"            Storage.rewriteFile(Duke.getTaskList());","lastModifiedDate":"2021-08-31"},{"lineNumber":310,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":311,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":312,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":313,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":314,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":315,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! Please state the task number that you want to delete.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":316,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":317,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-31"},{"lineNumber":318,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":319,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! Please state the task number that you want to delete.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":320,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":321,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-31"},{"lineNumber":322,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":323,"author":{"gitId":"wilburrito"},"content":"                String taskToBeDeleted \u003d input.split(\" \")[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":324,"author":{"gitId":"wilburrito"},"content":"                response \u003d Duke.deleteTask(taskToBeDeleted);","lastModifiedDate":"2021-08-31"},{"lineNumber":325,"author":{"gitId":"wilburrito"},"content":"                Storage.rewriteFile(Duke.getTaskList());","lastModifiedDate":"2021-08-31"},{"lineNumber":326,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":327,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":328,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":329,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":330,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":331,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":332,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":333,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":334,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! Please tell me what you want to find!\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":335,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":336,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-31"},{"lineNumber":337,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":338,"author":{"gitId":"wilburrito"},"content":"                                    + \"☹ OOPS!!! Please tell me what you want to find!\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":339,"author":{"gitId":"wilburrito"},"content":"                                    + \"____________________________________________________________\"","lastModifiedDate":"2021-08-31"},{"lineNumber":340,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-31"},{"lineNumber":341,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":342,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":343,"author":{"gitId":"wilburrito"},"content":"                String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":344,"author":{"gitId":"wilburrito"},"content":"                TaskList matchingTasks \u003d Duke.findTask(keyword);","lastModifiedDate":"2021-08-31"},{"lineNumber":345,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":346,"author":{"gitId":"wilburrito"},"content":"                if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":347,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":348,"author":{"gitId":"wilburrito"},"content":"                            + \"☹ OOPS!!! No tasks match your search.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":349,"author":{"gitId":"wilburrito"},"content":"                            + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":350,"author":{"gitId":"wilburrito"},"content":"                } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":351,"author":{"gitId":"wilburrito"},"content":"                    int number \u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":352,"author":{"gitId":"wilburrito"},"content":"                    response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":353,"author":{"gitId":"wilburrito"},"content":"                            + \"Here is what I found:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":354,"author":{"gitId":"wilburrito"},"content":"                    for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":355,"author":{"gitId":"wilburrito"},"content":"                        response +\u003d number + \".\" + matchingTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":356,"author":{"gitId":"wilburrito"},"content":"                        number++;","lastModifiedDate":"2021-08-31"},{"lineNumber":357,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-31"},{"lineNumber":358,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":359,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":360,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":361,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":362,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":363,"author":{"gitId":"wilburrito"},"content":"            response \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":364,"author":{"gitId":"wilburrito"},"content":"                    + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":365,"author":{"gitId":"wilburrito"},"content":"                    + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":366,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":367,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":368,"author":{"gitId":"wilburrito"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":369,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":370,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":370}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.io.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    private static boolean appendMode \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    private static String filePath \u003d \"./data/dukeData.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     * loads data about the task list from dukeData.txt.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"     * @return an ArrayList of TaskItems that will be used to create Duke\u0027s TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    public static ArrayList\u003cTaskItem\u003e loadData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"        File folder \u003d new File(\"./data/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"            folder.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        File dukeData \u003d new File(\"./data/dukeData.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"            if (dukeData.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"                //System.out.println(\"File is created!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"                //System.out.println(\"Data file already exists.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"            if (dukeData.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"                return new ArrayList\u003cTaskItem\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"                BufferedReader bufReader \u003d new BufferedReader(new FileReader(\"./data/dukeData.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"                ArrayList\u003cTaskItem\u003e taskItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"                String task \u003d bufReader.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                while (task !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"                    String completed \u003d task.substring(4, 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"                    String taskType \u003d task.substring(1, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"                    if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"                        String dateAndTimeInString \u003d task.split(\"--\")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"                        LocalDateTime byDateAndTime \u003d LocalDateTime.parse(dateAndTimeInString);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"                        task \u003d \" \" + task.split(\"--\")[0].substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"                        Deadline dead \u003d new Deadline(task, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"                        if (completed.equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"                            dead.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"                        taskItems.add(dead);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"                    } else if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"                        task \u003d \" \" + task.substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"                        ToDo toDoItem \u003d new ToDo(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"                        if (completed.equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"                            toDoItem.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"                        taskItems.add(toDoItem);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"                    } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(task.split(\"--\")[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"                        String dateAndTimeInString \u003d task.split(\"--\")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(dateAndTimeInString);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"                        LocalDateTime byDateAndTime \u003d LocalDateTime.parse(dateAndTimeInString);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"                        task \u003d \" \" + task.split(\"--\")[0].substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"                        Event someEvent \u003d new Event(task, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"                        if (completed.equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"                            someEvent.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"                        taskItems.add(someEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"                    task \u003d bufReader.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"                bufReader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"                return taskItems;","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"Some error occurred while tyring to load.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"        return new ArrayList\u003cTaskItem\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"     * Writes task items as strings to dukeData.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"     * @param content the content that is to be written to dukeData.txt.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"    public static void appendToFile(String content) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"            assert appendMode;","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"            FileWriter fw \u003d new FileWriter(filePath, appendMode);","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"            fw.write(content + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"Some error occurred while trying to appendToFile.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"     * Used to rewrite the whole file, given a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"     * @param taskList Duke\u0027s TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"    public static void rewriteFile(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"        File dukeData \u003d new File(\"./data/dukeData.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"        dukeData.delete();","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"            File dukeData2 \u003d new File(\"./data/dukeData.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"            FileWriter fw \u003d new FileWriter(filePath, appendMode);","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"                fw.write(taskList.get(i).toFileString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"Some error occurred while tyring to load.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wilburrito":121}},{"path":"src/main/java/duke/TaskItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class TaskItem {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"    private String task;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a duke.TaskItem object.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     * @param task the description of the duke.TaskItem.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    public TaskItem(String task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"        this.completed \u003d false; // by default if you add it to the list then it should be false first.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     * describes the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     * @return returns the description of the duke.TaskItem as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    public String describeTaskItem() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        return this.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     * queries whether the task is completed or not.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"     * @return a boolean to tell whether or not the task is completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"        return this.completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     * Completes this task.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     * toFileString returns the TaskItem in a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"     * @return returns the Deadline in a string format that is specifically made for the dukeData.txt file.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        if (completed) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"            return \"[X]\" + this.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"            return \"[ ]\" + this.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"     * @return a String representation of a duke.TaskItem.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        if (completed) {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"            return \"[X]\" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"            return \"[ ]\" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"wilburrito":64}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    private ArrayList\u003cTaskItem\u003e arrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * Default constructor to create an empty TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        this.arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * Used to create a TaskList from a given ArrayList of TaskItems.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     * @param arrayList an ArrayList of TaskItems that should be in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    public TaskList(ArrayList\u003cTaskItem\u003e arrayList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"        this.arrayList \u003d arrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"     * Adds a TaskItem to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"     * @param task","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    public void add(TaskItem task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"        arrayList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"     * @return size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        return arrayList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * Gets a TaskItem from the TaskList given the index of its position in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     * @param index The index of the TaskItem in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"     * @return The TaskItem at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    public TaskItem get(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        return arrayList.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"     * Removes a TaskItem from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"     * @param index the index of the TaskItem that is to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        this.arrayList.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"     * finds tasks that contain a given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"     * @param keyword if a task contains this, it will be printed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"     * @return the TaskList containing tasks matching the keyword, if any.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"    public TaskList findTask(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"        ArrayList\u003cTaskItem\u003e copyOfTaskList \u003d new ArrayList\u003cTaskItem\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"        for (int i \u003d 0; i \u003c arrayList.size(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"            String taskDescription \u003d arrayList.get(i).describeTaskItem();","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"                copyOfTaskList.add(arrayList.get(i));","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"        return new TaskList(copyOfTaskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":72}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class ToDo extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"    private boolean readFromFile \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a duke.ToDo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * @param description the description of the duke.ToDo/duke.TaskItem.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * Overriden toFileString method. Writes the task item into the dukeData file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     * @return A String representation of a duke.ToDo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"    private static final String startMessage \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"            + \"Hello! I\u0027m Duke. \\nFor \"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"            + \"events and deadlines, be sure to state the due date or the event timing as such: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"            + \"\u0027XXX /by dd-MM-yyyy HH:mm\u0027\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"            + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    private static final String endMessage \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"            + \"Bye! Hope to see you again soon!\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"            + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    private static final String taskDoesNotExistError \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"            + \"☹ OOPS!!! The task you chose does not exist. Use the \u0027list\u0027 command to check the items in your list.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"            + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     * Sends a customised error message, usually from DukeExceptions.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     * @param message the error message that is printed out to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    public static void customErrorMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     * Sends Duke\u0027s start message when Duke awakens.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    public static void sendStartMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        System.out.println(Ui.startMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"     * Sends Duke\u0027s end message when Duke goes to sleep.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"    public static String sendEndMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        return Ui.endMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * Prints a message to the user about the task that the user just deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     * @param task The task that got deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"     * @param taskListSize The updated TaskList size.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    public static String deletedTaskMessage(TaskItem task, int taskListSize) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        String body \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        if (taskListSize \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"            /* System.out.println(\"Now you have \" + 1 + \" task in the list.\"); */","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"            body \u003d \"Now you have \" + 1 + \" task in the list.\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"        if (taskListSize \u003e 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"            /* System.out.println(\"Now you have \" + (Duke.listIndex) + \" tasks in your list.\"); */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"            body \u003d \"Now you have \" + taskListSize + \" tasks in your list.\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"                + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"                + body","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"     * Prints a notification to the user about a Task that the user just marked as complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"     * @param task The Task that was marked as complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"    public static String completedTaskMessage(TaskItem task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"                + task.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"                + \"\\n____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"     * Sends a message to the user when the user\u0027s input for the date/time for Events and Deadlines are invalid inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"    public static void dateTimeError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Please follow the specified format for entering the date and time of the deadline.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":82}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wilburrito":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     * Testing the creation of a ToDo. Should return true if the test case passes.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    public void testCommandInterpretation1() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"        assertEquals(true, Parser.interpretCommand(\"todo kill morty\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     * Testing whether Duke goes to sleep when user input is \"bye\". Should return false to pass the test case.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    public void testCommandInterpretation2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        assertEquals(false, Parser.interpretCommand(\"bye\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":24}},{"path":"src/test/java/TaskItemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import duke.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"public class TaskItemTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    public void testStringRepresentationForDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"        Deadline dead \u003d new Deadline(\" kill rick and morty \", LocalDateTime.parse(\"2021-08-28T12:00\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"        assertEquals(\"[D][ ] kill rick and morty (by: SATURDAY)\", dead.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    public void testStringRepresentationForToDo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"        ToDo something \u003d new ToDo(\" kill rick and morty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        assertEquals(\"[T][ ] kill rick and morty\", something.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":23}},{"path":"text-ui-test/data/dukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"[T][ ] borrow book","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"[D][ ] return book (by: Tomorrow)","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"[T][ ] borrow book","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"[D][ ] return book (by: Tomorrow)","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wilburrito":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wilburrito":1}}]
