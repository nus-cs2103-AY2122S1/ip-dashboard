[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"wilburrito":2}},{"path":"data/dukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"[T][ ] kill rick and morty","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"[D][ ] kill rick and morty --2021-08-27T12:00","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"[E][X] kill rick and morty --2021-08-28T12:00","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"[T][ ] say hello to morty\u0027s mother","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"[T][ ] kill rick and morty","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"[T][ ] kill rick","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"[D][ ] kill morty --2021-08-25T12:00","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wilburrito":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"public class Deadline extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    protected LocalDateTime byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    protected String dateAndTimeInString;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a duke.Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"     * @param byDateAndTime the by-date of the task, e.g. \"by 27-04-1999 12:00\"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    public Deadline(String description, LocalDateTime byDateAndTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"        this.byDateAndTime \u003d byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"        if (byDateAndTime.getDayOfMonth() \u003d\u003d LocalDateTime.now().getDayOfMonth()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"            int hour \u003d byDateAndTime.getHour();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"            int minute \u003d byDateAndTime.getMinute();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d \"Today at \" + hour + \":\" + minute;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d this.byDateAndTime.getDayOfWeek().toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"     * toFileString returns the Deadline in a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"     * @return returns the Deadline in a string format that is specifically made for the dukeData.txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"        return \"[D]\" + super.toString() + \"--\" + byDateAndTime.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * @return a string representation of the duke.Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.dateAndTimeInString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":46}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"    public static boolean active;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"    public static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    public static int listIndex \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * awaken() awakens duke.Duke and allows one to input commands to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    public static void awaken() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"        //load previous list data here maybe","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"        taskList \u003d new TaskList(Storage.loadData());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"        Duke.active \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"        Ui.sendStartMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        java.util.Scanner scanner \u003d new java.util.Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        while (active) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"            boolean cont \u003d Parser.interpretCommand(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"            if (!cont) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"     * deletes a task from the list that duke.Duke creates.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"     * @param taskToBeDeleted the index of the task to be deleted.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     * @throws DukeException An exception stemming from incorrect or awkward input to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    public static void deleteTask(String taskToBeDeleted) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        int taskNumber \u003d Integer.parseInt(taskToBeDeleted);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"        if (taskList.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"                            \"☹ OOPS!!! The task you chose to delete does not exist. Use the \u0027list\u0027 command to check the items in your list.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"            );","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        TaskItem removedTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"        int taskListSize \u003d taskList.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"        Ui.deletedTaskMessage(removedTask, taskListSize);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"     * markAsFinished marks items on duke.Duke\u0027s list as completed. Completed tasks will have a checkbox \"[X]\".","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"     * @param taskItemNumber the index of the task to be marked as finished.","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"     * @throws DukeException An exception stemming from incorrect or awkward input to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"    public static void markAsFinished(String taskItemNumber) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"        int taskNumber \u003d Integer.parseInt(taskItemNumber);","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"        if (taskList.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"                            \"☹ OOPS!!! The task you chose does not exist. Use the \u0027list\u0027 command to check the items in your list.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"            );","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"        taskList.get(taskNumber - 1).completeTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"        Ui.completedTaskMessage(taskList.get(taskNumber - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"     * addToList adds a taskItem of type duke.TaskItem to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"     * @param taskItem a duke.TaskItem that is to be added to duke.Duke\u0027s list.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"    public static void addToList(TaskItem taskItem) {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"        Duke.taskList.add(taskItem);","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"        Duke.listIndex \u003d taskList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"        System.out.println(taskItem.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"        if (listIndex \u003d\u003d 1) System.out.println(\"Now you have \" + 1 + \" task in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"        if (listIndex \u003e 1) System.out.println(\"Now you have \" + (Duke.listIndex) + \" tasks in your list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"     * prints the list upon inputting the \u0027list\u0027 command.","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"        int number \u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"            if (taskList.get(i) !\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"                System.out.println(number + \".\" + taskList.get(i).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"                number++;","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"     * main method.","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"     * @param args input from the user to control duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"        Duke.awaken();","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"-":1,"wilburrito":111}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"     * Constructor for duke.DukeException. duke.DukeException inherits from the Exception parent class.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"     * @param errorMessage the error message that is presented when an incorrent input is entered to duke.Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":14}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"public class Event extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    protected boolean readFromFile \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    protected LocalDateTime byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    protected String dateAndTimeInString;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating an duke.Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     * @param description description of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     * @param byDateAndTime date and time of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    public Event(String description, LocalDateTime byDateAndTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        this.byDateAndTime \u003d byDateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"        if (byDateAndTime.getDayOfMonth() \u003d\u003d LocalDateTime.now().getDayOfMonth()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"            int hour \u003d byDateAndTime.getHour();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"            int minute \u003d byDateAndTime.getMinute();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d \"Today at \" + hour + \":\" + minute;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"            String timeOfDay;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"            int hour \u003d byDateAndTime.getHour();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"            if (byDateAndTime.getHour() \u003e 12) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"                timeOfDay \u003d \"PM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"                hour -\u003d 12;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"            } else if (byDateAndTime.getHour() \u003d\u003d 12) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"                timeOfDay \u003d \"PM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                timeOfDay \u003d \"AM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"            this.dateAndTimeInString \u003d this.byDateAndTime.getDayOfWeek().toString() + \" \" + hour + timeOfDay;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        return \"[E]\" + super.toString() + \"--\" + byDateAndTime.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"     * @return a String representation of an duke.Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.dateAndTimeInString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     * interprets string input from the user and translates it into commands, and uses Duke to execute them.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"     * @param input string input from the user of Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"     * @return a boolean indicating whether Duke should continue or whether it should go to sleep based on the input.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    public static boolean interpretCommand(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"        boolean cont \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"        if (input.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"                String[] splitString \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"                                    \"☹ OOPS!!! Choose the task number to be considered done.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"                                    \"____________________________________________________________\"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"                String taskItemNumber \u003d splitString[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"                if (Integer.parseInt(taskItemNumber) \u003e Duke.taskList.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"                                    \"☹ OOPS!!! Choose a valid task number to be considered done.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"                                    \"____________________________________________________________\"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"                Duke.markAsFinished(taskItemNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"                Storage.rewriteFile(Duke.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        }   else if (input.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"            //input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"                String actualToDo \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"                if (actualToDo.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"                                    \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"                                    \"____________________________________________________________\"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"                ToDo newToDo \u003d new ToDo(actualToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"                Duke.addToList(newToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"//                System.out.println(actualToDo);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"//                System.out.println(newToDo.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"                Storage.appendToFile(newToDo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"//                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"        }   else if (input.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"                input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"                                    \"☹ OOPS!!! The description or by-date (or both) cannot be empty.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"                                    \"____________________________________________________________\"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"                String by \u003d input.split(\"/\")[1].split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"                String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"                    LocalDateTime byDateAndTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"//                        String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"                    //duke.Deadline dead \u003d new duke.Deadline(description, by);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"                    Deadline dead \u003d new Deadline(description, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"                    Duke.addToList(dead);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"                    Storage.appendToFile(dead.toFileString());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"//                    System.out.println(\"Please follow the specified format for entering the date and time of the deadline.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"//                    System.out.println(byDateAndTime.toString() + \" for deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"//                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"        }   else if (input.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"                input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"                                    \"☹ OOPS!!! The description of an event, as well as its date and time, cannot be empty.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"                                    \"____________________________________________________________\"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"                String date \u003d input.split(\"/\")[1].split(\" \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"                String time \u003d input.split(\"/\")[1].split(\" \")[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"//                    System.out.println(date);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"//                    System.out.println(time);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"//                    System.out.println(date + time);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"wilburrito"},"content":"                    LocalDateTime byDateAndTime \u003d LocalDateTime.parse(date + \" \" + time, formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"//                    System.out.println(byDateAndTime.toString() + \" for event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"wilburrito"},"content":"                    String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wilburrito"},"content":"                    Event someEvent \u003d new Event(description, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"wilburrito"},"content":"                    Duke.addToList(someEvent);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"wilburrito"},"content":"                    Storage.appendToFile(someEvent.toFileString());","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"wilburrito"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"wilburrito"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"wilburrito"},"content":"                //System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"wilburrito"},"content":"                Ui.customErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"wilburrito"},"content":"        }   else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"wilburrito"},"content":"            Duke.printList();","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"wilburrito"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"wilburrito"},"content":"            Duke.active \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"wilburrito"},"content":"            Ui.sendEndMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"wilburrito"},"content":"            //save txt file here or something idk","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"wilburrito"},"content":"            Storage.rewriteFile(Duke.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"wilburrito"},"content":"            cont \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"wilburrito"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"wilburrito"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"wilburrito"},"content":"                if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"wilburrito"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"wilburrito"},"content":"                                    \"☹ OOPS!!! Please state the task number that you want to delete.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"wilburrito"},"content":"                                    \"____________________________________________________________\"","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"wilburrito"},"content":"                    );","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"wilburrito"},"content":"                String taskToBeDeleted \u003d input.split(\" \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"wilburrito"},"content":"                Duke.deleteTask(taskToBeDeleted);","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"wilburrito"},"content":"                //rewrite whole txt file","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"wilburrito"},"content":"                Storage.rewriteFile(Duke.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"wilburrito"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"wilburrito"},"content":"        return cont;","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":164}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.io.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    private static boolean appendMode \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    private static String filePath \u003d \"./data/dukeData.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     * loads data about the task list from dukeData.txt.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"     * @return an ArrayList of TaskItems that will be used to create Duke\u0027s TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    public static ArrayList\u003cTaskItem\u003e loadData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"        File folder \u003d new File(\"./data/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"            folder.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        File dukeData \u003d new File(\"./data/dukeData.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"            if (dukeData.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"                //System.out.println(\"File is created!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"                //System.out.println(\"Data file already exists.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"            if (dukeData.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"                return new ArrayList\u003cTaskItem\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"                BufferedReader bufReader \u003d new BufferedReader(new FileReader(\"./data/dukeData.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"                ArrayList\u003cTaskItem\u003e taskItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"                String task \u003d bufReader.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                while (task !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"                    String completed \u003d task.substring(4, 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"                    String taskType \u003d task.substring(1, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"                    if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"//                        System.out.println(task.split(\"--\")[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"                        String dateAndTimeInString \u003d task.split(\"--\")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(dateAndTimeInString);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"                        LocalDateTime byDateAndTime \u003d LocalDateTime.parse(dateAndTimeInString);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"                        task \u003d \" \" + task.split(\"--\")[0].substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"                        Deadline dead \u003d new Deadline(task, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"                        if (completed.equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"                            dead.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"                        taskItems.add(dead);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"                    } else if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"                        task \u003d \" \" + task.substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"                        ToDo toDoItem \u003d new ToDo(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"                        if (completed.equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"                            toDoItem.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"                        taskItems.add(toDoItem);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"                    } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(task.split(\"--\")[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"                        String dateAndTimeInString \u003d task.split(\"--\")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(dateAndTimeInString);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"                        LocalDateTime byDateAndTime \u003d LocalDateTime.parse(dateAndTimeInString);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"                        task \u003d \" \" + task.split(\"--\")[0].substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"                        //System.out.println(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"                        Event someEvent \u003d new Event(task, byDateAndTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"                        if (completed.equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"                            someEvent.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"                        taskItems.add(someEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"//                    taskItems.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"                    task \u003d bufReader.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"                bufReader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"                return taskItems;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"Some error occurred while tyring to load.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"        return new ArrayList\u003cTaskItem\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"     * Writes task items as strings to dukeData.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"     * @param content the content that is to be written to dukeData.txt.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"    public static void appendToFile(String content) {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"            FileWriter fw \u003d new FileWriter(filePath, appendMode);","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"            fw.write(content + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"Some error occurred while trying to appendToFile.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"     * Used to rewrite the whole file, given a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"     * @param taskList Duke\u0027s TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"    public static void rewriteFile(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"        File dukeData \u003d new File(\"./data/dukeData.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"        dukeData.delete();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"            File dukeData2 \u003d new File(\"./data/dukeData.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"//            if (dukeData.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"//                System.out.println(\"File is created!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"//            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wilburrito"},"content":"//                System.out.println(\"Data file already exists.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"//            }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wilburrito"},"content":"            FileWriter fw \u003d new FileWriter(filePath, appendMode);","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wilburrito"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"wilburrito"},"content":"                fw.write(taskList.get(i).toFileString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"wilburrito"},"content":"//                System.out.println(\"Wrote \" + arrayList.get(i).toString() + \" to file\");","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wilburrito"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"wilburrito"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wilburrito"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"wilburrito"},"content":"            System.out.println(\"Some error occurred while tyring to load.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wilburrito":137}},{"path":"src/main/java/duke/TaskItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class TaskItem {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"    private String task;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a duke.TaskItem object.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     * @param task the description of the duke.TaskItem.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    public TaskItem(String task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"        this.completed \u003d false; // by default if you add it to the list then it should be false first.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     * describes the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     * @return returns the description of the duke.TaskItem as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    public String describeTaskItem() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        return this.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     * queries whether the task is completed or not.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"     * @return a boolean to tell whether or not the task is completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"        return this.completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     * Completes this task.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"        if (completed) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"            return \"[X]\" + this.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"            return \"[ ]\" + this.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"     * @return a String representation of a duke.TaskItem.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"        if (completed) {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"            return \"[X]\" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"            return \"[ ]\" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"wilburrito":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    private ArrayList\u003cTaskItem\u003e arrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * Default constructor to create an empty TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        this.arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * Used to create a TaskList from a given ArrayList of TaskItems.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     * @param arrayList an ArrayList of TaskItems that should be in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    public TaskList(ArrayList\u003cTaskItem\u003e arrayList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"        this.arrayList \u003d arrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"     * Adds a TaskItem to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"     * @param task","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    public void add(TaskItem task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"        arrayList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"     * @return size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        return arrayList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * Gets a TaskItem from the TaskList given the index of its position in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     * @param index The index of the TaskItem in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"     * @return The TaskItem at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    public TaskItem get(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        return arrayList.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"     * Removes a TaskItem from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"     * @param index the index of the TaskItem that is to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        this.arrayList.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":58}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class ToDo extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"    private boolean readFromFile \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a duke.ToDo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * @param description the description of the duke.ToDo/duke.TaskItem.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"//    public duke.ToDo(String description, boolean readFromFile) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"//        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"//        this.readFromFile \u003d readFromFile;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"//    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"     * Overriden toFileString method. Writes the task item into the dukeData file.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"     * @return A String representation of a duke.ToDo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":38}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"    private static final String startMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"            \"Hello! I\u0027m Duke. \\nFor \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"            \"events and deadlines, be sure to state the due date or the event timing as such: \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"            \"\u0027XXX /by dd-MM-yyyy HH:mm\u0027\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    private static final String endMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"            \"Bye! Hope to see you again soon!\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    private static final String taskDoesNotExistError \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"            \"☹ OOPS!!! The task you chose does not exist. Use the \u0027list\u0027 command to check the items in your list.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     * Sends a customised error message, usually from DukeExceptions.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     * @param message the error message that is printed out to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    public static void customErrorMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     * Sends Duke\u0027s start message when Duke awakens.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    public static void sendStartMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        System.out.println(Ui.startMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"     * Sends Duke\u0027s end message when Duke goes to sleep.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"    public static void sendEndMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        System.out.println(Ui.endMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * Prints a message to the user about the task that the user just deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     * @param task The task that got deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"     * @param taskListSize The updated TaskList size.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    public static void deletedTaskMessage(TaskItem task, int taskListSize) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"        if (taskListSize \u003d\u003d 1) System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"        if (taskListSize \u003e 1) System.out.println(\"Now you have \" + taskListSize + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"     * Prints a notification to the user about a Task that the user just marked as complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"     * @param task The Task that was marked as complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"    public static void completedTaskMessage(TaskItem task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"     * Sends a message to the user when the user\u0027s input for the date/time for Events and Deadlines are invalid inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"    public static void dateTimeError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Please follow the specified format for entering the date and time of the deadline.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":70}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"    public void testCommandInterpretation1() {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"        assertEquals(true, Parser.interpretCommand(\"todo kill morty\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    public void testCommandInterpretation2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"        assertEquals(false, Parser.interpretCommand(\"bye\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":15}},{"path":"src/test/java/TaskItemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"import duke.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"public class TaskItemTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    public void testStringRepresentationForDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        Deadline dead \u003d new Deadline(\" kill rick and morty \", LocalDateTime.parse(\"2021-08-28T12:00\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"        assertEquals(\"[D][ ] kill rick and morty (by: SATURDAY)\", dead.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"    public void testStringRepresentationForToDo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"        ToDo something \u003d new ToDo(\" kill rick and morty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"        assertEquals(\"[T][ ] kill rick and morty\", something.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wilburrito":21}},{"path":"text-ui-test/data/dukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"[T][ ] borrow book","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"[D][ ] return book (by: Tomorrow)","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"[T][ ] borrow book","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"[D][ ] return book (by: Tomorrow)","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wilburrito":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wilburrito":1}}]
