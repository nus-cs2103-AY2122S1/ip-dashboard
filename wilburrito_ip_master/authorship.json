[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"public class Deadline extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a Deadline object.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"     * @param by the by-date of the task, e.g. \"by Sunday\"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     * @return a string representation of the Deadline object.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    public static boolean active;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"    public static String startMessage \u003d \"Hello! I\u0027m Duke \\nWhat can I do for you?\";","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    public static String endMessage \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    //public static String[] list \u003d new String[100];","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    public static ArrayList\u003cTaskItem\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"//    public static TaskItem[] taskList \u003d new TaskItem[100];","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    public static int listIndex \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * awaken() awakens Duke and allows one to input commands to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    public static void awaken() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"        Duke.active \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        Duke.sendStartMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"        java.util.Scanner scanner \u003d new java.util.Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"        while (active) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"            if (input.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"                    String[] splitString \u003d input.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"                    if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"                        throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"                                    \"☹ OOPS!!! Choose the task number to be considered done.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"                                        \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"                        );","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                    String taskItemNumber \u003d splitString[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"                    Duke.markAsFinished(taskItemNumber);","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"            }   else if (input.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"                //input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"                    String actualToDo \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"                    if (actualToDo.equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"                        throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"                                        \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"                                        \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"                        );","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"                    ToDo newToDo \u003d new ToDo(actualToDo);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"                    Duke.addToList(newToDo);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"            }   else if (input.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"                    input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"                    if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"                        throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"                                        \"☹ OOPS!!! The description or by-date (or both) cannot be empty.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"                                        \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"                        );","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"                    String by \u003d input.split(\"/\")[1].split(\" \", 2)[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"                    String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"                    Deadline dead \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"                    Duke.addToList(dead);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"            }   else if (input.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"                    input \u003d input.replace(input.split(\" \")[0], \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"                    if (input.split(\"/\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"                        throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"                                        \"☹ OOPS!!! The description of an event, as well as its date and time, cannot be empty.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"                                        \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"                        );","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"                    String date \u003d input.split(\"/\")[1].split(\" \")[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"                    String time \u003d input.split(\"/\")[1].split(\" \")[2];","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"                    String description \u003d input.split(\"/\")[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"                    Event someEvent \u003d new Event(description, date, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"                    Duke.addToList(someEvent);","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"            }   else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"                Duke.printList();","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"            } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"                Duke.active \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"                Duke.sendEndMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"wilburrito"},"content":"            } else if (input.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"                    if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"                        throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"                                        \"☹ OOPS!!! Please state the task number that you want to delete.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"                                        \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"                        );","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"                    String taskToBeDeleted \u003d input.split(\" \")[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"                    Duke.deleteTask(taskToBeDeleted);","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"wilburrito"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"wilburrito"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"wilburrito"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"wilburrito"},"content":"     * deletes a task from the list that Duke creates.","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"wilburrito"},"content":"     * @param taskToBeDeleted the index of the task to be deleted.","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"wilburrito"},"content":"     * @throws DukeException An exception stemming from incorrect or awkward input to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"wilburrito"},"content":"    public static void deleteTask(String taskToBeDeleted) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"wilburrito"},"content":"        int taskNumber \u003d Integer.parseInt(taskToBeDeleted);","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"        if (taskList.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"wilburrito"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"wilburrito"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"wilburrito"},"content":"                            \"☹ OOPS!!! The task you chose to delete does not exist. Use the \u0027list\u0027 command to check the items in your list.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"wilburrito"},"content":"            );","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"wilburrito"},"content":"        TaskItem removedTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"wilburrito"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"wilburrito"},"content":"        int taskListSize \u003d taskList.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"wilburrito"},"content":"        System.out.println(removedTask.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"wilburrito"},"content":"        if (taskListSize \u003d\u003d 1) System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"wilburrito"},"content":"        if (taskListSize \u003e 1) System.out.println(\"Now you have \" + taskListSize + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"wilburrito"},"content":"     * markAsFinished marks items on Duke\u0027s list as completed. Completed tasks will have a checkbox [X].","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"wilburrito"},"content":"     * @param taskItemNumber the index of the task to be marked as finished.","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"wilburrito"},"content":"     * @throws DukeException An exception stemming from incorrect or awkward input to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"wilburrito"},"content":"    public static void markAsFinished(String taskItemNumber) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"wilburrito"},"content":"        int taskNumber \u003d Integer.parseInt(taskItemNumber);","lastModifiedDate":"2021-08-16"},{"lineNumber":160,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":161,"author":{"gitId":"wilburrito"},"content":"        if (taskList.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"wilburrito"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"wilburrito"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"wilburrito"},"content":"                            \"☹ OOPS!!! The task you chose does not exist. Use the \u0027list\u0027 command to check the items in your list.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"wilburrito"},"content":"                            \"____________________________________________________________\"","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"wilburrito"},"content":"            );","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"wilburrito"},"content":"        taskList.get(taskNumber - 1).completeTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":171,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":172,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"wilburrito"},"content":"        System.out.println(taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":177,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":178,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"wilburrito"},"content":"     * addToList adds a taskItem of type TaskItem to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"wilburrito"},"content":"     * @param taskItem a TaskItem that is to be added to Duke\u0027s list.","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"wilburrito"},"content":"    public static void addToList(TaskItem taskItem) {","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"wilburrito"},"content":"        Duke.taskList.add(taskItem);","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"wilburrito"},"content":"        Duke.listIndex++;","lastModifiedDate":"2021-08-16"},{"lineNumber":185,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"wilburrito"},"content":"        System.out.println(taskItem.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"wilburrito"},"content":"        if (listIndex \u003d\u003d 1) System.out.println(\"Now you have \" + 1 + \" task in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"wilburrito"},"content":"        if (listIndex \u003e 1) System.out.println(\"Now you have \" + (Duke.listIndex) + \" tasks in your list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":191,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":193,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"wilburrito"},"content":"     * prints the list upon inputting the \u0027list\u0027 command.","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"wilburrito"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"wilburrito"},"content":"        int number \u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"wilburrito"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"wilburrito"},"content":"            if (taskList.get(i) !\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"wilburrito"},"content":"                System.out.println(number + \".\" + taskList.get(i).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":204,"author":{"gitId":"wilburrito"},"content":"                number++;","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"wilburrito"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"wilburrito"},"content":"     * sends the greeting message for Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"wilburrito"},"content":"    public static void sendStartMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":215,"author":{"gitId":"wilburrito"},"content":"        System.out.println(startMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":218,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"wilburrito"},"content":"     * sends the closing message for Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":221,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"wilburrito"},"content":"    public static void sendEndMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":224,"author":{"gitId":"wilburrito"},"content":"        System.out.println(endMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":225,"author":{"gitId":"wilburrito"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":226,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":227,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":228,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"wilburrito"},"content":"     * main method.","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"wilburrito"},"content":"     * @param args input from the user to control Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"wilburrito"},"content":"        Duke.awaken();","lastModifiedDate":"2021-08-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"-":4,"wilburrito":231}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"     * Constructor for DukeException. DukeException inherits from the Exception parent class.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"     * @param errorMessage the error message that is presented when an incorrent input is entered to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"public class Event extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"    protected String date;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"    protected String time;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating an Event object.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"     * @param description description of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     * @param date date of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"     * @param time the time that this event is going to occur.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"    public Event(String description, String date, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"     * @return a String representation of an Event object.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.date + \" \" + this.time + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":26}},{"path":"src/main/java/TaskItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"public class TaskItem {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"    private String task;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a TaskItem object.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"     * @param task the description of the TaskItem.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"    public TaskItem(String task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"        this.completed \u003d false; // by default if you add it to the list then it should be false first.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * describes the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     * @return returns the description of the TaskItem as a String.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    public String describeTaskItem() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"        return this.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"     * queries whether the task is completed or not.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"     * @return a boolean to tell whether or not the task is completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"        return this.completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"     * Completes this task.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"     * @return a String representation of a TaskItem.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        if (completed) {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"            return \"[X]\" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"            return \"[ ]\" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"wilburrito":50}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"public class ToDo extends TaskItem {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"     * Constructor for creating a ToDo object.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"     * @param description the description of the ToDo/TaskItem.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"     * Overriden toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"     * @return A String representation of a ToDo object.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"deadline return book /by Tomorrow","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wilburrito":9}}]
