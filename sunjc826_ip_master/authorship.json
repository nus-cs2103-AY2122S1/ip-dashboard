[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"    include \u0027test/java/**\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"sunjc826":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"# Duke TodoApp","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"Duke is a todo task manager that helps you to track various sorts of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"## Quick start","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/sunjc826/ip/releases).","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"4. Double-click the file to start the app. The GUI should be similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"   ![Ui](./Ui.png)","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    * **`list`** : Lists all tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    * **`todo`**`do stuff` : Adds a todo task named `do stuff` to Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    * **`find`**`stuff` : Finds all tasks with name matching `stuff`.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    * **`delete`**`1` : Deletes the 1st task in the current list.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    * **`bye`** : Exits the app.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"6. Refer to the [Usage](#Usage) below for details of each command.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"### Todos","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"Track generic tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"### Deadlines","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"Track deadlines with a given date and time.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"### Events","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"Track events taking place over a period of time.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"### Completion","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"Record the completion status of your tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"### `list` - Lists out all registered tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"Lists out all tasks in the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"Format: `list`","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"Example: ","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"- Having added two tasks named `Task A`, `Task B` and listing them will show the following.\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"![Demo of list command](./images/list.png)","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"### `find` - Filters out tasks by name.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"Given a keyword, lists out all tasks with name matching the keyword.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"Format: `find SEARCH_KEYWORD`","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"Example:","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"- Having added two tasks named `Task A`, `Task B`, we use `find B`.\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"![Demo of find command](./images/find.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"Of the tasks `Task A`, `Task B`, only `Task B` matches the search keyword `B`. Hence, only","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"`Task B` is in the output.","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"### `done` - Completes a certain task.","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"Sets the completion status of a specified task to complete.","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"Example:","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"- `done 2`\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"![Demo of done command](./images/done.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"Marks the task at index 2 as done.\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"Using the list command now would show the following.\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"![Listing after done command](./images/done-list.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"### `todo` - Add a todo task.","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"Creates and adds a todo task to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"Format: `todo NAME_OF_TASK`","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"Example ","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"- `todo test task`\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"![Demo of todo command](./images/todo.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"A task called `test task` will be created and added to the list of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"### `deadline` - Add a deadline task.","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"Creates and adds a deadline task to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"Format: `deadline NAME_OF_DEADLINE /by DATETIME`","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"- `DATETIME` format: `d/m/yyyy( HHmm)`. Note that the time portion is optional and defaults to","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"the start of the day.","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"Example","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"- `deadline test deadline /by 1/1/2000 1800`\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"  ![Demo of deadline command](./images/deadline.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"  This creates a deadline called `test deadline` that is due by **1st January, 2000 at 1800**.","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"  Using the list command now would show this.\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"  ![Listing tasks after adding deadline](./images/deadline-list.png)","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"sunjc826"},"content":"### `event` - Add an event.","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"sunjc826"},"content":"Creates and adds an event to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"sunjc826"},"content":"Format: `event NAME_OF_EVENT /at DATERANGE`","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"sunjc826"},"content":"- `DATERANGE` has two allowed formats. The second format is for a range of dates that are on the same day.","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"sunjc826"},"content":"  1. `d/m/yyyy HHmm-d/m/yyyy HHmm`","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"sunjc826"},"content":"  2. `d/m/yyyy HHmm-HHmm`","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"sunjc826"},"content":"### `on` - Filters out tasks by date.","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"sunjc826"},"content":"Filters tasks (**deadlines** and **events**) that occur on the given day.","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"sunjc826"},"content":"Format: `on DATE`","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"sunjc826"},"content":"- `DATE` format: `d/m/yyyy`","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"sunjc826"},"content":"Example\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"sunjc826"},"content":"For context, these are the tasks currently registered in Duke.\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"sunjc826"},"content":"![Listing all tasks](./images/on-list.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"sunjc826"},"content":"- `on 1/1/2000`\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"sunjc826"},"content":"  ![Demo of on command](./images/on.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"sunjc826"},"content":"  - The deadline `test deadline` matches since it occurs on the same day.","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"sunjc826"},"content":"  - The events, both named `test event` match since 1st January 2000 falls in their respective date ranges.","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"sunjc826"},"content":"- `on 1/2/2000`\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"sunjc826"},"content":"  ![Demo of on command](./images/on2.png)\u003cbr\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"sunjc826"},"content":"    - The deadline `test deadline` does not match since it occurs on a different day than 1 February 2000.","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"sunjc826"},"content":"    - Of the 2 events, only the event that spans from the year 2000 to 2003 matches.","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"sunjc826"},"content":"### `bye` - Exits the app.","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"sunjc826"},"content":"Quits the program and saves your tasks to local storage. Note that tasks will **not** be saved during execution of other commands. ","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":124,"author":{"gitId":"sunjc826"},"content":"Format: `bye`","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"-":18,"sunjc826":106}},{"path":"run.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"@echo off","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"javac -d dist -sourcepath .\\src\\main\\java .\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"java -cp dist duke.Duke","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"sunjc826":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.views.cli.Cli;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.views.gui.Launcher;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.Parser;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"     * Initial method to test that the main method can run properly.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    public static void test() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"     * Runs the CLI application.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    public static void runCli() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"        Cli chatbot \u003d new Cli(new Parser());","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"        chatbot.main();","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    public static void runGui(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        Application.launch(Launcher.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        runGui(args);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"sunjc826":29}},{"path":"src/main/java/duke/constants/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.constants;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.shared.StringHelpers;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":" * Encapsulates global variables possibly used in multiple areas in code.","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"public class Constants {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"     * Encapsulates constants related to CLI display.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    public static class Display {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"        /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"         * Allows choice between tab and spaces for indentation in the CLI","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"         */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        public static enum IndentationType {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"            TAB(\"\\t\"), SPACE(\"    \");","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"            private String val;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"            private IndentationType(String val) {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"                this.val \u003d val;","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"            @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"            public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"                return val;","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        public static enum BootstrapColor {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"            PRIMARY(\"color-primary\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"            SUCCESS(\"color-success\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"            INFO(\"color-info\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"            WARNING(\"color-warning\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"            DANGER(\"color-danger\");","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"            private String cssClass;","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"            private BootstrapColor(String cssClass) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"                this.cssClass \u003d cssClass;","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"            @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"            public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"                return cssClass;","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"        public static final IndentationType INDENTATION_TYPE \u003d IndentationType.TAB;","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"        /**","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"         * Number of characters of breakline pattern used in breakline.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"         */","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"        public static final int BREAKLINE_LENGTH \u003d 100;","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"        /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"         * A unit that makes up the breakline.","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"         */","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"        public static final String BREAKLINE_PATTERN \u003d \"_\";","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"        /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"         * Breakline consists of BREAKLINE_PATTERN repeated BREAKLINE_LENGTH times, together with a newline char.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"         */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"        public static final String BREAKLINE;","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"        static {","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"            BREAKLINE \u003d StringHelpers.repeat(BREAKLINE_LENGTH, BREAKLINE_PATTERN) + System.lineSeparator();","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"        public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"                .ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.MEDIUM);","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"     * Encapsulates constants relevant to user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"    public static class Input {","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"        public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy[ HHmm]\");","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"        // note that this means ISO-8601 strings will not be used as input","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"        public static final String DATE_RANGE_SEPARATOR \u003d \"-\";","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"     * Encapsulates constants relevant to data persistence.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"    public static class Storage {","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"        public static final String PERSISTENCE_SEPARATOR \u003d \"|\";","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"        public static final String PERSISTENCE_SEPARATOR_REGEX \u003d String.format(\"\\\\%s\", PERSISTENCE_SEPARATOR);","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"        public static final String PERSISTENCE_SEPARATOR_PRETTY \u003d String.format(\" %s \", PERSISTENCE_SEPARATOR);","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"        public static final String[] PERSISTENCE_LOCATION \u003d { \"data\", \"local_storage.txt\" };","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":94}},{"path":"src/main/java/duke/domain/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DateHelpers;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import duke.shared.GenericHelpers;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import duke.shared.InvalidDateException;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    public static final String TYPE_STRING \u003d \"D\";","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"     * Creates incomplete deadline task with given task, and due date.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"     * @param name Name of deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"     * @param dueDate String representing date task is due.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    public Deadline(String name, String dueDate) throws InvalidDateException {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        this.dueDate \u003d DateHelpers.parseDateString(dueDate);","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"     * Creates deadline task with given task, completion status and due date.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"     * @param name Name of deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"     * @param isDone Whether deadline is to be marked complete upon creation.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"     * @param dueDate String representing date task is due.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    public Deadline(String name, boolean isDone, String dueDate) throws InvalidDateException {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        this.dueDate \u003d DateHelpers.parseDateString(dueDate);","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the deadline\u0027s due date and the date represented by the given string fall on the same day.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"     * @param dateString String representing a date.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the deadline\u0027s due date and the date represented by the given string fall on the same day","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"    public boolean isDueOn(String dateString) {","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"        return isDueOn(DateHelpers.parseDateString(dateString));","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the deadline\u0027s due date and the given date fall on the same day.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime A date.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the deadline\u0027s due date and the given date fall on the same day","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"    public boolean isDueOn(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"        return dueDate.toLocalDate().equals(dateTime.toLocalDate());","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"     * Returns a Deadline object from a given array of fields. Effectively the inverse of storageFields.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"     * @return A Deadline object.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"    public static Task generateFromString(String[] fields) {","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"        int isDoneInt \u003d Integer.parseInt(fields[1]);","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"        boolean isDone \u003d isDoneInt \u003d\u003d 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"        String name \u003d fields[2];","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"        String dueDate \u003d fields[3];","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"        return new Deadline(name, isDone, dueDate);","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"    public List\u003cString\u003e getStorageFields() {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"        List\u003cString\u003e fields \u003d super.getStorageFields();","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"        fields.add(Constants.Input.DATETIME_FORMATTER.format(dueDate));","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"        return fields;","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"        String base \u003d super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"        String result \u003d String.format(\"%s (by: %s)\", base, Constants.Display.DATETIME_FORMATTER.format(dueDate));","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"        return result;","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"            return true;","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"        } else if (o instanceof Deadline) {","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"            Deadline d \u003d (Deadline) o;","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"            return this.getName().equals(d.getName()) \u0026\u0026 this.dueDate.equals(d.dueDate);","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"            return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"sunjc826"},"content":"    public int hashCode() {","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"sunjc826"},"content":"        return GenericHelpers.combineHashCodes(super.hashCode(), dueDate.hashCode());","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":100}},{"path":"src/main/java/duke/domain/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DateHelpers;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DateRange;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.shared.GenericHelpers;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a task taking place over a specified period of time.","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    public static final String TYPE_STRING \u003d \"E\";","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    private DateRange dateRange;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"     * Creates incomplete event with given name and date range over which the event takes place.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"     * @param name      Name of event.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"     * @param dateRange Date range over which event takes place.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    public Event(String name, String dateRange) {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        // typeString \u003d TYPE_STRING;","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        this.dateRange \u003d DateRange.createFromRange(dateRange);","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"     * Creates event with given name, completion status and date range over which the event takes place.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"     * @param name      Name of event.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"     * @param isDone    Whether event is to be marked complete upon creation.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"     * @param dateRange Date range over which event takes place.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"    public Event(String name, boolean isDone, String dateRange) {","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        this.dateRange \u003d DateRange.createFromRange(dateRange);","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given day falls within the date range of the event. Time component is ignored.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"     * @param dateString String representing a day.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given day falls within the date range of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    public boolean isOccurringOnDay(String dateString) {","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        return isOccurringOnDay(DateHelpers.parseDateString(dateString));","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given day falls within the date range of the event. Time component is ignored.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime A day.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given day falls within the date range of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"    public boolean isOccurringOnDay(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"        return dateRange.occursDuringDay(dateTime.toLocalDate());","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given datetime falls (non-strictly) within the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime Datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given datetime falls (non-strictly) within the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"    public boolean isOccurringBetween(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"        return dateRange.occursBetween(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given datetime falls strictly within the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime Datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given datetime falls strictly within the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"    public boolean isOccurringStrictlyBetween(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"        return dateRange.occursStrictlyBetween(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"     * Returns an Event object from a given array of fields. Effectively the inverse of storageFields.","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"     * @return An Event object.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"    public static Task generateFromString(String[] fields) {","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"        int isDoneInt \u003d Integer.parseInt(fields[1]);","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"        boolean isDone \u003d isDoneInt \u003d\u003d 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"        String name \u003d fields[2];","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"        String dateRange \u003d fields[3];","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"        return new Event(name, isDone, dateRange);","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"sunjc826"},"content":"    public List\u003cString\u003e getStorageFields() {","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"sunjc826"},"content":"        List\u003cString\u003e fields \u003d super.getStorageFields();","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"sunjc826"},"content":"        fields.add(dateRange.toStorageString());","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"sunjc826"},"content":"        return fields;","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"sunjc826"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"sunjc826"},"content":"        String base \u003d super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"sunjc826"},"content":"        String result \u003d String.format(\"%s (at: %s)\", base, dateRange);","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"sunjc826"},"content":"        return result;","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"sunjc826"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"sunjc826"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"sunjc826"},"content":"            return true;","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"sunjc826"},"content":"        } else if (o instanceof Event) {","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"sunjc826"},"content":"            Event e \u003d (Event) o;","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"sunjc826"},"content":"            return this.getName().equals(e.getName()) \u0026\u0026 this.dateRange.equals(e.dateRange);","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"sunjc826"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"sunjc826"},"content":"            return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"sunjc826"},"content":"    public int hashCode() {","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"sunjc826"},"content":"        return GenericHelpers.combineHashCodes(super.hashCode(), this.dateRange.hashCode());","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":125}},{"path":"src/main/java/duke/domain/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.interfaces.PrintableMixin;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.shared.StringHelpers;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a generic task.","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"public class Task implements PrintableMixin {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    public static final String TYPE_STRING \u003d null;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    private String typeString \u003d null;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    private TaskState state;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    private String name;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    static enum TaskState {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"        NEW(\" \", \"0\"), DONE(\"X\", \"1\");","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"        private String representation;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        private String storedRepresentation;","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        private TaskState(String representation, String storedRepresentation) {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"            this.representation \u003d representation;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"            this.storedRepresentation \u003d storedRepresentation;","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        public String getStoredRepresentation() {","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"            return this.storedRepresentation;","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"            return StringHelpers.bracketWrap(representation);","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"     * Creates an incomplete task.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"     * @param name Name of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"            state \u003d TaskState.NEW;","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"            this.setName(name);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"            typeString \u003d (String) this.getClass().getField(\"TYPE_STRING\").get(null);","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"        } catch (NoSuchFieldException | IllegalAccessException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"            print(\"Reflection error\");","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"     * Creates a task with given name and completion status.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"     * @param name   Name of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"     * @param isDone Whether task is to be marked as complete upon creation.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"            state \u003d isDone ? TaskState.DONE : TaskState.NEW;","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"            this.setName(name);","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"            typeString \u003d (String) this.getClass().getField(\"TYPE_STRING\").get(null);","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"        } catch (NoSuchFieldException | IllegalAccessException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"            print(\"Reflection error\");","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"    public String getTypeString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"        return typeString;","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"    public String getName() {","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"        return name;","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"     * Returns whether task is completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"     * @return Whether task is completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"        return state \u003d\u003d TaskState.DONE;","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"sunjc826"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"sunjc826"},"content":"    public void finish() {","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"sunjc826"},"content":"        state \u003d TaskState.DONE;","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"sunjc826"},"content":"     * Returns a list of string fields to be serialized and stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"sunjc826"},"content":"     * @return A list of string fields representing the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"sunjc826"},"content":"    public List\u003cString\u003e getStorageFields() {","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"sunjc826"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(this.getTypeString(), this.state.getStoredRepresentation(), getName()));","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"sunjc826"},"content":"    public boolean match(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"sunjc826"},"content":"        return this.getName().contains(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"sunjc826"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"sunjc826"},"content":"        return String.format(\"%s %s %s\",","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"sunjc826"},"content":"                getTypeString() \u003d\u003d null ? \"\" : StringHelpers.bracketWrap(getTypeString()), state, getName());","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"sunjc826"},"content":"    public int hashCode() {","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"sunjc826"},"content":"        return getName().hashCode();","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":126}},{"path":"src/main/java/duke/domain/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    private Set\u003cTask\u003e taskSet;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"     * Creates a TaskList with contents from the given list.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"     * This is meant to be used to create a temporary wrapper around a list, hence","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"     * the task set is not updated.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"     * @param taskList List of tasks to be placed into task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        tasks \u003d taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    public int size() {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"     * Adds a task to the list. Does not allow duplicates.","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"     * @return Whether a task is actually added. False if the task is a duplicate.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"        if (taskSet.contains(task)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"            return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"        taskSet.add(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        return true;","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"     * Removes the task at the given index.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"     * @return The removed task.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"    public Task remove(int index) {","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"        assert removedTask !\u003d null;","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"        tasks.remove(removedTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"        taskSet.remove(removedTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"        return removedTask;","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"        return tasks.stream();","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"        return tasks.iterator();","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"sunjc826":77}},{"path":"src/main/java/duke/domain/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a regular task.","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"    public static final String TYPE_STRING \u003d \"T\";","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"     * Creates a to-do task with the given name.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"     * @param name Name of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"        // typeString \u003d TYPE_STRING;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"     * Creates a to-do task with the given name and completion status.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"     * @param name Name of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"     * @param isDone Whether task is to be marked as complete upon creation.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        // typeString \u003d TYPE_STRING;","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"     * Returns a To-do object from a given array of fields. Effectively the inverse of storageFields.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"     * @return A To-do object.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    public static Task generateFromString(String[] fields) {","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        int isDoneInt \u003d Integer.parseInt(fields[1]);","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"        boolean isDone \u003d isDoneInt \u003d\u003d 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        String name \u003d fields[2];","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        return new Todo(name, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"            return true;","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"        } else if (o instanceof Todo) {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"            Todo e \u003d (Todo) o;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"            return this.getName().equals(e.getName());","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"            return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":50}},{"path":"src/main/java/duke/interfaces/PrintableMixin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.interfaces;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":" * A mixin allowing more convenient calls to System.out.","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"public interface PrintableMixin {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"     * Calls print on self.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"    default void print() {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"        System.out.println(this);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"     * Shortened version of System.out.println","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"     * @param s String to be printed.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    default void print(String s) {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        System.out.println(s);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":21}},{"path":"src/main/java/duke/interfaces/StringProducer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.interfaces;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"public interface StringProducer {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"    String produce(String query);","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":5}},{"path":"src/main/java/duke/shared/DateHelpers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.shared;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"public class DateHelpers {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"     * Reference","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"     * https://stackoverflow.com/questions/48280447/java-8-datetimeformatter-with-optional-part","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    public static LocalDateTime parseDateString(String input) {","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"            TemporalAccessor temporalAccessor \u003d Constants.Input.DATETIME_FORMATTER.parseBest(input, LocalDateTime::from,","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"                    LocalDate::from);","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"            assert temporalAccessor !\u003d null;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"            if (temporalAccessor instanceof LocalDateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"                return (LocalDateTime) temporalAccessor;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"            } else {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"                return ((LocalDate) temporalAccessor).atStartOfDay();","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"            throw new InvalidDateException(\"Formatting not recognized.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"sunjc826":29}},{"path":"src/main/java/duke/shared/DateRange.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.shared;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a pair of start datetime and end datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"public class DateRange {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    private LocalDateTime start;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    private LocalDateTime end;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"     * Creates a DateRange object with the given start and end datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"     * @param start Start datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"     * @param end   End datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"     * @throws DukeException When start datetime occurs after end datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    public DateRange(LocalDateTime start, LocalDateTime end) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        if (isInvalid()) {","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"            throw new InvalidDateException(\"Start date cannot be later than end date.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"     * Creates a DateRange object with the given start and end datetime strings.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"     * @param start String representing start datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"     * @param end   String representing end datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"     * @return DateRange object.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"     * @throws DukeException When start datetime occurs after end datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    public static DateRange createFromString(String start, String end) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"            return new DateRange(LocalDateTime.parse(start, Constants.Input.DATETIME_FORMATTER),","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"                    LocalDateTime.parse(end, Constants.Input.DATETIME_FORMATTER));","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"            throw new InvalidDateException(\"Date format not recognized.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"     * Returns a DateRange object created from a single string representing the","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"     * datetime range. The string can of the following formats: dd/MM/yyyy","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"     * HHmm-dd/MM/yyyy HHmm or dd/MM/yyyy HHmm-HHmm The latter occurs on a single","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"     * day.","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"     * @param range String representing a range of dates.","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"    public static DateRange createFromRange(String range) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"        String[] rangeArr \u003d range.split(Constants.Input.DATE_RANGE_SEPARATOR);","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"        if (rangeArr.length !\u003d 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"            throw new InvalidDateException(\"Date format not recognized.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"        String start \u003d rangeArr[0];","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"        String datePart \u003d rangeArr[0].split(\" \")[0];","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"        String end \u003d rangeArr[1];","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"        if (!end.contains(\" \")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"            // Here end only has the time part, so we append the date part","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"            end \u003d String.format(\"%s %s\", datePart, end);","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"        return createFromString(start, end);","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the date range is invalid.","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the date range is invalid.","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"    public boolean isInvalid() {","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"        return start.isAfter(end);","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given datetime occurs before the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime Datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given datetime occurs before the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"    public boolean occursBefore(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"        return start.isAfter(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given date occurs in one of the days of the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"     * @param date Date.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given date occurs in one of the days of the date range","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"sunjc826"},"content":"    public boolean occursDuringDay(LocalDate date) {","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"sunjc826"},"content":"        return !start.toLocalDate().isAfter(date) \u0026\u0026 !end.toLocalDate().isBefore(date);","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given datetime occurs between (non-strictly) the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime Datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given datetime occurs between (non-strictly) the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"sunjc826"},"content":"    public boolean occursBetween(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"sunjc826"},"content":"        return !start.isAfter(dateTime) \u0026\u0026 !end.isBefore(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given datetime occurs between the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime Datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given datetime occurs between the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"sunjc826"},"content":"    public boolean occursStrictlyBetween(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"sunjc826"},"content":"        return start.isBefore(dateTime) \u0026\u0026 end.isAfter(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":119,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":120,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":121,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"sunjc826"},"content":"     * Returns whether the given datetime occurs after the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"sunjc826"},"content":"     * @param dateTime Datetime.","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"sunjc826"},"content":"     * @return Whether the given datetime occurs after the date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"sunjc826"},"content":"    public boolean occursAfter(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":128,"author":{"gitId":"sunjc826"},"content":"        return end.isBefore(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":129,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":130,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":131,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"sunjc826"},"content":"     * Returns a string that is the stored representation of a date range.","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"sunjc826"},"content":"     * @return String representation of a date range to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"sunjc826"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":137,"author":{"gitId":"sunjc826"},"content":"        return String.format(\"%s%s%s\", Constants.Input.DATETIME_FORMATTER.format(start),","lastModifiedDate":"2021-08-20"},{"lineNumber":138,"author":{"gitId":"sunjc826"},"content":"                Constants.Input.DATE_RANGE_SEPARATOR, Constants.Input.DATETIME_FORMATTER.format(end));","lastModifiedDate":"2021-08-20"},{"lineNumber":139,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":140,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":141,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":142,"author":{"gitId":"sunjc826"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":143,"author":{"gitId":"sunjc826"},"content":"        String start \u003d Constants.Display.DATETIME_FORMATTER.format(this.start);","lastModifiedDate":"2021-08-20"},{"lineNumber":144,"author":{"gitId":"sunjc826"},"content":"        String end \u003d Constants.Display.DATETIME_FORMATTER.format(this.end);","lastModifiedDate":"2021-08-20"},{"lineNumber":145,"author":{"gitId":"sunjc826"},"content":"        assert !isInvalid(); // can only print valid date ranges","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"sunjc826"},"content":"        return String.format(\"between %s and %s\", start, end);","lastModifiedDate":"2021-08-20"},{"lineNumber":147,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":148,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"sunjc826"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"sunjc826"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"sunjc826"},"content":"            return true;","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"sunjc826"},"content":"        } else if (o instanceof DateRange) {","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"sunjc826"},"content":"            DateRange d \u003d (DateRange) o;","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"sunjc826"},"content":"            return this.start.equals(d.start) \u0026\u0026 this.end.equals(d.end);","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"sunjc826"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"sunjc826"},"content":"            return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":162,"author":{"gitId":"sunjc826"},"content":"    public int hashCode() {","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"sunjc826"},"content":"        return GenericHelpers.combineHashCodes(start.hashCode(), end.hashCode());","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"sunjc826":165}},{"path":"src/main/java/duke/shared/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.shared;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"// This needs to be unchecked, otherwise commands hashmap will be quite troublesome","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":" * Main exception class for the chatbot. Responsible for some of the more","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":" * generic errors. Subclasses cover errors with narrower scope.","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"     * Encapsulates a generic error message for relatively generic error types.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    public enum ExceptionCode {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"        UNPROCESSABLE_ENTITY(\"Unprocessable entity\"), INCORRECT_ARGS(\"Incompatible arguments\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        FEWER_THAN_EXPECTED_ARGS(\"Too few arguments provided\"), MORE_THAN_EXPECTED_ARGS(\"Too many arguments provided\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"        OUT_OF_BOUNDS(\"Out of bounds\");","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"        private String message;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        private ExceptionCode(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"            this.message \u003d message;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"        public String getMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"            return message;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    protected ExceptionCode exceptionCode;","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"     * Creates a DukeException from the given code.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"     * @param exceptionCode Code.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"    public DukeException(ExceptionCode exceptionCode) {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        super(exceptionCode.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        this.exceptionCode \u003d exceptionCode;","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"     * Creates a DukeException from the given code and a message in addition to the code\u0027s message.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"     * @param exceptionCode Code.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"     * @param additionalMessage Message to supplement the exceptionCode\u0027s message.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"    public DukeException(ExceptionCode exceptionCode, String additionalMessage) {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"        super(exceptionCode.getMessage() + \"; \" + additionalMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"        this.exceptionCode \u003d exceptionCode;","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"     * Creates a DukeException from the given code and a throwable instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"     * @param exceptionCode Code.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"     * @param error Root cause of the DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"    public DukeException(ExceptionCode exceptionCode, Throwable error) {","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"        super(exceptionCode.getMessage(), error);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"        this.exceptionCode \u003d exceptionCode;","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"     * Creates a DukeException from the given code, additional message and a throwable instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"     * @param exceptionCode Code.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"     * @param additionalMessage Message to supplement the exceptionCode\u0027s message.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"     * @param error Root cause of the DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"    public DukeException(ExceptionCode exceptionCode, String additionalMessage, Throwable error) {","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"        super(exceptionCode.getMessage() + \"; \" + additionalMessage, error);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"        this.exceptionCode \u003d exceptionCode;","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"     * Creates a DukeException caused by wrong number of arguments provided.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"     * @param expected Expected number of arguments.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"     * @param given Number of arguments actually given by user.","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"     * @return DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"    public static DukeException createArgumentCountException(int expected, int given) {","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"        ExceptionCode code \u003d given \u003c expected ? ExceptionCode.FEWER_THAN_EXPECTED_ARGS","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"                : ExceptionCode.MORE_THAN_EXPECTED_ARGS;","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"        return new DukeException(code, String.format(\"Expected %d arguments, given %d\", expected, given));","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"     * Creates a DukeException caused by accessing out of bounds indices.","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"     * @param size Size of array or list-like data structure.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"     * @param given Index user is trying to access.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"     * @return DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"    public static DukeException createIndexOutOfBoundsException(int size, int given) {","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"        ExceptionCode code \u003d ExceptionCode.OUT_OF_BOUNDS;","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"        return new DukeException(code, String.format(\"You have %d items, but you wanted item number %d\", size, given));","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":92}},{"path":"src/main/java/duke/shared/GenericHelpers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.shared;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"public class GenericHelpers {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"     * Reference","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"     * https://stackoverflow.com/questions/9648305/creating-a-hashcode-method-java","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"     * Generates a composite hashcode given multiple hashcodes.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"     * @param codes Hashcodes to be combined.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    public static int combineHashCodes(int... codes) {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"        int generatedCode \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        for (int i \u003d 0; i \u003c codes.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"            generatedCode \u003d generatedCode * 31 + codes[i];","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"        return generatedCode;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"sunjc826":19}},{"path":"src/main/java/duke/shared/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.shared;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":" * A subclass of DukeException specialized for the case of a user providing invalid dates, date ranges or","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":" * other date related objects.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"     * Create InvalidDateException with default messages.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    public InvalidDateException() {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"        super(DukeException.ExceptionCode.INCORRECT_ARGS, \"Invalid date(s)\");","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"     * Create InvalidDateException with a custom message.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"     * @param message Custom message.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        super(DukeException.ExceptionCode.INCORRECT_ARGS, message);","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"sunjc826":22}},{"path":"src/main/java/duke/shared/StringHelpers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.shared;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":" * Helper class with various string manipulation methods.","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"public class StringHelpers {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    //@@author sunjc826-reused","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/questions/2255500","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Returns a given string repeated for the specified number of times.","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param count Number of times a string is to be repeated.","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param with  String to be repeated.","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return Repeated string.","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static String repeat(int count, String with) {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new String(new char[count]).replace(\"\\0\", with);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"     * Returns space characters repeated for the specified number of times.","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"     * @param count Number of times a string is to be repeated.","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"     * @return Repeated string.","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    public static String repeat(int count) {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        return repeat(count, \" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"     * Returns a given string wrapped around in front and behind by another given","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"     * string","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"     * @param inner   String to be wrapped.","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"     * @param wrapper Wrapper string.","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"     * @return Wrapped string.","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    public static String wrap(String inner, String wrapper) {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"        return wrapper + inner + wrapper;","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"     * Returns a given string enclosed in brackets.","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"     * @param inner String to be wrapped.","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"     * @return Wrapped string.","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"    public static String bracketWrap(String inner) {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"        return String.format(\"[%s]\", inner);","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //@@author sunjc826-reused","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/questions/15888934","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns a given string indented by tabs.","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param s String to be indented.","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return Indented string.","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static String indent(String s) {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return s.replaceAll(\"(?m)^\", \"\\t\");","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"-":27,"sunjc826":40}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.utils;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.io.File;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":" * Class encapsulating the interface between local storage and the application logic.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":" * Has methods for loading from local storage and writing to local storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"public class Storage {","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"     * Returns a list of strings for each line read in a text file located at the given relative path.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"     * @param pathResolve Array of strings to be resolved to a path.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"     * @return List of strings for each line read.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    public List\u003cString\u003e loadRelative(String... pathResolve) {","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"            Path filePath \u003d Paths.get(\".\", pathResolve);","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"            File file \u003d filePath.toFile();","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"                String line \u003d sc.nextLine().strip();","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"                result.add(line);","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"            return result;","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"            System.out.println(\"Local data not found. Continuing as fresh application.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"            return result;","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"        } finally {","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"            if (sc !\u003d null) {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"                sc.close();","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"     * Stores the given content to a text file located at the given relative path.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"     * @param content Content to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"     * @param pathResolve Array of strings to be resolved to a relative path.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"    public void storeRelative(String content, String... pathResolve) {","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"        FileWriter f \u003d null;","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"            Path filePath \u003d Paths.get(\".\", pathResolve);","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"            Path directoryPath \u003d filePath.getParent();","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"            File directory \u003d directoryPath.toFile();","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"            directory.mkdirs();","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"            f \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"            f.write(content);","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"            f.close();","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"            System.out.println(\"Error writing to file\");","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"sunjc826":66}},{"path":"src/main/java/duke/views/Greeter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":" * This class is responsible for printing the initial welcome message.","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"public class Greeter {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"    private static String welcomeMessage;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    static {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"        init();","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"     * Initialises the greeter.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    public static void init() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"        String hello \u003d \"Hello! I\u0027m Duke\";","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        String query \u003d \"What can I do for you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        welcomeMessage \u003d String.format(\"%s%s%s%s\", hello, System.lineSeparator(), query, System.lineSeparator());","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"     * Generates greet response.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    public String greet() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        return welcomeMessage;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":28}},{"path":"src/main/java/duke/views/InteractionLayer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.RespondWith;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"public interface InteractionLayer {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    Greeter getGreeter();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    Storage getStorage();","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    RespondWith getResponder();","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"     * Runs before the application becomes responsive to user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    public abstract void init();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    default String getGreeting() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"        return getGreeter().greet();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"     * Runs before the application becomes responsive to user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    default void initCallbacks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"        List\u003cString\u003e dataList \u003d getStorage().loadRelative(Constants.Storage.PERSISTENCE_LOCATION);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        getResponder().load(dataList);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        init();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"     * Begins listening to user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"    default void listen() {};","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"     * Runs before the application terminates.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"    public abstract void end();","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"    default String getResponse(String query) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"        return getResponder().formatResponse(query);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    default String getRawResponse(String query) {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"        return getResponder().respond(query);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"    default Response getResponseWithMetadata(String query) {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"        return getResponder().respondWithMetadata(query);","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"     * Runs before the application terminates.","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"    default void endCallbacks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"        end();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"        getStorage().storeRelative(getResponder().persistToStore(), Constants.Storage.PERSISTENCE_LOCATION);","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"     * Main method. Initializes, runs and ends the application gracefully.","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"    default void main() {","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"        initCallbacks();","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"        listen();","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"        endCallbacks();","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sunjc826":73}},{"path":"src/main/java/duke/views/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"public class Response {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"    public enum ResponseType {","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"        INFO,","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"        ERROR;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    private String responseMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"    private ResponseType responseType;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"     * Creates a Response object with the specified message and type.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"     * @param responseMessage Text message.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"     * @param responseType Category of response.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    public Response(String responseMessage, ResponseType responseType) {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        this.responseMessage \u003d responseMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        this.responseType \u003d responseType;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"     * Creates a Response object with the given message.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"     * @param responseMessage Text message.","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"     * @return Response object with type defaulting to info.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    public static Response withMessage(String responseMessage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"        return new Response(responseMessage, ResponseType.INFO);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"        return this.responseMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"    public ResponseType getResponseType() {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        return this.responseType;","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"sunjc826":40}},{"path":"src/main/java/duke/views/cli/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.cli;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.interfaces.PrintableMixin;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.views.Greeter;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.views.InteractionLayer;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.RespondWith;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":" * Encapsulates the command line interface. Listens to and generates response to","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":" * user input via the terminal.","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"public class Cli implements InteractionLayer, PrintableMixin {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    protected Greeter greeter;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    protected RespondWith responder;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    protected Scanner sc;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"     * Creates an instance equipped with a responder.","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"     * @param responder A parser of user input and generates a suitable response","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"     *                  when fed input.","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    public Cli(RespondWith responder) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        greeter \u003d new Greeter();","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"        this.responder \u003d responder;","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    public Greeter getGreeter() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        return greeter;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"        return storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"    public RespondWith getResponder() {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"        return responder;","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"    public void init() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"     * Begins listening to user input.","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"    public void listen() {","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"        print(greeter.greet());","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"        String query \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"        do {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"            query \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"            print(getResponse(query));","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"        } while (!responder.shouldEnd(query));","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"     * Runs before the application terminates.","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"    public void end() {","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"        sc.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":74}},{"path":"src/main/java/duke/views/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.views.Greeter;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.views.InteractionLayer;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.RespondWith;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"public class Gui implements InteractionLayer {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"    protected Greeter greeter;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    protected RespondWith responder;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"     * Creates an instance equipped with a responder.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"     * @param responder A parser of user input and generates a suitable response","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"     *                  when fed input.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    public Gui(RespondWith responder) {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        greeter \u003d new Greeter();","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"        this.responder \u003d responder;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    public Greeter getGreeter() {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        return greeter;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        return storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"    public RespondWith getResponder() {","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        return responder;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"    public void init() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"     * Begins listening to user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    public void listen() {}","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"     * Runs before the application terminates.","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"    public void end() {}","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sunjc826":54}},{"path":"src/main/java/duke/views/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.views.gui.controllers.MainWindow;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.Parser;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"public class Launcher extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    private Gui gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"            this.gui \u003d new Gui(new Parser());","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"            this.gui.initCallbacks();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGui(this.gui);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"    public void stop() {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"        gui.endCallbacks();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sunjc826":36}},{"path":"src/main/java/duke/views/gui/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.gui.controllers;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"    public static DialogBox getDukeDialog(String text, Image img, Constants.Display.BootstrapColor color) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"        db.getStyleClass().add(color.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sunjc826":64}},{"path":"src/main/java/duke/views/gui/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.gui.controllers;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.views.Response;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.views.gui.Gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    private Gui gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"    public void setGui(Gui gui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        this.gui \u003d gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"                DialogBox.getDukeDialog(gui.getGreeting(), dukeImage, Constants.Display.BootstrapColor.INFO)","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"        String query \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"        if (gui.getResponder().shouldEnd(query)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"            Platform.exit();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"        Response response \u003d gui.getResponseWithMetadata(query);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"        Constants.Display.BootstrapColor color;","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"        switch (response.getResponseType()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"        case INFO:","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"            color \u003d Constants.Display.BootstrapColor.INFO;","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"        case ERROR:","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"            color \u003d Constants.Display.BootstrapColor.DANGER;","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"            throw new IllegalStateException(\"Unexpected Response Type\");","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"                DialogBox.getUserDialog(query, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"                DialogBox.getDukeDialog(response.getMessage(), dukeImage, color)","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sunjc826":76}},{"path":"src/main/java/duke/views/strategies/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Todo;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DukeException.ExceptionCode;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"import duke.views.Response;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.AddDeadlineCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.AddEventCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.AddTodoCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.Command;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.DeleteCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.FindCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.ListCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.MarkDoneCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.OccurringOnCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":" * A responder that is able to handle tasks with CRUD functionality.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"public class Parser extends RespondWith {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    private final TaskList userTasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"     * Creates a responder that handles multiple types of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"    public Parser() {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        userTasks \u003d new TaskList();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.LIST, ListCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.DONE, MarkDoneCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.TODO, AddTodoCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.DEADLINE, AddDeadlineCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.EVENT, AddEventCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.DELETE, DeleteCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.ON, OccurringOnCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"        commands.put(Command.FIND, FindCommand.getInstance(userTasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    public Task rehydrateFromString(String s) {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        String[] fields \u003d s.split(Constants.Storage.PERSISTENCE_SEPARATOR_REGEX, -1);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"        for (int i \u003d 0; i \u003c fields.length; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"            fields[i] \u003d fields[i].strip();","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"        String typeString \u003d fields[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"        switch (typeString) {","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"        case Todo.TYPE_STRING:","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"            task \u003d Todo.generateFromString(fields);","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"        case Event.TYPE_STRING:","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"            task \u003d Event.generateFromString(fields);","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"        case Deadline.TYPE_STRING:","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"            task \u003d Deadline.generateFromString(fields);","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"            throw new DukeException(ExceptionCode.UNPROCESSABLE_ENTITY);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"        return task;","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"    public String persistToStore() {","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"        for (Task task : userTasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"            List\u003cString\u003e fields \u003d task.getStorageFields();","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"            String stringToStore \u003d String.join(Constants.Storage.PERSISTENCE_SEPARATOR_PRETTY, fields);","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"            stringBuilder.append(stringToStore);","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"            stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"    public void load(List\u003cString\u003e dataList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"        for (String data : dataList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"            this.userTasks.add(rehydrateFromString(data));","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"    public String respond(String query) {","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"            String specialResponse \u003d super.respond(query);","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"sunjc826"},"content":"            if (specialResponse !\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"sunjc826"},"content":"                return specialResponse;","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"sunjc826"},"content":"            throw new DukeException(DukeException.ExceptionCode.UNPROCESSABLE_ENTITY);","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"sunjc826"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"sunjc826"},"content":"            return e.getMessage() + System.lineSeparator();","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"sunjc826"},"content":"    public Response respondWithMetadata(String query) {","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"sunjc826"},"content":"            String specialResponse \u003d super.respond(query);","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"sunjc826"},"content":"            if (specialResponse !\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"sunjc826"},"content":"                return new Response(specialResponse, Response.ResponseType.INFO);","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"sunjc826"},"content":"            throw new DukeException(DukeException.ExceptionCode.UNPROCESSABLE_ENTITY);","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"sunjc826"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"sunjc826"},"content":"            return new Response(e.getMessage() + System.lineSeparator(), Response.ResponseType.ERROR);","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":117}},{"path":"src/main/java/duke/views/strategies/RespondWith.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import java.util.Map;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.shared.StringHelpers;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import duke.views.Response;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.ByeCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"import duke.views.strategies.commands.Command;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":" * A template class for responders that gives a string response upon receiving","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":" * string input.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"public abstract class RespondWith {","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"     * A mapping storing commandName, function pairs. The function will be called","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"     * when the given input matches the command.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    protected Map\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    protected String endMessage \u003d \"bye\";","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    public RespondWith() {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        commands.put(\"bye\", new ByeCommand());","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"     * Returns a string responding to an incoming input","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"     * @param query Incoming input.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"     * @return Response text.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"    public String respond(String query) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"        Command f \u003d commands.get(query.split(\" \")[0]);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"        if (f !\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"            return f.produce(query);","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"        return null;","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"     * Returns a Response object that not only encapsulates a text message but also","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"     * additional metadata.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"     * @param query Incoming input.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"     * @return Response object.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"    public Response respondWithMetadata(String query) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"        Command f \u003d commands.get(query.split(\" \")[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"        if (f !\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"            return Response.withMessage(f.produce(query));","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"sunjc826"},"content":"        return null;","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"sunjc826"},"content":"     * Returns a prettier formatted form of the given string.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"sunjc826"},"content":"     * @param response Raw response text.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"sunjc826"},"content":"     * @return Formatted response text.","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"sunjc826"},"content":"    public String formatResponse(String response) {","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"sunjc826"},"content":"        String formattedString \u003d System.lineSeparator()","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"sunjc826"},"content":"                + StringHelpers.wrap(respond(response), Constants.Display.BREAKLINE);","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"sunjc826"},"content":"        return StringHelpers.indent(formattedString);","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"sunjc826"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"sunjc826"},"content":"     * Returns a boolean indicating if the chatbot program should terminate.","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"sunjc826"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"sunjc826"},"content":"     * @param query Incoming input.","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"sunjc826"},"content":"     * @return Whether program should terminate.","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"sunjc826"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"sunjc826"},"content":"    public boolean shouldEnd(String query) {","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"sunjc826"},"content":"        return query.equals(endMessage);","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"sunjc826"},"content":"    public Object rehydrateFromString(String s) {","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"sunjc826"},"content":"        return null;","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"sunjc826"},"content":"    public String persistToStore() {","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"sunjc826"},"content":"        return \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"sunjc826"},"content":"    public void load(List\u003cString\u003e dataList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":95}},{"path":"src/main/java/duke/views/strategies/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to add a deadline object to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"public class AddDeadlineCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    public AddDeadlineCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new AddDeadlineCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    public String produce(String query) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"        String[] queries \u003d query.substring(DEADLINE.length()).split(\"/by\");","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        if (queries.length !\u003d 2) {","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"            throw DukeException.createArgumentCountException(2, queries.length);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        Task task \u003d new Deadline(queries[0].strip(), queries[1].strip());","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        boolean isUnique \u003d userTasks.add(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"        if (!isUnique) {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"            return getDuplicateMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        return formatAdd(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":39}},{"path":"src/main/java/duke/views/strategies/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to add an event object to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"public class AddEventCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    public AddEventCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new AddEventCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    public String produce(String query) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"        String[] queries \u003d query.substring(EVENT.length()).split(\"/at\");","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        if (queries.length !\u003d 2) {","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"            throw DukeException.createArgumentCountException(2, queries.length);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        Task task \u003d new Event(queries[0].strip(), queries[1].strip());","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        boolean isUnique \u003d userTasks.add(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"        if (!isUnique) {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"            return getDuplicateMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        return formatAdd(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":39}},{"path":"src/main/java/duke/views/strategies/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Todo;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to add a to-do object to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"public class AddTodoCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    public AddTodoCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new AddTodoCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    public String produce(String query) {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        Task task \u003d new Todo(query.substring(TODO.length()).strip());","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"        boolean isUnique \u003d userTasks.add(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        if (!isUnique) {","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"            return getDuplicateMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        return formatAdd(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":34}},{"path":"src/main/java/duke/views/strategies/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to exit the program.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance() {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new ByeCommand();","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    public String produce(String _query) {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        return \"See you again\" + System.lineSeparator();","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":20}},{"path":"src/main/java/duke/views/strategies/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.interfaces.StringProducer;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"public abstract class Command implements StringProducer {","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    public static final String ON \u003d \"on\";","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":14}},{"path":"src/main/java/duke/views/strategies/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to remove a task object to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"public class DeleteCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    public DeleteCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new DeleteCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    public String produce(String query) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"            int index \u003d Integer.parseInt(query.substring(DELETE.length()).strip()) - 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"            if (index \u003e\u003d userTasks.size() || index \u003c 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"                throw DukeException.createIndexOutOfBoundsException(userTasks.size(), index + 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"            Task removedTask \u003d userTasks.remove(index);","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"            return String.format(\"Noted. I\u0027ve removed this task:%s%s%s%s%s\", System.lineSeparator(), removedTask,","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"                    System.lineSeparator(), formatTaskCount(), System.lineSeparator());","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"            throw new DukeException(DukeException.ExceptionCode.INCORRECT_ARGS, \"Please give a number\");","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":39}},{"path":"src/main/java/duke/views/strategies/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to retrieve matching task objects from the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"public class FindCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    public FindCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new FindCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    public String produce(String query) {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"        String keyword \u003d query.substring(FIND.length()).strip();","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"        List\u003cTask\u003e filteredTasks \u003d userTasks.stream()","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"                .filter(task -\u003e task.match(keyword))","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        return listTasksWithMessage(\"Here are the matching tasks in your list:\",","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"                new TaskList(filteredTasks), \"No matches found\");","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":36}},{"path":"src/main/java/duke/views/strategies/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to display the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"public class ListCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new ListCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    public String produce(String _query) {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"        return listTasksWithMessage(\"Here are the tasks in your list:\",","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"                userTasks, \"You\u0027re clear (for now)\");","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":27}},{"path":"src/main/java/duke/views/strategies/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to mark a task object as complete.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"public class MarkDoneCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    public MarkDoneCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new MarkDoneCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    public String produce(String query) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"            int index \u003d Integer.parseInt(query.substring(DONE.length()).strip()) - 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"            boolean isWithinBounds \u003d index \u003c userTasks.size() \u0026\u0026 index \u003e\u003d 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"            if (!isWithinBounds) {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"                throw DukeException.createIndexOutOfBoundsException(userTasks.size(), index + 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"            Task task \u003d userTasks.get(index);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"            task.finish();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"            return String.format(\"Nice! I\u0027ve marked this task as done:%s\\t%s%s\", System.lineSeparator(), task,","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"                    System.lineSeparator());","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"            throw new DukeException(DukeException.ExceptionCode.INCORRECT_ARGS, \"Please give a number\");","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":41}},{"path":"src/main/java/duke/views/strategies/commands/OccurringOnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import duke.constants.Constants;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"import duke.shared.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command to filter out deadline and event objects by datetime from the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"public class OccurringOnCommand extends TaskCommand {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    private static Command singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    public OccurringOnCommand(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    public static Command getInstance(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"        if (singleInstance \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"            singleInstance \u003d new OccurringOnCommand(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        return singleInstance;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    public String produce(String query) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        assert query !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        String dateQuery \u003d query.substring(ON.length()).strip();","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        if (dateQuery.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"            dateQuery \u003d Constants.Input.DATETIME_FORMATTER.format(LocalDateTime.now());","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"        TaskList relevantTasks \u003d new TaskList();","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        for (Task task : userTasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"                if (deadline.isDueOn(dateQuery)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"                    relevantTasks.add(deadline);","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"                if (event.isOccurringOnDay(dateQuery)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"                    relevantTasks.add(event);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"        return listTasksWithMessage(\"Tasks occurring on that day:\",","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"                relevantTasks, \"No tasks on that day\");","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":55}},{"path":"src/main/java/duke/views/strategies/commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.views.strategies.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.domain.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import duke.domain.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":" * Encapsulates a command involving the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"    protected final TaskList userTasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    public TaskCommand(TaskList userTasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"        this.userTasks \u003d userTasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    protected String stringifyTasks(TaskList tasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"            result +\u003d String.format(\"%d. %s%s\", (i + 1), tasks.get(i), System.lineSeparator());","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        return result;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    protected String listTasksWithMessage(String message, TaskList tasks, String emptyMessage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"            return emptyMessage + System.lineSeparator();","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"        String result \u003d message + System.lineSeparator();","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"        result +\u003d stringifyTasks(tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        return result;","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"    protected String formatTaskCount() {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        String s \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        if (userTasks.size() !\u003d 1) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"            s \u003d \"s\";","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"        return String.format(\"Now you have %d task%s in the list.\", userTasks.size(), s);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    protected String formatAdd(Task t) {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%s%s%s%s%s\", System.lineSeparator(), t,","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"                System.lineSeparator(), formatTaskCount(), System.lineSeparator());","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"    protected String getDuplicateMessage() {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        return \"Note: You have attempted to add a duplicate task. It will not be added again.\" + System.lineSeparator();","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sunjc826":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"styleClass\u003d\"with-margin\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"circle\"/\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sunjc826":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"            fx:controller\u003d\"duke.views.gui.controllers.MainWindow\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        \u003cURL value\u003d\"@css/index.css\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sunjc826":28}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"class DukeTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    void setUp() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    @AfterEach","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    void tearDown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    void run() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"sunjc826":23}},{"path":"src/test/java/duke/domain/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"    static final String DEADLINE_NAME \u003d \"Some Deadline\";","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"    static final String DATE_STRING \u003d \"3/5/2052 1700\";","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    static final String DAY \u003d \"3/5/2052\";","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    Deadline deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    void setUp() {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    @AfterEach","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    void tearDown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        deadline \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    void isDueOn() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        deadline \u003d new Deadline(DEADLINE_NAME, DATE_STRING);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        assertTrue(deadline.isDueOn(DAY));","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"sunjc826":29}},{"path":"src/test/java/duke/domain/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import duke.shared.InvalidDateException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"class EventTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    Event event;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    static final String EVENT_NAME \u003d \"Some Event\";","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"    static final String DATE_RANGE_STRING_SHORT \u003d \"3/5/2052 1700-1800\";","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    static final String INVALID_DATE_RANGE_STRING_SHORT \u003d \"3/5/2052 1700-1530\";","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    static final String DATE_RANGE_STRING_LONG \u003d \"3/5/2052 1700-3/5/2052 1800\";","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    static final String INVALID_DATE_RANGE_STRING_LONG \u003d \"3/5/2052 1700-3/5/2052 1530\";","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"    static final String DAY \u003d \"3/5/2052\";","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    void setUp() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"    @AfterEach","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    void tearDown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"        event \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"    void createEvent_validDateRange_success() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"        new Event(EVENT_NAME + \"1\", DATE_RANGE_STRING_SHORT);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"        new Event(EVENT_NAME + \"2\", DATE_RANGE_STRING_LONG);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"    void createEvent_invalidDateRange_failure() {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"        assertThrows(InvalidDateException.class, () -\u003e","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"                new Event(EVENT_NAME + \"1\", INVALID_DATE_RANGE_STRING_SHORT));","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"        assertThrows(InvalidDateException.class, ()-\u003e","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"                new Event(EVENT_NAME + \"2\", INVALID_DATE_RANGE_STRING_LONG));","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"    void isOccurringOnDay() {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"        assertTrue(new Event(EVENT_NAME + \"1\", DATE_RANGE_STRING_SHORT).isOccurringOnDay(DAY));","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"        assertTrue(new Event(EVENT_NAME + \"2\", DATE_RANGE_STRING_LONG).isOccurringOnDay(DAY));","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"sunjc826":47}},{"path":"src/test/java/duke/domain/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"package duke.domain;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"sunjc826"},"content":"class TaskTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"sunjc826"},"content":"    Task task;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"sunjc826"},"content":"    static final String TASK_NAME \u003d \"Task One\";","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"sunjc826"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"sunjc826"},"content":"    void setUp() {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"sunjc826"},"content":"    @AfterEach","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"sunjc826"},"content":"    void tearDown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"        task \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"sunjc826"},"content":"    void task_nameOnly_taskStateNew() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"sunjc826"},"content":"        task \u003d new Task(TASK_NAME);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"sunjc826"},"content":"        assertEquals(task.isDone(), false);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"sunjc826"},"content":"    void task_nameAndState() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"sunjc826"},"content":"        task \u003d new Task(TASK_NAME, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"sunjc826"},"content":"        assertEquals(task.isDone(), false);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"sunjc826"},"content":"        task \u003d new Task(TASK_NAME, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"sunjc826"},"content":"        assertEquals(task.isDone(), true);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"sunjc826"},"content":"    void finish_setFinish_taskStateDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"sunjc826"},"content":"        task \u003d new Task(TASK_NAME);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"sunjc826"},"content":"        task.finish();","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"sunjc826"},"content":"        assertEquals(task.isDone(), true);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"sunjc826"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"sunjc826"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"sunjc826"},"content":"    void storageFields_getListOfFields_correctOrderAndValues() {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"sunjc826"},"content":"        task \u003d new Task(TASK_NAME);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"sunjc826"},"content":"        List\u003cString\u003e list \u003d task.getStorageFields();","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"sunjc826"},"content":"        assertEquals(list.get(0), null);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"sunjc826"},"content":"        assertEquals(list.get(1), 0);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"sunjc826"},"content":"        assertEquals(list.get(2), TASK_NAME);","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"sunjc826"},"content":"        task.finish();","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"sunjc826"},"content":"        assertEquals(list.get(0), null);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"sunjc826"},"content":"        assertEquals(list.get(1), 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"sunjc826"},"content":"        assertEquals(list.get(2), TASK_NAME);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"sunjc826"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"sunjc826"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"sunjc826":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sunjc826"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"sunjc826"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"sunjc826"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"sunjc826":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"sunjc826"},"content":"REM create dist directory if it doesn\u0027t exist","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"sunjc826"},"content":"if not exist .\\dist mkdir .\\dist","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"sunjc826"},"content":"if exist .\\text-ui-test\\ACTUAL.TXT del .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"sunjc826"},"content":"REM compile the code into the dist folder","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"sunjc826"},"content":"javac  -cp .\\src\\main\\java\\ -Xlint:none -d .\\dist .\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sunjc826"},"content":"cat .\\text-ui-test\\input.txt | java -cp .\\dist Duke \u003e .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"sunjc826"},"content":"FC .\\text-ui-test\\ACTUAL.TXT .\\text-ui-test\\EXPECTED.TXT","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"-":14,"sunjc826":7}}]
