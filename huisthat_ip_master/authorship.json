[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"# Du","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"Du frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"* text-based","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"* easy to learn","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"* ~~FAST~~ *SUPER FAST* to use","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"All you need to do is,","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"1. download it from [here](https://github.com/huisthat/ip).","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"1. double-click it. ","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"1. add your tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"1. let it manage your tasks for you. :smile: ","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"And it is **FREE**!","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"Features:","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"- [x] Managing tasks","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"---","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    new Du(\"data/du.txt\").run();","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"## Running the bot","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"Run the main class in Launcher.java to run the bot with the GUI incorporated","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"The following should appear: ","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"![Screenshot from 2021-09-06 17-44-18](https://user-images.githubusercontent.com/46212309/132197024-d876a01e-9783-4fa2-a2fa-4b43003e5a51.png)","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"huisthat":31,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    mainClassName \u003d \"Du.Du\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    archiveBaseName \u003d \"du\"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"repositories {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"dependencies {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":23,"-":44}},{"path":"data/du.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"T , 1 , buy bread","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":1}},{"path":"src/main/java/Du/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"     * Public constructor for Deadline","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     * @param name description for Deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * @param done whether the Deadline is done","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param tasklist the Tasklist the Deadline is under","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     * @param time time which the Deadline must be done by","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    public Deadline(String name, boolean done, TaskList tasklist, LocalDateTime time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        super(name, done, tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"     * Records the Deadline in a certain format to save to the file","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"     * @return String which the Deadline is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        return \"D , \" + state + \" , \" + this.name + \" , \" + this.time.format(formatter) ;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"     * @return String for printing","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy, HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"        return \"[D][\" + this.getStatus() + \"] \" + this.name","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"                + \"(by: \" + time.getMonth() + \" \" + time.format(formatter) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":47}},{"path":"src/main/java/Du/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"    public static DialogBox getSeparation(Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        return new DialogBox(\"-----------------------------------------\", img);","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":63}},{"path":"src/main/java/Du/Du.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"public class Du {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * Public constructor for Du","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param filepath where the file will be saved for the data","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    public Du(String filepath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        storage \u003d new Storage(filepath, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"        return this.ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        return this.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     * Runs Du itself","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"     * @throws IOException from p.parse()","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    public void start() {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        ui.greet();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Previous records (if there are any):\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"        tasks.print_list_of_tasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"\\nIs there anything I can do for you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    public void end() throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        storage.update_records(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        ui.close_programme();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":50}},{"path":"src/main/java/Du/DuException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":" * Custom exception class for Du","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class DuException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"     * Public constructor for exceptions in Du","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"     * @param message message thrown for the exception","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public DuException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":16}},{"path":"src/main/java/Du/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":" * Event class which is a Task","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * Public constructor for Event","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     * @param name description for Event","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"     * @param done whether the Event is done","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"     * @param tasklist the Tasklist the Event is under","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     * @param time time which the Event is at","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    public Event(String name, boolean done, TaskList tasklist, LocalDateTime time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"        super(name, done, tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"     * Records the Event in a certain format to save to the file","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * @return String which the Event is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        return \"E , \" + state + \" , \" + name + \" , \" + time.format(formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"     * toString method","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"     * @return String for printing","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy, HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"        return \"[E][\" + this.getStatus() + \"] \" + this.name","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"                + \"(at: \" + time.getMonth() + \" \" + time.format(formatter) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":52}},{"path":"src/main/java/Du/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":13}},{"path":"src/main/java/Du/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    private Du du \u003d new Du(\"data/du.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"            scene.setFill(Color.RED);","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDu(du);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().start();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":33}},{"path":"src/main/java/Du/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    private Du du;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    private Image emptyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Empty.png\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    public void setDu(Du d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"        du \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"    public void start() throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"//        Text t \u003d new Text(\"This is a text sample\");","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"//        t.setFont(Font.font (\"Verdana\", 20));","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"                DialogBox.getDukeDialog(du.getUi().greet(), dukeImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"                DialogBox.getDukeDialog(\"Previous records (if there are any):\\n\" +","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"                                            du.getStorage().load(), dukeImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"                DialogBox.getDukeDialog(\"Is there anything I can do for you?\", dukeImage),","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"                DialogBox.getSeparation(emptyImage)","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"                );","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"     * Creates two dialog boxes. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"        Parser p \u003d new Parser(du.getTasks());","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        if (Objects.equals(input, \"bye\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"            du.end();","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"        String response \u003d p.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"                DialogBox.getSeparation(emptyImage),","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"                DialogBox.getDukeDialog(response, dukeImage),","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"                DialogBox.getSeparation(emptyImage)","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":73}},{"path":"src/main/java/Du/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * Public constructor for Parser","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     * @param tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"     * Takes in commands from user and parse them","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"     * @param command command taken in","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"     * @return String response","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    public String parse(String command) {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"        assert command !\u003d null : \"Command cannot be nothing!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        // remove any extra spaces if there is any","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        command \u003d command.strip();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        if (Objects.equals(command, \"bye\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Bye. Hope to not see you again:P\";","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(command, \"list\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"            response \u003d tasks.print_list_of_tasks();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"            response \u003d parse_two_arguments(command);","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        assert response !\u003d \"\" : \"there\u0027s no bot response?\";","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"     * Takes in a command to parse as two arguments","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"     * @param command cammand taken in","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"     * @return String response","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    public String parse_two_arguments(String command) {","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"        String[] split_string \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"        if (Objects.equals(split_string[0], \"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"            if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"                response \u003d \"Oh noes, you need to tell me what item you have finished\";","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"                return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"            response \u003d tasks.find_finished_task(Integer.parseInt(split_string[1])); // might want to find a way to check whether split_string[1] is an integer","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(split_string[0], \"find\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"            if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"                response \u003d \"Oh noes, you need to tell me what you want to find\";","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"                return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"            response \u003d tasks.print(tasks.search(split_string[1]));","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(split_string[0], \"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"            response \u003d tasks.remove_task(Integer.parseInt(split_string[1])); // might want to find a way to check whether split_string[1] is an integer","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(split_string[0], \"todo\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"            // error handling when to do item is empty","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"            if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"                response \u003d \"Oh noes, the todo item cannot be empty, please input again\";","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"                return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"            Task task \u003d new Todo(split_string[1], false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"            response \u003d task.log_add_task();","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"            if (Objects.equals(split_string[0], \"deadline\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"                response \u003d parse_Deadline(split_string);","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"            } else if (Objects.equals(split_string[0], \"event\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"                response \u003d parse_Event(split_string);","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"            } else if (Objects.equals(split_string[0], \"recurring\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"                response \u003d parse_recurring(split_string);","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"            } else  {","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"                response \u003d \"Oh noes, I don\u0027t understand:(, please input again\";","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"                return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"     * Parse the deadline item","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"     * @param split_string command taken in","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"     * @return String response","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"huisthat"},"content":"    public String parse_Deadline(String[] split_string) {","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"huisthat"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"huisthat"},"content":"            // error handling when the deadline item is empty","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"huisthat"},"content":"            if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"huisthat"},"content":"                response \u003d \"Oh noes, the Deadline item cannot be empty, please input again\";","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"huisthat"},"content":"                return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"huisthat"},"content":"            String[] task_time \u003d split_string[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"huisthat"},"content":"            // error handling when there is no time for deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"huisthat"},"content":"            if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"                response \u003d \"Oh noes, the deadline item needs to have a time to be done by, please input again\";","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"huisthat"},"content":"                return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"                LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"huisthat"},"content":"                response \u003d \"Invalid date format, please input the date in this format: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"huisthat"},"content":"                return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"huisthat"},"content":"            Task task \u003d new Deadline(task_time[0], false, tasks, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"huisthat"},"content":"            response \u003d task.log_add_task();","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"huisthat"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"huisthat"},"content":"     * Parse the event item","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"huisthat"},"content":"     * @param split_string command taken in","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"huisthat"},"content":"     * @return String response","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"huisthat"},"content":"    public String parse_Event(String[] split_string) {","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"huisthat"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"huisthat"},"content":"        // error handling when the event item is empty","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"huisthat"},"content":"        if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, the event item cannot be empty, please input again\";","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"huisthat"},"content":"        String[] task_time \u003d split_string[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"huisthat"},"content":"        // error handling when there is no time for event","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"huisthat"},"content":"        if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, the event item needs to have a time that it is occurring at, please input again\";","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"huisthat"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"huisthat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Invalid date format, please input the date in this format: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"huisthat"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"huisthat"},"content":"        Task task \u003d new Event(task_time[0], false, tasks, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"huisthat"},"content":"        response \u003d task.log_add_task();","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"huisthat"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"huisthat"},"content":"    public String parse_recurring(String[] split_string) {","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"huisthat"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"huisthat"},"content":"        // error handling when the recurring item is empty","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"huisthat"},"content":"        if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, the recurring item cannot be empty, please input again\";","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"huisthat"},"content":"        // recurring weekly, 3, deadline do assignment /by datetime","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"huisthat"},"content":"        // recurring daily, 5, event meeting /at datetime","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"huisthat"},"content":"        // frequency is daily, weekly, monthly, yearly","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"huisthat"},"content":"        String[] recurring_split \u003d split_string[1].split(\", \", 3);","lastModifiedDate":"2021-09-04"},{"lineNumber":162,"author":{"gitId":"huisthat"},"content":"        if (recurring_split.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, you need to input the frequency of recurrence and number of time it occurs\";","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"huisthat"},"content":"        if (recurring_split.length \u003c\u003d 2) {","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, you need to input the task itself\";","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"huisthat"},"content":"            int times \u003d Integer.parseInt(recurring_split[1]);","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"huisthat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"huisthat"},"content":"            response \u003d \"you need to input in the following format: recurring \u003cfrequency\u003e, \u003cnumber of times\u003e, deadline/event \";","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"huisthat"},"content":"        int times \u003d Integer.parseInt(recurring_split[1]);","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"huisthat"},"content":"        String[] deadline_event_string \u003d recurring_split[2].split(\" \", 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"huisthat"},"content":"        if (Objects.equals(deadline_event_string[0], \"deadline\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"huisthat"},"content":"            response \u003d parse_recurring_Deadline(deadline_event_string, times, recurring_split[0]);","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(deadline_event_string[0], \"event\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"huisthat"},"content":"            response \u003d parse_recurring_Event(deadline_event_string, times, recurring_split[0]);","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, pls input either a deadline or event for it to be recurring\";","lastModifiedDate":"2021-09-04"},{"lineNumber":186,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":187,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":188,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":189,"author":{"gitId":"huisthat"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":190,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":192,"author":{"gitId":"huisthat"},"content":"    public LocalDateTime add_frequency(String frequency, LocalDateTime time) {","lastModifiedDate":"2021-09-04"},{"lineNumber":193,"author":{"gitId":"huisthat"},"content":"        if (Objects.equals(frequency, \"daily\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":194,"author":{"gitId":"huisthat"},"content":"            return time.plusDays(1);","lastModifiedDate":"2021-09-04"},{"lineNumber":195,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(frequency, \"weekly\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":196,"author":{"gitId":"huisthat"},"content":"            return time.plusWeeks(1);","lastModifiedDate":"2021-09-04"},{"lineNumber":197,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(frequency, \"monthly\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":198,"author":{"gitId":"huisthat"},"content":"            return time.plusMonths(1);","lastModifiedDate":"2021-09-04"},{"lineNumber":199,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(frequency, \"yearly\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":200,"author":{"gitId":"huisthat"},"content":"            return time.plusYears(1);","lastModifiedDate":"2021-09-04"},{"lineNumber":201,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":202,"author":{"gitId":"huisthat"},"content":"        return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":203,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":204,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":205,"author":{"gitId":"huisthat"},"content":"    public String parse_recurring_Deadline(String[] split_string, int number_of_times, String frequency) {","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"huisthat"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":207,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":208,"author":{"gitId":"huisthat"},"content":"        // error handling when the deadline item is empty","lastModifiedDate":"2021-09-04"},{"lineNumber":209,"author":{"gitId":"huisthat"},"content":"        if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":210,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, the Deadline item cannot be empty, please input again\";","lastModifiedDate":"2021-09-04"},{"lineNumber":211,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":212,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":213,"author":{"gitId":"huisthat"},"content":"        String[] task_time \u003d split_string[1].split(\"/by \", 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":214,"author":{"gitId":"huisthat"},"content":"        // error handling when there is no time for deadline","lastModifiedDate":"2021-09-04"},{"lineNumber":215,"author":{"gitId":"huisthat"},"content":"        if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":216,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, the deadline item needs to have a time to be done by, please input again\";","lastModifiedDate":"2021-09-04"},{"lineNumber":217,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":218,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":219,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":220,"author":{"gitId":"huisthat"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-09-04"},{"lineNumber":221,"author":{"gitId":"huisthat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":222,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Invalid date format, please input the date in this format: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-09-04"},{"lineNumber":223,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":224,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":225,"author":{"gitId":"huisthat"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-09-04"},{"lineNumber":226,"author":{"gitId":"huisthat"},"content":"        Task task \u003d new Deadline(task_time[0], false, tasks, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":227,"author":{"gitId":"huisthat"},"content":"        for (int i \u003d 0; i \u003c number_of_times - 1; i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":228,"author":{"gitId":"huisthat"},"content":"            date \u003d add_frequency(frequency, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":229,"author":{"gitId":"huisthat"},"content":"            Task t \u003d new Deadline(task_time[0], false, tasks, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":230,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":231,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":232,"author":{"gitId":"huisthat"},"content":"        response \u003d task.log_add_recurring_task(number_of_times, frequency);","lastModifiedDate":"2021-09-04"},{"lineNumber":233,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":234,"author":{"gitId":"huisthat"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":235,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":236,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":237,"author":{"gitId":"huisthat"},"content":"    public String parse_recurring_Event(String[] split_string, int number_of_times, String frequency) {","lastModifiedDate":"2021-09-04"},{"lineNumber":238,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":239,"author":{"gitId":"huisthat"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":240,"author":{"gitId":"huisthat"},"content":"        // error handling when the event item is empty","lastModifiedDate":"2021-09-04"},{"lineNumber":241,"author":{"gitId":"huisthat"},"content":"        if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":242,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, the event item cannot be empty, please input again\";","lastModifiedDate":"2021-09-04"},{"lineNumber":243,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":244,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":245,"author":{"gitId":"huisthat"},"content":"        String[] task_time \u003d split_string[1].split(\"/at \", 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":246,"author":{"gitId":"huisthat"},"content":"        // error handling when there is no time for event","lastModifiedDate":"2021-09-04"},{"lineNumber":247,"author":{"gitId":"huisthat"},"content":"        if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":248,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Oh noes, the event item needs to have a time that it is occurring at, please input again\";","lastModifiedDate":"2021-09-04"},{"lineNumber":249,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":250,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":251,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":252,"author":{"gitId":"huisthat"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-09-04"},{"lineNumber":253,"author":{"gitId":"huisthat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":254,"author":{"gitId":"huisthat"},"content":"            response \u003d \"Invalid date format, please input the date in this format: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-09-04"},{"lineNumber":255,"author":{"gitId":"huisthat"},"content":"            return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":256,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":257,"author":{"gitId":"huisthat"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-09-04"},{"lineNumber":258,"author":{"gitId":"huisthat"},"content":"        Task task \u003d new Event(task_time[0], false, tasks, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":259,"author":{"gitId":"huisthat"},"content":"        for (int i \u003d 0; i \u003c number_of_times - 1; i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":260,"author":{"gitId":"huisthat"},"content":"            date \u003d add_frequency(frequency, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":261,"author":{"gitId":"huisthat"},"content":"            Task t \u003d new Event(task_time[0], false, tasks, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":262,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":263,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":264,"author":{"gitId":"huisthat"},"content":"        response \u003d task.log_add_recurring_task(number_of_times, frequency);","lastModifiedDate":"2021-09-04"},{"lineNumber":265,"author":{"gitId":"huisthat"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":266,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":267,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":268,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":268}},{"path":"src/main/java/Du/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    protected String filepath;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     * Public constructor for Storage","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     * @param filepath where the saved file is located at","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"     * @param tasks Tasklist with the list of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    public Storage(String filepath, TaskList tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * Loads previously recorded items if there is any","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    public String load() throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        String print \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        // check if data folder exists, if not, create it","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        if (!f.getParentFile().exists())","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        // check if du.txt exists, if not, create it","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"            return print;","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"                String task_name \u003d s.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"                Task t \u003d read_task(task_name);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"                print \u003d print + t + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"            return print;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"     * Reads the tasks if there is any from the saved file","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"     * @param task_name name from the file","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"    public Task read_task(String task_name) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"        String[] task \u003d task_name.split(\" , \", 4);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        boolean done \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"        if (Integer.parseInt(task[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"            done \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"        if (Objects.equals(task[0], \"T\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"            t \u003d new Todo(task[2], done, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(task[0], \"D\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"            t \u003d new Deadline(task[2], done, tasks, LocalDateTime.parse(task[3], formatter));","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(task[0], \"E\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"            t \u003d new Event(task[2], done, tasks, LocalDateTime.parse(task[3], formatter));","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"        return t;","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"     * Updates the records when programme ends","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"     * @param tasks list of tasks that needs to be added","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"    public void update_records(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"        FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"        for (Task t : tasks.getList_of_tasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"            fw.write(t.log_record() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":90}},{"path":"src/main/java/Du/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":" * Class for each individual task and a list of the tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    protected String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * Public constructor to create a new task","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param name name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    public Task(String name, boolean done, TaskList tasklist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"        tasklist.addTask(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    public String getName() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        return this.name;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * Prints log for adding a task","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    public String log_add_task() {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"                + this + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"                + \"Now you have \" + taskList.size() + \" task(s) in the list.\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    public String log_add_recurring_task(int number_of_times, String frequency) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"                + this + \"\\n\" + frequency + \" for \" + number_of_times + \" times\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"                + \"Now you have \" + taskList.size() + \" task(s) in the list.\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"     * Changes task\u0027s done state to be true","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    public String finish_task() {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"                + this + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"     * @return state of task","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"     * records the Task in a certain format to save to the file","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"     * @return String which the Task is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"        return \"D , \" + state + \" , \" + name;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":72}},{"path":"src/main/java/Du/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    protected static ArrayList\u003cTask\u003e list_of_tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"     * Public constructor for TaskList","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     * Adds a Task to the TaskList","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     * @param t Task added","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        list_of_tasks.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"     * Finds size of the TaskList","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * @return int","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        return list_of_tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     * Getter for list_of_task","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"     * @return ArrayList","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    public ArrayList\u003cTask\u003e getList_of_tasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        return list_of_tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"     * Removes task from the list","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"     * @param order the number the task is labelled as","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"    public String remove_task(int order) {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        String print \u003d \"Okies, I have removed this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"                + list_of_tasks.get(order - 1) + \"\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"                + \"Now you have \" + (this.size() - 1) + \" task(s) in the list.\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"        list_of_tasks.remove(order - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"        return print;","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"     * Prints list of task","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"    public String print_list_of_tasks() {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"            return \"Here are the tasks in your list:\\n \";","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"            String print \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"            for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"                print +\u003d (i + 1) + \".\" + list_of_tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"            return print;","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"     * Finds the task in the list and mark it as done","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"     * @param order the number the task is labelled as","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"    public String find_finished_task(int order) {","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        Task complete_task \u003d list_of_tasks.get(order - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"        return complete_task.finish_task();","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"     * Searches for Tasks that contain the substring","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"     * @param substring the string that needs to be searched","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"     * @return an ArrayList of Tasks that contain the substring","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"    public ArrayList\u003cTask\u003e search(String substring) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"        ArrayList\u003cTask\u003e have_substring \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"        for (Task t : this.getList_of_tasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"            if (t.getName().contains(substring)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"                have_substring.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"huisthat"},"content":"        return have_substring;","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"huisthat"},"content":"     * Prints the Tasks that contain the substring from search function","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"huisthat"},"content":"     * @param arraylist prints the Tasks in the arraylist","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"huisthat"},"content":"    public String print(ArrayList\u003cTask\u003e arraylist) {","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"huisthat"},"content":"        String print \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"huisthat"},"content":"        for (Task t : arraylist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"            print +\u003d t;","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"huisthat"},"content":"        return print;","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":108}},{"path":"src/main/java/Du/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    private String type \u003d \"T\";","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    public Todo(String name, boolean done, TaskList tasklist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"        super(name, done, tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * Records the To do in a certain format to save to the file","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @return String which the To do is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        return \"T , \" + state + \" , \" + name;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * toString method","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     * @return String for printing","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        return \"[T][\" + this.getStatus() + \"] \" + this.name;","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":35}},{"path":"src/main/java/Du/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"     * Public constructor for Ui","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    public Ui() {}","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     * Shows error when there is one","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Oops, there is an error somewhere, I\u0027m not sure where it is exactly as well\");","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     * Greets when the user first start the programme","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    public String greet() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        String logo \u003d \" ____\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"                + \"|  _ \\\\ _   _\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"                + \"| | | | | | |\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"                + \"| |_| | |_| |\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"                + \"|____/ \\\\__,_|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"        return \"Hello from\\n\" + logo  + \"Hello! I\u0027m Du, your personal assistant chatbot!:)\";","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"     * Ends programme when user inputs \"bye\"","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    public void close_programme() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Bye. Hope to not see you again:P\");","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Du.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"417.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0027https://source.unsplash.com/BGXhuJIbx78/640x960\u0027);\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"huisthat":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"import Du.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import Du.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    public void test_log_add_task() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"        Task t1 \u003d new Task(\"buy bread\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        Task t2 \u003d new Task(\"read book\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        ArrayList\u003cTask\u003e actual \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        actual.add(t1);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"        actual.add(t2);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"        assertEquals(actual, tasks.getList_of_tasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    public void test_finish_task() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        Task t1 \u003d new Task(\"buy bread\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        t1.finish_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        assertEquals(\"X\", t1.getStatus());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":35}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"import Du.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import Du.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import Du.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public void test_finish_task() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"        Todo t1 \u003d new Todo(\"buy bread\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"        t1.finish_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        assertEquals(\"X\", t1.getStatus());","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"todo read book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"todo join sports club","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"java -classpath ../bin Du \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huisthat":2,"-":32}}]
