[{"path":"data/du.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"T , 1 , sth","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"D , 0 , sth else  , 2021-08-22 18:30","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":2}},{"path":"src/main/java/Du/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":" * collections of methods that the bot can call","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"     * repeat the command","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"     * used in level 1","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     * @param command command passed to bot","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    public static void echo(String command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"                + command + \"\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":22}},{"path":"src/main/java/Du/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"     * public constructor for Deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     * @param name description for Deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * @param done whether the Deadline is done","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param tasklist the Tasklist the Deadline is under","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     * @param time time which the Deadline must be done by","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    public Deadline(String name, boolean done, TaskList tasklist, LocalDateTime time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        super(name, done, tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"     * record the Deadline in a certain format to save to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"     * @return String which the Deadline is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        if (this.done) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        return \"D , \" + state + \" , \" + this.name + \" , \" + this.time.format(formatter) ;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"     * toString method","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"     * @return String for printing","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy, HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        return \"[D][\" + this.getStatus() + \"] \" + this.name","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"                + \"(by: \" + time.getMonth() + \" \" + time.format(formatter) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":48}},{"path":"src/main/java/Du/Du.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"public class Du {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * public constructor for Du","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param filepath where the file will be saved for the data","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    public Du(String filepath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        storage \u003d new Storage(filepath, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"            storage.load();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     * run Du itself","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"     * @throws IOException from p.parse()","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        ui.greet();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Previous records (if there are any):\");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        tasks.print_list_of_tasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"\\nIs there anything I can do for you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"        Parser p \u003d new Parser(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        p.parse();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"        storage.update_records(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"        ui.close_programme();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"        new Du(\"data/du.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":47}},{"path":"src/main/java/Du/DuException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"public class DuException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"     * public constructor for exceptions in Du","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"     * @param message message thrown for the exception","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    public DuException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":13}},{"path":"src/main/java/Du/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"     * public constructor for Event","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     * @param name description for Event","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * @param done whether the Event is done","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param tasklist the Tasklist the Event is under","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     * @param time time which the Event is at","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    public Event(String name, boolean done, TaskList tasklist, LocalDateTime time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        super(name, done, tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"     * record the Event in a certain format to save to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"     * @return String which the Event is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        if (this.done) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"        return \"E , \" + state + \" , \" + name + \" , \" + time.format(formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"     * toString method","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"     * @return String for printing","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy, HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        return \"[E][\" + this.getStatus() + \"] \" + this.name","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"                + \"(at: \" + time.getMonth() + \" \" + time.format(formatter) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":49}},{"path":"src/main/java/Du/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     * takes in commands from user and parse them","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    public void parse() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"        // takes in command from user after greeting","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"        while (!Objects.equals(command, \"bye\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"            // remove any extra spaces if there is any","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"            command \u003d command.strip();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"            if (Objects.equals(command, \"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"                tasks.print_list_of_tasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"                String[] split_string \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"                if (Objects.equals(split_string[0], \"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"                    if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"                        System.out.println(\"Oh noes, you need to tell me what item you have finished\");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"                        command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"                        continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"                    tasks.find_finished_task(Integer.parseInt(split_string[1])); // might want to find a way to check whether split_string[1] is an integer","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"                } else if (Objects.equals(split_string[0], \"find\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"                    if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"                        System.out.println(\"Oh noes, you need to tell me what you want to find\");","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"                        command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"                        continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"                    tasks.print(tasks.search(split_string[1]));","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"                } else if (Objects.equals(split_string[0], \"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"                    tasks.remove_task(Integer.parseInt(split_string[1])); // might want to find a way to check whether split_string[1] is an integer","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"                } else if (Objects.equals(split_string[0], \"todo\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"                    // error handling when to do item is empty","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"                    if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"                        System.out.println(\"Oh noes, the todo item cannot be empty, please input again\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"                        command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"                        continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"                    Task task \u003d new Todo(split_string[1], false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"                    task.log_add_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"                    // error handling when the deadline/event item is empty","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"                    if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"                        System.out.println(\"Oh noes, the task item cannot be empty, please input again\");","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"                        command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"                        continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"                    if (Objects.equals(split_string[0], \"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"                        String[] task_time \u003d split_string[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"                        // error handling when there is no time for deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"                        if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Oh noes, the deadline item needs to have a time to be done by, please input again\");","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"                        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"                            LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Invalid date format, please input the date in this format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"                        LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"                        Task task \u003d new Deadline(task_time[0], false, tasks, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"                        task.log_add_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"                    } else if (Objects.equals(split_string[0], \"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"                        String[] task_time \u003d split_string[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"                        // error handling when there is no time for event","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"                        if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Oh noes, the event item needs to have a time that it is occuring at, please input again\");","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"huisthat"},"content":"                        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"huisthat"},"content":"                            LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"huisthat"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Invalid date format, please input the date in this format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"huisthat"},"content":"                        LocalDateTime date \u003d LocalDateTime.parse(task_time[1], formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"huisthat"},"content":"                        Task task \u003d new Event(task_time[0], false, tasks, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"                        task.log_add_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"huisthat"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"huisthat"},"content":"                        System.out.println(\"Oh noes, I don\u0027t understand:(, please input again\");","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"huisthat"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":113}},{"path":"src/main/java/Du/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    protected String filepath;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     * public constructor for Storage","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     * @param filepath where the saved file is located at","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"     * @param tasks Tasklist with the list of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    public Storage(String filepath, TaskList tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * load previously recorded items if there is any","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    public void load() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        // check if data folder exists, if not, create it","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        if (!f.getParentFile().exists())","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        // check if du.txt exists, if not, create it","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"                String task_name \u003d s.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"                read_task(task_name);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"     * read the tasks if there is any from the saved file","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"     * @param task_name name from the file","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"    public void read_task(String task_name) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"        String[] task \u003d task_name.split(\" , \", 4);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"        boolean done \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        if (Integer.parseInt(task[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"            done \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"        if (Objects.equals(task[0], \"T\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"            t \u003d new Todo(task[2], done, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(task[0], \"D\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"            t \u003d new Deadline(task[2], done, tasks, LocalDateTime.parse(task[3], formatter));","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        } else if (Objects.equals(task[0], \"E\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"            t \u003d new Event(task[2], done, tasks, LocalDateTime.parse(task[3], formatter));","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"    public void update_records(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"        FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"        for (Task t : tasks.getList_of_tasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"            fw.write(t.log_record() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":82}},{"path":"src/main/java/Du/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":" * Class for each individual task and a list of the tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    protected String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * public constructor to create a new task","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param name name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    public Task(String name, boolean done, TaskList tasklist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"        tasklist.addTask(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    public String getName() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        return this.name;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * print log for adding a task","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    public void log_add_task() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"                + this + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"                + \"Now you have \" + taskList.size() + \" task(s) in the list.\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"     * change task\u0027s done state to be true","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    public void finish_task() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"                + this + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"     * @return state of task","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"        return (done ? \"X\" : \" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"     * record the Task in a certain format to save to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"     * @return String which the Task is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"        if (this.done) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        return \"D , \" + state + \" , \" + name;","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":70}},{"path":"src/main/java/Du/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    protected static ArrayList\u003cTask\u003e list_of_tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"     * public constructor for TaskList","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     * add a Task to the TaskList","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     * @param t Task added","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        list_of_tasks.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"     * size of the TaskList","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"     * @return int","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        return list_of_tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     * getter for list_of_task","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"     * @return ArrayList","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    public ArrayList\u003cTask\u003e getList_of_tasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        return list_of_tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"     * remove task from the list","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"     * @param order the number the task is labelled as","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"    public void remove_task(int order) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"                + \"Okies, I have removed this task: \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"                + list_of_tasks.get(order - 1) + \"\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"                + \"Now you have \" + (this.size() - 1) + \" task(s) in the list.\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"        list_of_tasks.remove(order - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"     * print list of task","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"    public void print_list_of_tasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"                + \"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"            System.out.println(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"            for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"                System.out.println((i + 1) + \".\" + list_of_tasks.get(i).toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"                );","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"     * find the task in the list and mark it as done","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"     * @param order the number the task is labelled as","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"    public void find_finished_task(int order) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"        Task complete_task \u003d list_of_tasks.get(order - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"        complete_task.finish_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"     * @param substring","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"     * @return","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"    public ArrayList\u003cTask\u003e search(String substring) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"        ArrayList\u003cTask\u003e have_substring \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"        for (Task t : this.getList_of_tasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"huisthat"},"content":"            if (t.getName().contains(substring)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"huisthat"},"content":"                have_substring.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"huisthat"},"content":"        return have_substring;","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"    public void print(ArrayList\u003cTask\u003e arraylist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"huisthat"},"content":"                \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"huisthat"},"content":"        for (Task t : arraylist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"            System.out.println(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":108}},{"path":"src/main/java/Du/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    private String type \u003d \"T\";","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    public Todo(String name, boolean done, TaskList tasklist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"        super(name, done, tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * record the To do in a certain format to save to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     * @return String which the To do is formatted in","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"    public String log_record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        int state;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"        if (this.done) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"            state \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"            state \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"        return \"T , \" + state + \" , \" + name;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"     * toString method","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"     * @return String for printing","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        return \"[T][\" + this.getStatus() + \"] \" + this.name;","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":37}},{"path":"src/main/java/Du/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package Du;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"     * public constructor for Ui","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    public Ui() {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * called when there is an error","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Oops, there is an error somewhere, I\u0027m not sure where it is exactly as well\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"     * called when the user first start the programme","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    public void greet() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"        String logo \u003d \" ____\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"                + \"|  _ \\\\ _   _\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"                + \"| | | | | | |\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"                + \"| |_| | |_| |\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"                + \"|____/ \\\\__,_|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Hello! I\u0027m Du.Du, your personal assistant chatbot!:)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"     * end programme when user inputs \"bye\"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    public void close_programme() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"                + \"Bye. Hope to not see you again:P\" + \"\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":41}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"import Du.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import Du.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    public void test_log_add_task() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"        Task t1 \u003d new Task(\"buy bread\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        Task t2 \u003d new Task(\"read book\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        ArrayList\u003cTask\u003e actual \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        actual.add(t1);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"        actual.add(t2);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"        assertEquals(actual, tasks.getList_of_tasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    public void test_finish_task() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        Task t1 \u003d new Task(\"buy bread\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        t1.finish_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        assertEquals(\"X\", t1.getStatus());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":35}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"import Du.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import Du.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import Du.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public void test_finish_task() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"        Todo t1 \u003d new Todo(\"buy bread\", false, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"        t1.finish_task();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        assertEquals(\"X\", t1.getStatus());","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"huisthat":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"todo read book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"todo join sports club","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"java -classpath ../bin Du \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huisthat":2,"-":32}}]
