[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":" * collections of methods that the bot can call","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"public class Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"     * called when the user first start the programme","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"        String logo \u003d \" ____\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"                + \"|  _ \\\\ _   _\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"                + \"| | | | | | |\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"                + \"| |_| | |_| |\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"                + \"|____/ \\\\__,_|\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"Hello! I\u0027m Du, your personal assistant chatbot!:)\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"                + \"Please input the tasks you want to add to your list\");","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"     * repeat the command","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"     * used in level 1","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"     * @param command command passed to bot","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    public static void echo(String command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"                + command + \"\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"     * end programme when user inputs \"bye\"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    public static void close_programme() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"                + \"Bye. Hope to not see you again:P\" + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":42}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"    private String time;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"    public Deadline(String name, String time) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"        return \"[D][\" + this.getStatus() + \"] \" + this.name","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"                + \"(by: \" + time + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":15}},{"path":"src/main/java/Du.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"public class Du {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"        Command.greet();","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"        while (!Objects.equals(command, \"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"            command \u003d command.strip();","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"            if (Objects.equals(command, \"list\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"                Task.print_list_of_tasks();","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"                String[] split_string \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"                if (Objects.equals(split_string[0], \"done\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"                    Task.find_finished_task(Integer.parseInt(split_string[1]));","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"                } else if (Objects.equals(split_string[0], \"delete\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"                    Task.remove_task(Integer.parseInt(split_string[1]));","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"                } else if (Objects.equals(split_string[0], \"todo\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"                    // error handling when to do item is empty","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"                    if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"                        System.out.println(\"Oh noes, the todo item cannot be empty, please input again\");","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"                        command \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"                        continue;","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"                    Task task \u003d new Todo(split_string[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"                    task.log_add_task();","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"                } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"                    if (Objects.equals(split_string[0], \"deadline\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"                        // error handling when deadline item is empty","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"                        if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Oh noes, the deadline item cannot be empty, please input again\");","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"                        String[] task_time \u003d split_string[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"                        // error handling when there is no time for deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"                        if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Oh noes, the deadline item needs to have a time to be done by, please input again\");","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"                        Task task \u003d new Deadline(task_time[0], task_time[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"                        task.log_add_task();","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"                    } else if (Objects.equals(split_string[0], \"event\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"                        // error handling when event item is empty","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"                        if (split_string.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Oh noes, the todo item cannot be empty, please input again\");","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"                        String[] task_time \u003d split_string[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"                        // error handling when there is no time for event","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"                        if (task_time.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"                            System.out.println(\"Oh noes, the event item needs to have a time that it is occuring at, please input again\");","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"                            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"                            continue;","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"                        }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"                        Task task \u003d new Event(task_time[0], task_time[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"                        task.log_add_task();","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"                    } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"                        System.out.println(\"Oh noes, I don\u0027t understand:(, please input again\");","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"        Command.close_programme();","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":78}},{"path":"src/main/java/DuException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"public class DuException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"    public DuException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"    private String time;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"        return \"[E][\" + this.getStatus() + \"] \" + this.name","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"                + \"(at: \" + time + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":" * Class for each individual task and a list of the tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    protected String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    private static ArrayList\u003cTask\u003e list_of_tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"     * public constructor to create a new task","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"     * @param name name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        list_of_tasks.add(this);","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"     * print log for adding a task","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    public void log_add_task() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"                + this + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"                + \"Now you have \" + list_of_tasks.size() + \" task(s) in the list.\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"     * change task\u0027s done state to be true","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    private void finish_task() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"                + this + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"     * find the task in the list and mark it as done","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"     * @param order order of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"    public static void find_finished_task(int order) {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"        Task complete_task \u003d list_of_tasks.get(order - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"        complete_task.finish_task();","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"    public static void remove_task(int order) {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"                + \"Okies, I have removed this task: \\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"                + list_of_tasks.get(order - 1) + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"                + \"Now you have \" + (list_of_tasks.size() - 1) + \" task(s) in the list.\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        list_of_tasks.remove(order - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"     * print list of task","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"    public static void print_list_of_tasks() {","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"                + \"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        for (int i \u003d 0; i \u003c list_of_tasks.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"            System.out.println((i + 1) + \".\" + list_of_tasks.get(i).toString()","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"//                    \"[\" + list_of_tasks.get(i).getStatus() + \"] \"","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"//                            + list_of_tasks.get(i).name + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"            );","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"     * @return state of task","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"        return (done ? \"X\" : \" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"huisthat":82}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"        return \"[T][\" + this.getStatus() + \"] \" + this.name;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"todo read book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"todo join sports club","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"huisthat":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"java -classpath ../bin Du \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huisthat":2,"-":32}}]
