[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"    String date;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"    public Deadline(String desc, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"        super(desc);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"        this.date\u003d date;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"        return \"[D]\" + super.toString() + \"(by: \"+date+\")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nzixuan":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"    private static final String divider \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"    @FunctionalInterface","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"    private interface CheckedConsumer\u003cT\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"        void accept(T t) throws DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"    enum Action {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"        DONE,","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"        DELETE,","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"        TODO,","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"        EVENT,","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"        NONE","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"    private static class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"        private DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"            super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"    public void greet() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"        System.out.println(divider +","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"                \"\\tHello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"                \"\\tWhat can I do for you?\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"                divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"    public boolean process(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"            String[] arr \u003d str.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"            if (arr.length \u003c 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"                throw new DukeException(\"No command was given.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"            String firstWord \u003d arr[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"            if (str.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"                System.out.println(divider + \"\\tBye. Hope to see you again soon!\\n\" + divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"                return false;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"            } else if (str.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"                displayList();","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"                Action action \u003d parseFirstWord(firstWord.toLowerCase());","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"                CheckedConsumer\u003cString\u003e consumer \u003d actionToFunction(action);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"              if (arr.length \u003c 2 \u0026\u0026 (action \u003d\u003d Action.DONE || action \u003d\u003d Action.DELETE)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"                    throw new DukeException(\"Task number for \"+firstWord+\" is not given.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"                } else if (arr.length \u003c 2 || arr[1].isBlank()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"                    throw new DukeException(\"The description of \" + firstWord + \" cannot be empty\");","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"                   consumer.accept(arr[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"            return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"nzixuan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"nzixuan"},"content":"            System.out.println(divider + \"\\t â˜¹ OOPS!!! \" + e.getMessage() + \"\\n\" + divider);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"nzixuan"},"content":"            return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"nzixuan"},"content":"    private Action parseFirstWord(String firstWord) {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"nzixuan"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"nzixuan"},"content":"            case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"nzixuan"},"content":"                return Action.DONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"nzixuan"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"nzixuan"},"content":"                return Action.DELETE;","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"nzixuan"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"nzixuan"},"content":"                return Action.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"nzixuan"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"nzixuan"},"content":"                return Action.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"nzixuan"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"nzixuan"},"content":"                return Action.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"nzixuan"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"nzixuan"},"content":"                return Action.NONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"nzixuan"},"content":"    private CheckedConsumer\u003cString\u003e actionToFunction(Action action) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"nzixuan"},"content":"        switch (action) {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"nzixuan"},"content":"            case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"nzixuan"},"content":"                return this::done;","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"nzixuan"},"content":"            case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"nzixuan"},"content":"                return this::delete;","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"nzixuan"},"content":"            case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"nzixuan"},"content":"                return this::addTodo;","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"nzixuan"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"nzixuan"},"content":"                return this::addDeadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"nzixuan"},"content":"            case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"nzixuan"},"content":"                return this::addEvent;","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"nzixuan"},"content":"            case NONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"nzixuan"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"nzixuan"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"nzixuan"},"content":"    private void delete(String str) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"nzixuan"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"nzixuan"},"content":"            int i \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"nzixuan"},"content":"            if (i \u003e 0 \u0026\u0026 i \u003c\u003d list.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"nzixuan"},"content":"                Task t \u003dlist.remove(i-1);","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"nzixuan"},"content":"                System.out.println(divider + \"\\tGot it. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"nzixuan"},"content":"                System.out.println(\"\\t\" + t);","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"nzixuan"},"content":"                System.out.println(\"\\tNow you have \" + list.size() + \" task\" + (list.size() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"nzixuan"},"content":"                System.out.println(divider);","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"nzixuan"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"nzixuan"},"content":"                throw new DukeException(\"No such task found in list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"nzixuan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"nzixuan"},"content":"            throw new DukeException(str + \" cannot be converted to a number.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"nzixuan"},"content":"    private void done(String str) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"nzixuan"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"nzixuan"},"content":"            int i \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"nzixuan"},"content":"            if (i \u003e 0 \u0026\u0026 i \u003c\u003d list.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"nzixuan"},"content":"                list.get(i - 1).markDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"nzixuan"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"nzixuan"},"content":"                throw new DukeException(\"No such task found in list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"nzixuan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"nzixuan"},"content":"            throw new DukeException(str + \" cannot be converted to a number.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"nzixuan"},"content":"    private void addEvent(String str) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"nzixuan"},"content":"        if (str.contains(\"/at \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"nzixuan"},"content":"            String[] arr \u003d str.split(\"/at \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"nzixuan"},"content":"            Task t \u003d new Event(arr[0], arr[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"nzixuan"},"content":"            addTask(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"nzixuan"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"nzixuan"},"content":"            throw new DukeException(\"Date cannot be empty!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"nzixuan"},"content":"    private void addDeadline(String str) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"nzixuan"},"content":"        if (str.contains(\"/by \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"nzixuan"},"content":"            String[] arr \u003d str.split(\"/by \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"nzixuan"},"content":"            Task t \u003d new Deadline(arr[0], arr[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"nzixuan"},"content":"            addTask(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"nzixuan"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"nzixuan"},"content":"            throw new DukeException(\"Date cannot be empty!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"nzixuan"},"content":"    private void addTodo(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"nzixuan"},"content":"        Task t \u003d new Todo(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"nzixuan"},"content":"        addTask(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"nzixuan"},"content":"    private void addTask(Task t) {","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"nzixuan"},"content":"        list.add(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"nzixuan"},"content":"        System.out.println(divider + \"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"nzixuan"},"content":"        System.out.println(\"\\t\" + t);","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"nzixuan"},"content":"        System.out.println(\"\\tNow you have \" + list.size() + \" task\" + (list.size() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"nzixuan"},"content":"        System.out.println(divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"nzixuan"},"content":"    private void addList(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"nzixuan"},"content":"        Task t \u003d new Task(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"nzixuan"},"content":"        list.add(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"nzixuan"},"content":"        System.out.println(divider + \"\\tadded: \" + t + \"\\n\" + divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"nzixuan"},"content":"    private void displayList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"nzixuan"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"nzixuan"},"content":"            System.out.println(divider + \"\\tlist empty\\n\" + divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"nzixuan"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"nzixuan"},"content":"        System.out.print(divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"nzixuan"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"nzixuan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"nzixuan"},"content":"            System.out.println(\"\\t\" + (i + 1) + \". \" + list.get(i));","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"nzixuan"},"content":"        System.out.println(divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nzixuan":184,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"    String date;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"    public Event(String desc, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"        super(desc);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"        this.date\u003d date;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"        return \"[E]\" + super.toString() + \"(at: \"+date+\")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nzixuan":13}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"public class Main {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"        duke.greet();","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"        boolean loop \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"        Scanner scanner \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"        while(loop) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"            loop \u003d duke.process(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nzixuan":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"    Boolean done;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"    String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"    public Task(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"        done \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"        description \u003d str;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"        done \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"        System.out.println(\"\\t\" +this.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"        return \"[\"+ (done?\u0027X\u0027:\u0027 \u0027) + \"] \" + description;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nzixuan":20}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"    public Todo(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"        super(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nzixuan":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"todo walk","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"deadline cry /by now","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"event eat ice cream /at 23 aug","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"deadline cry","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"event eat","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"done now","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"delete now","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nzixuan":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nzixuan":1,"-":37}}]
