[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class creates deadline instances which are to be done by a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    // The time to complete the deadline by.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"    protected String time;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"     * @param time The time to complete the deadline by.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    public Deadline(String name, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":" * This class runs a personal assistant chatbot that helps a person keep track of various tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":" * Commands for the bot are: list, mark, delete, bye, event, deadline, and todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":" * Unrecognised command will be met with a prompt to enter a recognised one instead.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    // To represent line separators in the chat.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    private static final String LINE_HORIZONTAL \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"            \"___________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"    // To store the tasks to be done.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    // The possible commands for the bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    private enum Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"        TODO, DEADLINE, EVENT, LIST, MARK, DELETE, BYE","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"     * Initializes the chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"        // Prints initial message as prompt.","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\nGreetings! This is Elsa.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"                        \"What can I do for you?\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\",","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        // Initializes scanner to take input from user.","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        String input;","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"        // Tracks if the user is done with the assistant.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"        // Takes in input and performs actions accordingly.","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"        while(!(exit)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"            input \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"                Command commandToExecute \u003d interpretCommand(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"                switch (commandToExecute) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"                case LIST:","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"                    printList();","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"                case MARK:","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"                    int toMark \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"                    markTaskAsDone(toMark);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"                case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"                    int toDelete \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"                    deleteTask(toDelete);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"                case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"                    addToDo(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"                    addDeadline(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"                case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"                    addEvent(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"                case BYE:","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"                    printBye();","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"                    exit \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"                        \"I don\u0027t quite understand what that means.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"                        \"Could you please rephrase that?\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"            } catch (MissingTaskException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"                        \"You might have missed out on the task.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"                        \"Could you please enter it again?\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"            } catch (MissingTimeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"                        \"You might have missed out on the time.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"                        \"Could you please enter it again?\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"            } catch (InvalidTaskException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"                        \"You might have mistyped the task number.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"                        \"Please ensure task number is between 1 and %d.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\", LINE_HORIZONTAL, taskList.size(), LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"        scanner.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"     * Interprets the command entered by user and returns its enum.","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"     * @param input The input entered by user.","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"     * @return The command enum in the input.","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"    private static Command interpretCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"LIST\");","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"done\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"MARK\");","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"delete\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"DELETE\");","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"todo\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"TODO\");","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"deadline\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"DEADLINE\");","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"event\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"EVENT\");","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"BYE\");","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidCommandException(\"Invalid command!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"lwj1711"},"content":"     * Prints out every task in the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"lwj1711"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"lwj1711"},"content":"        System.out.println(LINE_HORIZONTAL);","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"lwj1711"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"There are no tasks to be done! Hooray!\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"lwj1711"},"content":"            System.out.println(\"Here is your list of tasks:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"lwj1711"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"lwj1711"},"content":"                String taskName \u003d taskList.get(i).toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%d.%s\\n\", i + 1, taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"lwj1711"},"content":"        System.out.println(LINE_HORIZONTAL);","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"lwj1711"},"content":"     * Marks the corresponding task as done and prints confirmation.","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"lwj1711"},"content":"     * @param toMark The index of the task to be marked.","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"lwj1711"},"content":"    public static void markTaskAsDone(int toMark) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"lwj1711"},"content":"        if (toMark \u003c\u003d 0 || toMark \u003e taskList.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"Task is not found\");","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"lwj1711"},"content":"        taskList.get(toMark - 1).markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"lwj1711"},"content":"                        \"Great job!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"lwj1711"},"content":"                        \"The following task is marked as done:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"lwj1711"},"content":"                        \"\\t%s\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\",","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, taskList.get(toMark - 1).toString(), LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"lwj1711"},"content":"     * Deletes the corresponding task as done and prints confirmation.","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"lwj1711"},"content":"     * @param toDelete The index of the task to be deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"lwj1711"},"content":"    public static void deleteTask(int toDelete) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"lwj1711"},"content":"        if (toDelete \u003c\u003d 0 || toDelete \u003e taskList.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"Task is not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"lwj1711"},"content":"                        \"Done!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"lwj1711"},"content":"                        \"The following task has been removed:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"lwj1711"},"content":"                        \"\\t%s\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"lwj1711"},"content":"                        \"You now have %d tasks left in your list!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\",","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, taskList.get(toDelete - 1).toString(), taskList.size() - 1, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"lwj1711"},"content":"        taskList.remove(toDelete - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"lwj1711"},"content":"     * Adds the to do entered by the user to the list and prints it.","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"lwj1711"},"content":"     * @param input The to do inputted by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"lwj1711"},"content":"    public static void addToDo(String input) throws MissingTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"lwj1711"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"lwj1711"},"content":"        taskList.add(new ToDo(taskName));","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"lwj1711"},"content":"     * Adds the deadline entered by the user to the list and prints it.","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"lwj1711"},"content":"     * @param input The deadline inputted by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"lwj1711"},"content":"    public static void addDeadline(String input)","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\"/by\");","lastModifiedDate":"2021-08-18"},{"lineNumber":207,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 11) {","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(9, separation - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 4).length() \u003c 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"lwj1711"},"content":"        String time \u003d input.substring(separation + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"lwj1711"},"content":"        taskList.add(new Deadline(taskName, time));","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":225,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":226,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"lwj1711"},"content":"     * Adds the event entered by the user to the list and prints it.","lastModifiedDate":"2021-08-18"},{"lineNumber":228,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"lwj1711"},"content":"     * @param input The event inputted by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"lwj1711"},"content":"    public static void addEvent(String input)","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\"/at\");","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 8) {","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(6, separation - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 4).length() \u003c 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":244,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":245,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"lwj1711"},"content":"        String time \u003d input.substring(separation + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":248,"author":{"gitId":"lwj1711"},"content":"        taskList.add(new Event(taskName, time));","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":250,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":251,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":252,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":253,"author":{"gitId":"lwj1711"},"content":"     * Prints the confirmation of the addition of the last task.","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":255,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task just added.","lastModifiedDate":"2021-08-19"},{"lineNumber":256,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":257,"author":{"gitId":"lwj1711"},"content":"    public static void printTaskAdded(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"lwj1711"},"content":"                        \"Gotcha! The following task has been added:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"lwj1711"},"content":"                        \"\\t%s\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":261,"author":{"gitId":"lwj1711"},"content":"                        \"You now have %d tasks in your list!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":262,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\",","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, taskName,","lastModifiedDate":"2021-08-19"},{"lineNumber":264,"author":{"gitId":"lwj1711"},"content":"                taskList.size(), LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":265,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":266,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":267,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"lwj1711"},"content":"     * Prints the farewell message for the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":269,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":270,"author":{"gitId":"lwj1711"},"content":"    public static void printBye() {","lastModifiedDate":"2021-08-19"},{"lineNumber":271,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":272,"author":{"gitId":"lwj1711"},"content":"                        \"Goodbye. Hope to see you again soon!\\n\",","lastModifiedDate":"2021-08-19"},{"lineNumber":273,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lwj1711":270,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions created specific to the Duke bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class creates event instances which are to be done at a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    // The time of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"    protected String time;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a event.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"     * @param time The time of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":28}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to invalid command.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions with missing arguments.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class MissingTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public MissingTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/MissingTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing time.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class MissingTimeException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public MissingTimeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents tasks to be done by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    // The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    // To track if the task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"     * To mark a task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":36}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class creates to do instances which can be done any time.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"event /at Aug 6th 2pm - 4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"event project meeting /at Aug 6th 2pm - 4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"deadling return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"done 14","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"delete 34","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"cp ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lwj1711":4,"-":29}}]
