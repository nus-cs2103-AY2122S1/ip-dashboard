[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"lwj1711":19,"-":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import duke.command.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import duke.command.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTaskException;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTimeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":" * This class runs a personal assistant chat bot that helps a person keep track of various tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":" * Commands for the bot are: list, mark, find, delete, bye, event, deadline, and todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":" * Unrecognised commands will be met with a prompt to enter a recognised one instead.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"public class Duke {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    private boolean isExit;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * Initiates the chat bot by loading the given file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"        ui \u003d new Ui(\"Pingu\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"        storage \u003d new Storage(\"data/duke_list_data.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        isExit \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"            tasks \u003d new TaskList(storage.loadListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"     * Accepts the user\u0027s inputs and acts accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"     * @return","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"    private String handleUserInput(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"            String command \u003d ui.receiveUserCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"            return executeAction(input, command);","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"            return ui.printException(\"IOException\");","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"            return ui.printException(\"DateTimeParse\");","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"     * Executes an action depending on the command.","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"     * @param command The command interpreted by the parser.","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"    private String executeAction(String input, String command)","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"            throws IOException, InvalidCommandException, InvalidTaskException,","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"            MissingTaskException, MissingTimeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"            isExit \u003d true;","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"            return ui.printBye();","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"        } else if (command.equals(\"help\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"            return ui.printHelp();","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"            storage.saveTasksToFile(tasks.getTasks());","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"            return tasks.performCommand(command, input);","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"     * Returns a generated response based on the user\u0027s input.","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the response.","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"        return handleUserInput(input.trim());","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"     * Returns the String representing Duke\u0027s welcome message.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"     * @return Duke\u0027s welcome message.","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"        return ui.getWelcome();","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"     * Returns initial list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"    public String initialGetTasks() {","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"        return tasks.printList();","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"     * Checks if the user has requested to exit Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"     * @return true if user has requested to exit; false otherwise.","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"        return this.isExit;","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lwj1711":123,"-":1}},{"path":"src/main/java/duke/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"public class DukeDialogBox extends HBox {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"    private DukeDialogBox(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"     * Returns the Dialog Box for Duke\u0027s response.","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"     * @param text The text to be included in the box.","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"     * @param img The image representing Duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"     * @return The DialogBox representing Duke\u0027s response.","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"    public static DukeDialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"        var db \u003d new DukeDialogBox(text, img);","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"lwj1711":63}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"lwj1711":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"lwj1711":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/penguin_1.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/penguin_2.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"    private void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"        Duke dukeTemp \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"                DukeDialogBox.getDukeDialog(dukeTemp.getWelcomeMessage(), dukeImage),","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"                DukeDialogBox.getDukeDialog(dukeTemp.initialGetTasks(), dukeImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"                UserDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"                DukeDialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"                public void run () {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"                    System.exit(0);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"            }, 2000);","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"lwj1711":65}},{"path":"src/main/java/duke/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    private UserDialogBox(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"     * Returns the Dialog Box for user\u0027s input.","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     * @param text The text to be included in the box.","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"     * @param img The image representing user.","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"     * @return The DialogBox representing user\u0027s input.","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"    public static UserDialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"lwj1711":47}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class handles the making sense of user commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Takes in user input and performs an action accordingly.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     * @return The string representing the command interpreted.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    public String interpretCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"        assert input !\u003d null : \"User input cannot be null!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"            return \"list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).toLowerCase().contains(\"done\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"            return \"mark\";","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 6).toLowerCase().contains(\"delete\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"            return \"delete\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).toLowerCase().contains(\"todo\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"            return \"todo\";","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 10 \u0026\u0026 input.substring(0, 8).toLowerCase().contains(\"deadline\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"            return \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0, 5).toLowerCase().contains(\"event\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"            return \"event\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).toLowerCase().contains(\"find\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"            return \"find\";","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"            return \"help\";","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 3 \u0026\u0026 input.substring(0, 3).equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"            return \"bye\";","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"            return \"invalid\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":37}},{"path":"src/main/java/duke/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":" * This class handles the loading and saving of user tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    // The location of the file to load.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    private final String filepath;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"     * Constructor for a Storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"     * @param filepath The location of the file to load.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"     * Imports the data from the hard disk to the user\u0027s list.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"     * @return The array of tasks saved in the user\u0027s data.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"     * @throws FileNotFoundException If there are problems with reading the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"    public ArrayList\u003cTask\u003e loadListData() throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"            addTaskToList(sc.nextLine(), tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"     * Adds the data from a line in the .txt file to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"     * @param lineToAdd The line of the file to add.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"     * @param tasks The array representing the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"    public static void addTaskToList(String lineToAdd, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"        assert lineToAdd.length() \u003e 0 : \"Line to add cannot be empty!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"        String taskDetails \u003d lineToAdd.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"        if (lineToAdd.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"            addTodoToList(lineToAdd, tasks, taskDetails);","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"        } else if (lineToAdd.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"            addDeadlineToList(lineToAdd, tasks, taskDetails);","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"            addEventToList(lineToAdd, tasks, taskDetails);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"     * Parses to do from string format to add into in task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"     * @param lineToAdd The string representing the line to add.","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"     * @param tasks The array representing the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"     * @param taskDetails The to do details part of the string.","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"    private static void addTodoToList(String lineToAdd, ArrayList\u003cTask\u003e tasks, String taskDetails) {","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"        Task currentTask \u003d new ToDo(taskDetails);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"        tasks.add(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"        if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"     * Parses deadline from string format to add into in task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"     * @param lineToAdd The string representing the line to add.","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"     * @param tasks The array representing the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"     * @param taskDetails The deadline details part of the string.","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"    private static void addDeadlineToList(String lineToAdd, ArrayList\u003cTask\u003e tasks, String taskDetails) {","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"        int separator \u003d taskDetails.indexOf(\" (by: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d taskDetails.substring(0, separator);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d taskDetails.substring(separator + 6);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"        Task currentTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"        if (timeFull.length() \u003e 12) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(12, timeFull.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"            currentTask \u003d new Deadline(taskName, date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"            currentTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"        tasks.add(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"        if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"     * Parses event from string format to add into in task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"     * @param lineToAdd The string representing the line to add.","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"     * @param tasks The array representing the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"     * @param taskDetails The event details part of the string.","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"    private static void addEventToList(String lineToAdd, ArrayList\u003cTask\u003e tasks, String taskDetails) {","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"lwj1711"},"content":"        int separator \u003d taskDetails.indexOf(\" (at: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d taskDetails.substring(0, separator);","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d taskDetails.substring(separator + 6);","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"lwj1711"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"lwj1711"},"content":"        Task currentTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"lwj1711"},"content":"        if (timeFull.length() \u003e 12) {","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(12, timeFull.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"lwj1711"},"content":"            currentTask \u003d new Event(taskName, date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"lwj1711"},"content":"            currentTask \u003d new Event(taskName, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"lwj1711"},"content":"        tasks.add(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"lwj1711"},"content":"        if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"lwj1711"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"lwj1711"},"content":"     * Saves the last element in the user\u0027s list to the .txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"lwj1711"},"content":"     * @param tasks The array of tasks to save in user\u0027s data.","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"lwj1711"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"lwj1711"},"content":"        // Writes the data into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"lwj1711"},"content":"        FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"lwj1711"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"lwj1711"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"lwj1711"},"content":"            String taskName \u003d task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"lwj1711"},"content":"            textToAdd.append(taskName).append(\"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"lwj1711"},"content":"        fw.write(textToAdd.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":163,"author":{"gitId":"lwj1711"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":165}},{"path":"src/main/java/duke/command/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" * This class handles the interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    private static Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    private final String botName;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a new UI.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    public Ui(String name) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"        assert name.length() \u003e 0 : \"Name should not be empty!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"        this.botName \u003d name;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"     * Returns initial start up message.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the welcome message.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    public String getWelcome() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"        return String.format(\"Greetings! This is %s!\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"                + \"Attempting to fetch your tasks...\\n\",","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"                this.botName);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"     * Takes in user input and performs an action accordingly.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the command interpreted from user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"    public String receiveUserCommand(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"        return this.parser.interpretCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"     * Returns the message for various types of exceptions.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"     * @param type The type of exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"     * @return A string representing the exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"    public String printException(String type) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"        assert type.length() \u003e 0 : \"Exception type should be stated!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"        case \"IOException\":","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"            return \"There is a problem with saving the list to the file.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"                    + \"Please ensure a duke.txt file is present in /data.\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"        case \"DateTimeParse\":","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"            return \"Your date might not be in the correct format.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"                    + \"Please ensure it is in the YYYY-MM-DD format.\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"        default:","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"            return \"ERROR! ERROR!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"     * Returns the help message for the user.","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the help message.","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"    public static String printHelp() {","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"        return \"Here is the list of commands you can enter:\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"                + \"- Create new tasks:\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"                + \"    todo \u003ctask name\u003e\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"                + \"    deadline \u003ctask name\u003e /by \u003cYYYY-MM-DD\u003e\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"                + \"    event \u003ctask name\u003e /at \u003cYYYY-MM-DD\u003e\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"                + \"- Display your list of tasks:\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"                + \"    list\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"                + \"- Mark a task as done\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"                + \"    done \u003ctask number\u003e\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"                + \"- Delete a task\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"                + \"    delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"                + \"- Search the list for tasks matching keyword\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"                + \"    find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"                + \"- Exit the assistant\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"                + \"    bye\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"     * Returns the farewell message for the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the farewell message.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"    public static String printBye() {","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"        return \"Goodbye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":97}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions created specific to the Duke bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to invalid command.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid command exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to invalid time format.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid date exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public InvalidDateFormatException(String msg) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid task exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions with missing arguments.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class MissingTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a missing task exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public MissingTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/MissingTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing time.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class MissingTimeException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a missing time exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public MissingTimeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":" * This class creates deadline instances which are to be done by a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    // The date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    // The time of the date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    protected String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"     * @param date The date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * Secondary constructor to which includes time.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     * @param time The time of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    public Deadline(String name, LocalDate date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"        String timeComponent \u003d (this.time.equals(\"\")","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"                : this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + this.time);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"                + timeComponent","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"                + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":" * This class creates event instances which are to be done at a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    // The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    // The time of the date to complete the event by.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    protected String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a event.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * Secondary constructor to which includes time.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     * @param time The time of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    public Event(String name, LocalDate date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"        String timeComponent \u003d (this.time.equals(\"\")","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"                : this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + this.time);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"                + timeComponent","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"                + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents tasks to be done by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    // The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    // To track if the task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":38}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":" * This class handles commands dealing with the user\u0027s task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * Performs action on task list based on the user\u0027s inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param command The command to perform.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * @param input The input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     * @return The String to return based on the action taken.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidCommandException If user command is unrecognised.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in user\u0027s list.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"     * */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    public String performCommand(String command, String input)","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"            throws InvalidCommandException, InvalidTaskException, MissingTaskException, MissingTimeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"        assert command.length() \u003e 0 : \"Command cannot be empty!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"        assert input.length() \u003e 0 : \"Input cannot be empty!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"        switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"            return printList();","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"        case \"mark\":","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"            int taskToMark \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"            return markTaskAsDone(taskToMark);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"            int taskToDelete \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"            return deleteTask(taskToDelete);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"            return addToDo(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"            return addDeadline(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"            return addEvent(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"            return findTask(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidCommandException(\"I don\u0027t quite understand what that means.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please rephrase that?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"     * Returns every task in the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the tasks in the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"    public String printList() {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"        StringBuilder output;","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"            output \u003d new StringBuilder(\"There are no tasks to be done! Hooray!\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"            output \u003d new StringBuilder(\"Here is your list of tasks:\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"                String taskName \u003d taskList.get(i).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"                output.append(i + 1).append(\".\").append(taskName).append(\"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"        return output.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"     * Marks the corresponding task as done and returns confirmation.","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"     * @param taskToMark The index of the task to be marked.","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the confirmation message.","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in user\u0027s list.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"    public String markTaskAsDone(int taskToMark) throws InvalidTaskException {","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"        if (taskToMark \u003c\u003d 0 || taskToMark \u003e taskList.size()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"You might have mistyped the task number.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"                    + \"Please recheck your task number and enter again.\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"        taskList.get(taskToMark - 1).markAsDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"        return String.format(\"Great job!\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"                + \"The following task is marked as done:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"                taskList.get(taskToMark - 1).toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"     * Deletes the corresponding task as done and returns confirmation.","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"     * @param taskToDelete The index of the task to be deleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the confirmation.","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in list.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"    public String deleteTask(int taskToDelete) throws InvalidTaskException {","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"        if (taskToDelete \u003c\u003d 0 || taskToDelete \u003e taskList.size()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"You might have mistyped the task number.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"                    + \"Please recheck your task number and enter again.\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"        String output \u003d String.format(\"Done!\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"                + \"The following task has been removed:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"                + \"You now have %d \"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"                + (taskList.size() - 1 \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"lwj1711"},"content":"                + \" left in your list!\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"lwj1711"},"content":"                taskList.get(taskToDelete - 1).toString(), taskList.size() - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"lwj1711"},"content":"        taskList.remove(taskToDelete - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"lwj1711"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"lwj1711"},"content":"     * Adds the to do entered by the user to the list and returns it.","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"lwj1711"},"content":"     * @param input The to do inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the added to do.","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"lwj1711"},"content":"    public String addToDo(String input) throws MissingTaskException {","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"lwj1711"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"You might have missed out on the task.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"lwj1711"},"content":"        taskList.add(new ToDo(taskName));","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"lwj1711"},"content":"        return printTaskAdded(taskName);","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"lwj1711"},"content":"     * Adds the deadline entered by the user to the list and returns it.","lastModifiedDate":"2021-09-02"},{"lineNumber":153,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"lwj1711"},"content":"     * @param input The deadline inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the added deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"lwj1711"},"content":"     * @throws DateTimeParseException If date entered is of the wrong format.","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"lwj1711"},"content":"    public String addDeadline(String input)","lastModifiedDate":"2021-09-02"},{"lineNumber":161,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException, DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"You might have missed out on the time.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":166,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":167,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 11) {","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"You might have missed out on the task.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":172,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(9, separation);","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 6).length() \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Your date might not be in the correct format.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":178,"author":{"gitId":"lwj1711"},"content":"                    + \"Please ensure it is in the YYYY-MM-DD format.\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":179,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d input.substring(separation + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"lwj1711"},"content":"        int timeFullSeparation;","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"lwj1711"},"content":"        if ((timeFullSeparation \u003d timeFull.indexOf(\" \")) !\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(timeFullSeparation + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, timeFullSeparation));","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Deadline(taskName, date, time));","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull);","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Deadline(taskName, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"lwj1711"},"content":"        return printTaskAdded(taskName);","lastModifiedDate":"2021-09-02"},{"lineNumber":194,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"lwj1711"},"content":"     * Adds the event entered by the user to the list and returns it.","lastModifiedDate":"2021-09-02"},{"lineNumber":198,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"lwj1711"},"content":"     * @param input The event inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the added event.","lastModifiedDate":"2021-09-02"},{"lineNumber":201,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"lwj1711"},"content":"     * @throws DateTimeParseException If date entered is of the wrong format.","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"lwj1711"},"content":"    public String addEvent(String input)","lastModifiedDate":"2021-09-02"},{"lineNumber":206,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException, DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"You might have missed out on the time.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":211,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":212,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 8) {","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"You might have missed out on the task.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":216,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":217,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(6, separation);","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 6).length() \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Your date might not be in the correct format.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":222,"author":{"gitId":"lwj1711"},"content":"                    + \"Please ensure it is in the YYYY-MM-DD format.\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":223,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d input.substring(separation + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"lwj1711"},"content":"        int timeFullSeparation;","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"lwj1711"},"content":"        if ((timeFullSeparation \u003d timeFull.indexOf(\" \")) !\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(timeFullSeparation + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, timeFullSeparation));","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Event(taskName, date, time));","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull);","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Event(taskName, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"lwj1711"},"content":"        assert taskList.size() \u003e 0 : \"Check if item was added properly to task list!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":238,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":239,"author":{"gitId":"lwj1711"},"content":"        return printTaskAdded(taskName);","lastModifiedDate":"2021-09-02"},{"lineNumber":240,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":241,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":242,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":243,"author":{"gitId":"lwj1711"},"content":"     * Returns the confirmation of the addition of the last task.","lastModifiedDate":"2021-09-02"},{"lineNumber":244,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":245,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task just added.","lastModifiedDate":"2021-08-25"},{"lineNumber":246,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the added task.","lastModifiedDate":"2021-09-02"},{"lineNumber":247,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"lwj1711"},"content":"    public String printTaskAdded(String taskName) {","lastModifiedDate":"2021-09-02"},{"lineNumber":249,"author":{"gitId":"lwj1711"},"content":"        return String.format(\"Gotcha! The following task has been added:\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":250,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":251,"author":{"gitId":"lwj1711"},"content":"                + \"You now have %d \"","lastModifiedDate":"2021-08-25"},{"lineNumber":252,"author":{"gitId":"lwj1711"},"content":"                + (taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-25"},{"lineNumber":253,"author":{"gitId":"lwj1711"},"content":"                + \" in your list!\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":254,"author":{"gitId":"lwj1711"},"content":"                taskName, taskList.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":255,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":256,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":257,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":258,"author":{"gitId":"lwj1711"},"content":"     * Finds the tasks requested by the user and returns them.","lastModifiedDate":"2021-09-02"},{"lineNumber":259,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"lwj1711"},"content":"     * @param input The event inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":261,"author":{"gitId":"lwj1711"},"content":"     * @return The String representing the found tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":262,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-26"},{"lineNumber":263,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"lwj1711"},"content":"    public String findTask(String input) throws MissingTaskException {","lastModifiedDate":"2021-09-02"},{"lineNumber":265,"author":{"gitId":"lwj1711"},"content":"        ArrayList\u003cTask\u003e toPrint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":266,"author":{"gitId":"lwj1711"},"content":"        StringBuilder output;","lastModifiedDate":"2021-09-02"},{"lineNumber":267,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":268,"author":{"gitId":"lwj1711"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"You might have missed out on the task.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":270,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":271,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":272,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":273,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(5);","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"lwj1711"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":276,"author":{"gitId":"lwj1711"},"content":"            String currentTask \u003d task.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":277,"author":{"gitId":"lwj1711"},"content":"            if (currentTask.contains(taskName)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":278,"author":{"gitId":"lwj1711"},"content":"                toPrint.add(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":279,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":280,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":281,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"lwj1711"},"content":"        if (toPrint.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":283,"author":{"gitId":"lwj1711"},"content":"            output \u003d new StringBuilder(\"It seems like there are no tasks matching your search.\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":284,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":285,"author":{"gitId":"lwj1711"},"content":"            output \u003d new StringBuilder(\"The matching \"","lastModifiedDate":"2021-09-02"},{"lineNumber":286,"author":{"gitId":"lwj1711"},"content":"                    + (toPrint.size() \u003d\u003d 1","lastModifiedDate":"2021-09-02"},{"lineNumber":287,"author":{"gitId":"lwj1711"},"content":"                    ? \"task in your list is:\"","lastModifiedDate":"2021-09-02"},{"lineNumber":288,"author":{"gitId":"lwj1711"},"content":"                    : \"tasks in your list are:\")","lastModifiedDate":"2021-09-02"},{"lineNumber":289,"author":{"gitId":"lwj1711"},"content":"                    + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":290,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":291,"author":{"gitId":"lwj1711"},"content":"            for (int i \u003d 0; i \u003c toPrint.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":292,"author":{"gitId":"lwj1711"},"content":"                output.append(String.format(\"%d.%s\\n\", i + 1, toPrint.get(i)));","lastModifiedDate":"2021-09-02"},{"lineNumber":293,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":294,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":295,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":296,"author":{"gitId":"lwj1711"},"content":"        assert output.length() \u003e 0 : \"Output should contain text!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":297,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":298,"author":{"gitId":"lwj1711"},"content":"        return output.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":299,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":300,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":301,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":302,"author":{"gitId":"lwj1711"},"content":"     * Returns the tasks added to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":303,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":304,"author":{"gitId":"lwj1711"},"content":"     * @return The array containing the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":305,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":306,"author":{"gitId":"lwj1711"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":307,"author":{"gitId":"lwj1711"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":308,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":309,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":309}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class creates to do instances which can be done any time.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":25}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"115.0\" prefWidth\u003d\"425.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: hotpink;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"                \u003cFont name\u003d\"Verdana\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"            \u003cInsets right\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"lwj1711":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"350.0\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"550.0\" prefWidth\u003d\"450.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"550.0\" prefWidth\u003d\"438.0\" style\u003d\"-fx-background-color: pink;\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"lwj1711":19}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"115.0\" prefWidth\u003d\"425.0\" spacing\u003d\"5\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: violet;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"                \u003cFont name\u003d\"Verdana\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"                \u003cInsets right\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e    \u003c/children\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"lwj1711":26}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":12}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    public void testInterpretCommand_normalInputs() throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"list\", parser.interpretCommand(\"list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"mark\", parser.interpretCommand(\"done 2\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"todo\", parser.interpretCommand(\"todo fishing\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"deadline\", parser.interpretCommand(\"deadline cake /by 2020-03-03\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"event\", parser.interpretCommand(\"event homework /at 2020-03-03 5pm\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    public void testInterpretCommand_unknownCommand() throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"invalid\", parser.interpretCommand(\"aaaaaaa\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"invalid\", parser.interpretCommand(\"list 3123\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"invalid\", parser.interpretCommand(\"frogfish\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":27}},{"path":"src/test/java/duke/command/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"public class UiTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    public void testReceiveUserCommand() throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"        Ui ui \u003d new Ui(\"Bob\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"todo\", ui.receiveUserCommand(\"todo homework\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"event /at 2021-08-06 2pm - 4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"event project meeting /at 2021-08-06 2pm - 4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"deadling return book /by 2021-08-09 (Sunday)","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"deadline return book /by 2021-08-09 (Sunday)","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"event project meeting /at 2021-08-27 2-4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"done 14","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"find book","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"ok","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"find","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"find nday","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"delete 34","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lwj1711":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"cp ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lwj1711":4,"-":29}}]
