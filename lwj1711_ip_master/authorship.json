[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" * This class creates deadline instances which are to be done by a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    // The date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    // The time of the date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    protected String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     * @param date The date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"     * Secondary constructor to which includes time.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param time The time of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"    public Deadline(String name, LocalDate date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"        String timeComponent \u003d (this.time.equals(\"\")","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"                : this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + this.time);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"                + timeComponent","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"                + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":51}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":" * This class runs a personal assistant chatbot that helps a person keep track of various tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":" * Commands for the bot are: list, mark, delete, bye, event, deadline, and todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":" * Unrecognised command will be met with a prompt to enter a recognised one instead.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    // To represent line separators in the chat.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    private static final String LINE_HORIZONTAL \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"            \"___________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    // To store the tasks to be done.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    // The possible commands for the bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"    private enum Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"        TODO, DEADLINE, EVENT, LIST, MARK, DELETE, BYE","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"     * Initializes the chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        // Prints initial message as prompt.","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"Greetings! This is Elsa.\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"        // Loads list data if saved in hard drive before.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"            loadListData();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"%s\\nIt seems there was an error reading the saved list.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"                    + \"Please ensure a duke.txt file is present in /data.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"                    + \"%s\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"                    LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        // Prints the loaded list.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"            printList();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"%s\\nIt seems like there are no items in the saved list.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"                    + \"Start adding tasks to save your list!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"                    + \"%s\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"                    LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"        // Initializes scanner to take input from user.","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"        String input;","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"        // Tracks if the user is done with the assistant.","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"        // Takes in input and performs actions accordingly.","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"        while(!(exit)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"            input \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"                Command commandToExecute \u003d interpretCommand(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"                switch (commandToExecute) {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"                case LIST:","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"                    printList();","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"                case MARK:","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"                    int toMark \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"                    markTaskAsDone(toMark);","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"                case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"                    int toDelete \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"                    deleteTask(toDelete);","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"                case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"                    addToDo(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"                    addTaskToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"                    addDeadline(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"                    addTaskToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"                case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"                    addEvent(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"                    addTaskToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"                case BYE:","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"                    printBye();","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"                    exit \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"                        + \"I don\u0027t quite understand what that means.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"                        + \"Could you please rephrase that?\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"                        + \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"            } catch (MissingTaskException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"                        + \"You might have missed out on the task.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"                        + \"Could you please enter it again?\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"                        + \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"            } catch (MissingTimeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"                        + \"You might have missed out on the time.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"                        + \"Could you please enter it again?\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"                        + \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"            } catch (InvalidTaskException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"                        + \"You might have mistyped the task number.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"                        + \"Please ensure task number is between 1 and %d.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"                        + \"%s\\n\", LINE_HORIZONTAL, taskList.size(), LINE_HORIZONTAL);","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"                        + \"There is a problem with saving the list to the file.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"                        + \"Please ensure a duke.txt file is present in /data.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"lwj1711"},"content":"                        + \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"lwj1711"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%s\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"lwj1711"},"content":"                        \"Your date might not be in the correct format.\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"lwj1711"},"content":"                        \"Please ensure it is in the YYYY-MM-DD format.\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"lwj1711"},"content":"                        \"%s\\n\", LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"lwj1711"},"content":"        scanner.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"lwj1711"},"content":"     * Interprets the command entered by user and returns its enum.","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"lwj1711"},"content":"     * @param input The input entered by user.","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"lwj1711"},"content":"     * @return The command enum in the input.","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidCommandException If command cannot be found.","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"lwj1711"},"content":"    public static Command interpretCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"lwj1711"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"LIST\");","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"done\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"MARK\");","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"delete\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"DELETE\");","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"todo\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"TODO\");","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"deadline\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"DEADLINE\");","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().indexOf(\"event\") !\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"EVENT\");","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"lwj1711"},"content":"        } else if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"lwj1711"},"content":"            return Command.valueOf(\"BYE\");","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidCommandException(\"Invalid command!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"lwj1711"},"content":"     * Prints out every task in the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"lwj1711"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"lwj1711"},"content":"        System.out.println(LINE_HORIZONTAL);","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"lwj1711"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"There are no tasks to be done! Hooray!\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"lwj1711"},"content":"            System.out.println(\"Here is your list of tasks:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"lwj1711"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"lwj1711"},"content":"                String taskName \u003d taskList.get(i).toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%d.%s\\n\", i + 1, taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"lwj1711"},"content":"        System.out.println(LINE_HORIZONTAL);","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"lwj1711"},"content":"     * Marks the corresponding task as done and prints confirmation.","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"lwj1711"},"content":"     * @param toMark The index of the task to be marked.","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in user\u0027s list.","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"lwj1711"},"content":"    public static void markTaskAsDone(int toMark) throws InvalidTaskException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"lwj1711"},"content":"        if (toMark \u003c\u003d 0 || toMark \u003e taskList.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"Task is not found\");","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"lwj1711"},"content":"        taskList.get(toMark - 1).markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"lwj1711"},"content":"        updateTaskToFile(toMark);","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"lwj1711"},"content":"                + \"Great job!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"lwj1711"},"content":"                + \"The following task is marked as done:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":201,"author":{"gitId":"lwj1711"},"content":"                +  \"\\t%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":202,"author":{"gitId":"lwj1711"},"content":"                +  \"%s\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":203,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, taskList.get(toMark - 1).toString(), LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"lwj1711"},"content":"     * Deletes the corresponding task as done and prints confirmation.","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"lwj1711"},"content":"     * @param toDelete The index of the task to be deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in list.","lastModifiedDate":"2021-08-23"},{"lineNumber":211,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"lwj1711"},"content":"    public static void deleteTask(int toDelete) throws InvalidTaskException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"lwj1711"},"content":"        if (toDelete \u003c\u003d 0 || toDelete \u003e taskList.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"Task is not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":218,"author":{"gitId":"lwj1711"},"content":"                + \"Done!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":219,"author":{"gitId":"lwj1711"},"content":"                + \"The following task has been removed:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":220,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":221,"author":{"gitId":"lwj1711"},"content":"                + \"You now have %d \"","lastModifiedDate":"2021-08-23"},{"lineNumber":222,"author":{"gitId":"lwj1711"},"content":"                + (taskList.size() - 1 \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-23"},{"lineNumber":223,"author":{"gitId":"lwj1711"},"content":"                + \" left in your list!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":224,"author":{"gitId":"lwj1711"},"content":"                + \"%s\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":225,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, taskList.get(toDelete - 1).toString(), taskList.size() - 1, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"lwj1711"},"content":"        taskList.remove(toDelete - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":228,"author":{"gitId":"lwj1711"},"content":"        deleteTaskFromFile(toDelete);","lastModifiedDate":"2021-08-23"},{"lineNumber":229,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":232,"author":{"gitId":"lwj1711"},"content":"     * Adds the to do entered by the user to the list and prints it.","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"lwj1711"},"content":"     * @param input The to do inputted by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-23"},{"lineNumber":236,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"lwj1711"},"content":"    public static void addToDo(String input) throws MissingTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"lwj1711"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"lwj1711"},"content":"        taskList.add(new ToDo(taskName));","lastModifiedDate":"2021-08-19"},{"lineNumber":244,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":246,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":247,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"lwj1711"},"content":"     * Adds the deadline entered by the user to the list and prints it.","lastModifiedDate":"2021-08-18"},{"lineNumber":249,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":250,"author":{"gitId":"lwj1711"},"content":"     * @param input The deadline inputted by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":251,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-23"},{"lineNumber":252,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-23"},{"lineNumber":253,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":254,"author":{"gitId":"lwj1711"},"content":"    public static void addDeadline(String input)","lastModifiedDate":"2021-08-19"},{"lineNumber":255,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException, DateTimeParseException {","lastModifiedDate":"2021-08-23"},{"lineNumber":256,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\" /by \");","lastModifiedDate":"2021-08-18"},{"lineNumber":257,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":258,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":259,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":260,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":261,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":262,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 11) {","lastModifiedDate":"2021-08-18"},{"lineNumber":263,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":264,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":265,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":266,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(9, separation);","lastModifiedDate":"2021-08-23"},{"lineNumber":267,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":268,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 6).length() \u003c 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":269,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":270,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":271,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":272,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d input.substring(separation + 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":273,"author":{"gitId":"lwj1711"},"content":"        int timeFullSeparation;","lastModifiedDate":"2021-08-23"},{"lineNumber":274,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":275,"author":{"gitId":"lwj1711"},"content":"        if ((timeFullSeparation \u003d timeFull.indexOf(\" \")) !\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":276,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(timeFullSeparation + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":277,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, timeFullSeparation));","lastModifiedDate":"2021-08-23"},{"lineNumber":278,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Deadline(taskName, date, time));","lastModifiedDate":"2021-08-23"},{"lineNumber":279,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":280,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull);","lastModifiedDate":"2021-08-23"},{"lineNumber":281,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Deadline(taskName, date));","lastModifiedDate":"2021-08-23"},{"lineNumber":282,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":283,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":284,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":285,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":286,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":287,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":288,"author":{"gitId":"lwj1711"},"content":"     * Adds the event entered by the user to the list and prints it.","lastModifiedDate":"2021-08-18"},{"lineNumber":289,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":290,"author":{"gitId":"lwj1711"},"content":"     * @param input The event inputted by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":291,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-23"},{"lineNumber":292,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-23"},{"lineNumber":293,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":294,"author":{"gitId":"lwj1711"},"content":"    public static void addEvent(String input)","lastModifiedDate":"2021-08-19"},{"lineNumber":295,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException, DateTimeParseException {","lastModifiedDate":"2021-08-23"},{"lineNumber":296,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\" /at \");","lastModifiedDate":"2021-08-18"},{"lineNumber":297,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":298,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":299,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":300,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":301,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":302,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 8) {","lastModifiedDate":"2021-08-18"},{"lineNumber":303,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":304,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":305,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(6, separation);","lastModifiedDate":"2021-08-23"},{"lineNumber":306,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":307,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 6).length() \u003c 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":308,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-18"},{"lineNumber":309,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":310,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":311,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d input.substring(separation + 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":312,"author":{"gitId":"lwj1711"},"content":"        int timeFullSeparation;","lastModifiedDate":"2021-08-23"},{"lineNumber":313,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":314,"author":{"gitId":"lwj1711"},"content":"        if ((timeFullSeparation \u003d timeFull.indexOf(\" \")) !\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":315,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(timeFullSeparation + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":316,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, timeFullSeparation));","lastModifiedDate":"2021-08-23"},{"lineNumber":317,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Event(taskName, date, time));","lastModifiedDate":"2021-08-23"},{"lineNumber":318,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":319,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull);","lastModifiedDate":"2021-08-23"},{"lineNumber":320,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Event(taskName, date));","lastModifiedDate":"2021-08-23"},{"lineNumber":321,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":322,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":323,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":324,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":325,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":326,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":327,"author":{"gitId":"lwj1711"},"content":"     * Prints the confirmation of the addition of the last task.","lastModifiedDate":"2021-08-19"},{"lineNumber":328,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":329,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task just added.","lastModifiedDate":"2021-08-19"},{"lineNumber":330,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":331,"author":{"gitId":"lwj1711"},"content":"    public static void printTaskAdded(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":332,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":333,"author":{"gitId":"lwj1711"},"content":"                + \"Gotcha! The following task has been added:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":334,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":335,"author":{"gitId":"lwj1711"},"content":"                + \"You now have %d \"","lastModifiedDate":"2021-08-23"},{"lineNumber":336,"author":{"gitId":"lwj1711"},"content":"                + (taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-23"},{"lineNumber":337,"author":{"gitId":"lwj1711"},"content":"                + \" in your list!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":338,"author":{"gitId":"lwj1711"},"content":"                + \"%s\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":339,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, taskName,","lastModifiedDate":"2021-08-19"},{"lineNumber":340,"author":{"gitId":"lwj1711"},"content":"                taskList.size(), LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":341,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":342,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":343,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":344,"author":{"gitId":"lwj1711"},"content":"     * Prints the farewell message for the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":345,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":346,"author":{"gitId":"lwj1711"},"content":"    public static void printBye() {","lastModifiedDate":"2021-08-19"},{"lineNumber":347,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":348,"author":{"gitId":"lwj1711"},"content":"                + \"Goodbye. Hope to see you again soon!\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":349,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL);","lastModifiedDate":"2021-08-19"},{"lineNumber":350,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":351,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":352,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":353,"author":{"gitId":"lwj1711"},"content":"     * Saves the last element in the user\u0027s list to the .txt file.","lastModifiedDate":"2021-08-23"},{"lineNumber":354,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":355,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":356,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":357,"author":{"gitId":"lwj1711"},"content":"    public static void addTaskToFile() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":358,"author":{"gitId":"lwj1711"},"content":"        String fileName \u003d \"./data/duke_list_data.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":359,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":360,"author":{"gitId":"lwj1711"},"content":"        // Writes the data into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":361,"author":{"gitId":"lwj1711"},"content":"        FileWriter fw \u003d new FileWriter(fileName, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":362,"author":{"gitId":"lwj1711"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":363,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d taskList.get(taskList.size() - 1).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":364,"author":{"gitId":"lwj1711"},"content":"        textToAdd \u003d textToAdd + taskName + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":365,"author":{"gitId":"lwj1711"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":366,"author":{"gitId":"lwj1711"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":367,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":368,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":369,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":370,"author":{"gitId":"lwj1711"},"content":"     * Updates a task in the user\u0027s list to be marked as done in the .txt file.","lastModifiedDate":"2021-08-23"},{"lineNumber":371,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":372,"author":{"gitId":"lwj1711"},"content":"     * @param toMark The index of the task to be marked.","lastModifiedDate":"2021-08-23"},{"lineNumber":373,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":374,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":375,"author":{"gitId":"lwj1711"},"content":"    public static void updateTaskToFile(int toMark) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":376,"author":{"gitId":"lwj1711"},"content":"        String fileName \u003d \"./data/duke_list_data.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":377,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":378,"author":{"gitId":"lwj1711"},"content":"        // Updates the data into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":379,"author":{"gitId":"lwj1711"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":380,"author":{"gitId":"lwj1711"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":381,"author":{"gitId":"lwj1711"},"content":"        String toUpdate \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":382,"author":{"gitId":"lwj1711"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":383,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":384,"author":{"gitId":"lwj1711"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":385,"author":{"gitId":"lwj1711"},"content":"            if (lineNumber \u003d\u003d toMark) {","lastModifiedDate":"2021-08-23"},{"lineNumber":386,"author":{"gitId":"lwj1711"},"content":"                String currentLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":387,"author":{"gitId":"lwj1711"},"content":"                currentLine \u003d currentLine.substring(0, 4) + \u0027X\u0027 + currentLine.substring(5);","lastModifiedDate":"2021-08-23"},{"lineNumber":388,"author":{"gitId":"lwj1711"},"content":"                toUpdate \u003d toUpdate + currentLine + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":389,"author":{"gitId":"lwj1711"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":390,"author":{"gitId":"lwj1711"},"content":"                toUpdate \u003d toUpdate + sc.nextLine() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":391,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":392,"author":{"gitId":"lwj1711"},"content":"            lineNumber++;","lastModifiedDate":"2021-08-23"},{"lineNumber":393,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":394,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":395,"author":{"gitId":"lwj1711"},"content":"        FileWriter fw \u003d new FileWriter(fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":396,"author":{"gitId":"lwj1711"},"content":"        fw.write(toUpdate);","lastModifiedDate":"2021-08-23"},{"lineNumber":397,"author":{"gitId":"lwj1711"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":398,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":399,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":400,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":401,"author":{"gitId":"lwj1711"},"content":"     * Deletes a task from the .txt file.","lastModifiedDate":"2021-08-23"},{"lineNumber":402,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":403,"author":{"gitId":"lwj1711"},"content":"     * @param toDelete The index of the task to be marked.","lastModifiedDate":"2021-08-23"},{"lineNumber":404,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":405,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":406,"author":{"gitId":"lwj1711"},"content":"    public static void deleteTaskFromFile(int toDelete) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":407,"author":{"gitId":"lwj1711"},"content":"        String fileName \u003d \"./data/duke_list_data.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":408,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":409,"author":{"gitId":"lwj1711"},"content":"        // Updates the data into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":410,"author":{"gitId":"lwj1711"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":411,"author":{"gitId":"lwj1711"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":412,"author":{"gitId":"lwj1711"},"content":"        String toUpdate \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":413,"author":{"gitId":"lwj1711"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":414,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":415,"author":{"gitId":"lwj1711"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":416,"author":{"gitId":"lwj1711"},"content":"            if (lineNumber \u003d\u003d toDelete) {","lastModifiedDate":"2021-08-23"},{"lineNumber":417,"author":{"gitId":"lwj1711"},"content":"                sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":418,"author":{"gitId":"lwj1711"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":419,"author":{"gitId":"lwj1711"},"content":"                toUpdate \u003d toUpdate + sc.nextLine() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":420,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":421,"author":{"gitId":"lwj1711"},"content":"            lineNumber++;","lastModifiedDate":"2021-08-23"},{"lineNumber":422,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":423,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":424,"author":{"gitId":"lwj1711"},"content":"        FileWriter fw \u003d new FileWriter(fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":425,"author":{"gitId":"lwj1711"},"content":"        fw.write(toUpdate);","lastModifiedDate":"2021-08-23"},{"lineNumber":426,"author":{"gitId":"lwj1711"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":427,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":428,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":429,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":430,"author":{"gitId":"lwj1711"},"content":"     * Imports the data from the hard disk to the user\u0027s list.","lastModifiedDate":"2021-08-23"},{"lineNumber":431,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":432,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":433,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":434,"author":{"gitId":"lwj1711"},"content":"    public static void loadListData() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":435,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":436,"author":{"gitId":"lwj1711"},"content":"        String fileName \u003d \"./data/duke_list_data.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":437,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":438,"author":{"gitId":"lwj1711"},"content":"        // Creates directory if it does not already exist.","lastModifiedDate":"2021-08-23"},{"lineNumber":439,"author":{"gitId":"lwj1711"},"content":"        String directoryName \u003d \"./data\";","lastModifiedDate":"2021-08-23"},{"lineNumber":440,"author":{"gitId":"lwj1711"},"content":"        Path path \u003d Paths.get(directoryName);","lastModifiedDate":"2021-08-23"},{"lineNumber":441,"author":{"gitId":"lwj1711"},"content":"        Files.createDirectories(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":442,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":443,"author":{"gitId":"lwj1711"},"content":"        // Creates file if it does not already exist.","lastModifiedDate":"2021-08-23"},{"lineNumber":444,"author":{"gitId":"lwj1711"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":445,"author":{"gitId":"lwj1711"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":446,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":447,"author":{"gitId":"lwj1711"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":448,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":449,"author":{"gitId":"lwj1711"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":450,"author":{"gitId":"lwj1711"},"content":"            addTaskToList(sc.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":451,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":452,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":453,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":454,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":455,"author":{"gitId":"lwj1711"},"content":"     * Adds the data from a line in the .txt file to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":456,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":457,"author":{"gitId":"lwj1711"},"content":"     * @param lineToAdd The line of the file to add.","lastModifiedDate":"2021-08-23"},{"lineNumber":458,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":459,"author":{"gitId":"lwj1711"},"content":"    public static void addTaskToList(String lineToAdd) {","lastModifiedDate":"2021-08-23"},{"lineNumber":460,"author":{"gitId":"lwj1711"},"content":"        String taskDetails \u003d lineToAdd.substring(7);","lastModifiedDate":"2021-08-23"},{"lineNumber":461,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":462,"author":{"gitId":"lwj1711"},"content":"        if (lineToAdd.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":463,"author":{"gitId":"lwj1711"},"content":"            Task currentTask \u003d new ToDo(taskDetails);","lastModifiedDate":"2021-08-23"},{"lineNumber":464,"author":{"gitId":"lwj1711"},"content":"            taskList.add(currentTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":465,"author":{"gitId":"lwj1711"},"content":"            if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":466,"author":{"gitId":"lwj1711"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":467,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":468,"author":{"gitId":"lwj1711"},"content":"        } else if (lineToAdd.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":469,"author":{"gitId":"lwj1711"},"content":"            int separator \u003d taskDetails.indexOf(\" (by: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":470,"author":{"gitId":"lwj1711"},"content":"            String taskName \u003d taskDetails.substring(0, separator);","lastModifiedDate":"2021-08-23"},{"lineNumber":471,"author":{"gitId":"lwj1711"},"content":"            String timeFull \u003d taskDetails.substring(separator + 6);","lastModifiedDate":"2021-08-24"},{"lineNumber":472,"author":{"gitId":"lwj1711"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":473,"author":{"gitId":"lwj1711"},"content":"            Task currentTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":474,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":475,"author":{"gitId":"lwj1711"},"content":"            if (timeFull.length() \u003e 12) {","lastModifiedDate":"2021-08-24"},{"lineNumber":476,"author":{"gitId":"lwj1711"},"content":"                String time \u003d timeFull.substring(12, timeFull.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":477,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":478,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Deadline(taskName, date, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":479,"author":{"gitId":"lwj1711"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":480,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":481,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":482,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":483,"author":{"gitId":"lwj1711"},"content":"            taskList.add(currentTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":484,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":485,"author":{"gitId":"lwj1711"},"content":"            if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":486,"author":{"gitId":"lwj1711"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":487,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":488,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":489,"author":{"gitId":"lwj1711"},"content":"            int separator \u003d taskDetails.indexOf(\" (at: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":490,"author":{"gitId":"lwj1711"},"content":"            String taskName \u003d taskDetails.substring(0, separator);","lastModifiedDate":"2021-08-23"},{"lineNumber":491,"author":{"gitId":"lwj1711"},"content":"            String timeFull \u003d taskDetails.substring(separator + 6);","lastModifiedDate":"2021-08-24"},{"lineNumber":492,"author":{"gitId":"lwj1711"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":493,"author":{"gitId":"lwj1711"},"content":"            Task currentTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":494,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":495,"author":{"gitId":"lwj1711"},"content":"            if (timeFull.length() \u003e 12) {","lastModifiedDate":"2021-08-24"},{"lineNumber":496,"author":{"gitId":"lwj1711"},"content":"                String time \u003d timeFull.substring(12, timeFull.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":497,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":498,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Event(taskName, date, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":499,"author":{"gitId":"lwj1711"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":500,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":501,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Event(taskName, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":502,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":503,"author":{"gitId":"lwj1711"},"content":"            taskList.add(currentTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":504,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":505,"author":{"gitId":"lwj1711"},"content":"            if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":506,"author":{"gitId":"lwj1711"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":507,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":508,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lwj1711":505,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions created specific to the Duke bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" * This class creates event instances which are to be done at a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    // The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    // The time of the date to complete the event by.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    protected String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a event.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"     * Secondary constructor to which includes time.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param time The time of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"    public Event(String name, LocalDate date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"        String timeComponent \u003d (this.time.equals(\"\")","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"                : this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + this.time);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"                + timeComponent","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"                + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":51}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to invalid command.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid command exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to invalid time format.","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class InvalidDateFormatException extends DukeException{","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid date exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public InvalidDateFormatException(String msg) {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid task exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions with missing arguments.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class MissingTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a missing task exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public MissingTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/MissingTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing time.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class MissingTimeException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a missing time exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public MissingTimeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class represents tasks to be done by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    // The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    // To track if the task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":36}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":" * This class creates to do instances which can be done any time.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"event /at 2021-08-06 2pm - 4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"event project meeting /at 2021-08-06 2pm - 4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"deadling return book /by 2021-08-09 (Sunday)","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"deadline return book /by 2021-08-09 (Sunday)","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"event project meeting /at 2021-08-27 2-4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"done 14","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"delete 34","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"cp ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lwj1711":4,"-":29}}]
