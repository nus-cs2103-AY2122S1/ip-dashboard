[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import duke.command.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import duke.command.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":" * This class runs a personal assistant chatbot that helps a person keep track of various tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":" * Commands for the bot are: list, mark, delete, bye, event, deadline, and todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":" * Unrecognised commands will be met with a prompt to enter a recognised one instead.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * Initiates the chatbot by loading the given file.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     * @param filepath The location of the file to load.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"        ui \u003d new Ui(\"Elsa\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"            tasks \u003d new TaskList(storage.loadListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"            ui.printLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"     * Starts the chatbot\u0027s interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"        while (true) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"                String input \u003d ui.getInput();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"                String command \u003d ui.receiveUserCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"                ui.printSeparator();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"                tasks.performCommand(command, input);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"                ui.printSeparator();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"                storage.saveTasksToFile(tasks.getTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"                ui.printException(\"InvalidCommand\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"                ui.printException(\"IOException\");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"            } catch (InvalidTaskException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"                ui.printException(\"InvalidTask\");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"            } catch (MissingTaskException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"                ui.printException(\"MissingTask\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"            } catch (MissingTimeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"                ui.printException(\"MissingTime\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"                ui.printException(\"DateTimeParse\");","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"        ui.printBye();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"     * Initializes the chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"        new Duke(\"data/duke_list_data.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lwj1711":89,"-":2}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":" * This class handles the making sense of user commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public Parser() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     * Takes in user input and performs an action accordingly.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    public String interpretCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"            return \"list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).toLowerCase().indexOf(\"done\") !\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"            return \"mark\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 6).toLowerCase().indexOf(\"delete\") !\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"            return \"delete\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).toLowerCase().indexOf(\"todo\") !\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"            return \"todo\";","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 10 \u0026\u0026 input.substring(0, 8).toLowerCase().indexOf(\"deadline\") !\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"            return \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0, 5).toLowerCase().indexOf(\"event\") !\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"            return \"event\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).toLowerCase().indexOf(\"find\") !\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"            return \"find\";","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"        } else if (input.length() \u003e\u003d 3 \u0026\u0026 input.substring(0, 3).toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"            return \"bye\";","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"            return \"invalid\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":38}},{"path":"src/main/java/duke/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":" * This class handles the loading and saving of user tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    // The location of the file to load.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    private String filepath;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * Constructor for a Storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param filepath The location of the file to load.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"     * Imports the data from the hard disk to the user\u0027s list.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"     * @throws FileNotFoundException If there are problems with reading the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"    public ArrayList\u003cTask\u003e loadListData() throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"            addTaskToList(sc.nextLine(), tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"     * Adds the data from a line in the .txt file to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"     * @param lineToAdd The line of the file to add.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"     * @param tasks The array representing the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"    public static void addTaskToList(String lineToAdd, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"        String taskDetails \u003d lineToAdd.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"        if (lineToAdd.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"            Task currentTask \u003d new ToDo(taskDetails);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"            tasks.add(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"            if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"        } else if (lineToAdd.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"            int separator \u003d taskDetails.indexOf(\" (by: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"            String taskName \u003d taskDetails.substring(0, separator);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"            String timeFull \u003d taskDetails.substring(separator + 6);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"            Task currentTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"            if (timeFull.length() \u003e 12) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"                String time \u003d timeFull.substring(12, timeFull.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Deadline(taskName, date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"            tasks.add(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"            if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"            int separator \u003d taskDetails.indexOf(\" (at: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"            String taskName \u003d taskDetails.substring(0, separator);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"            String timeFull \u003d taskDetails.substring(separator + 6);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"            Task currentTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"            if (timeFull.length() \u003e 12) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"                String time \u003d timeFull.substring(12, timeFull.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Event(taskName, date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"                LocalDate date \u003d LocalDate.parse(timeFull.substring(0, 11), formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"                currentTask \u003d new Event(taskName, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"            tasks.add(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"            if (lineToAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"     * Saves the last element in the user\u0027s list to the .txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"        // Writes the data into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"        FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"            String taskName \u003d task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"lwj1711"},"content":"            textToAdd +\u003d taskName + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"lwj1711"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"lwj1711"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":129}},{"path":"src/main/java/duke/command/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":" * This class handles the interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    private static final String LINE_HORIZONTAL \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"            \"___________________________________________________________\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    private final String BOT_NAME;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    private static Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a new UI.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    public Ui(String name) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        this.BOT_NAME \u003d name;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * Prints initial message as prompt.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"Greetings! This is %s.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"                + \"What can I do for you?\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"                this.BOT_NAME);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"     * Prints loading error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"    public void printLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\nIt seems there was an error reading the saved list.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"                + \"Please ensure a duke.txt file is present in /data.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"                + \"%s\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL, LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"     * Takes in user input and returns it.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"     * @return The trimmed input.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"     * Takes in user input and performs an action accordingly.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidCommandException If the command is unrecognised.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"    public String receiveUserCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"        return this.parser.interpretCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"     * Prints the message for various types of exceptions.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"     * @param type The type of exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"    public void printException(String type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"        case \"InvalidCommand\":","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"I don\u0027t quite understand what that means.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please rephrase that?\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"                    + \"%s\\n\", LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"        case \"IOException\":","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"There is a problem with saving the list to the file.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"                    + \"Please ensure a duke.txt file is present in /data.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"                    + \"%s\\n\", LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"        case \"InvalidTask\":","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"You might have mistyped the task number.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"                    + \"Please recheck your task number and enter again.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"                    + \"%s\\n\", LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"        case \"MissingTask\":","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"You might have missed out on the task.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"                    + \"%s\\n\", LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"        case \"MissingTime\":","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"You might have missed out on the time.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"                    + \"Could you please enter it again?\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"                    + \"%s\\n\", LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"        case \"DateTimeParse\":","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"Your date might not be in the correct format.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"                    \"Please ensure it is in the YYYY-MM-DD format.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"                    \"%s\\n\", LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"     * Prints the line separator.","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"    public void printSeparator() {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"        System.out.println(LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"     * Prints the farewell message for the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"    public static void printBye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"%s\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"                        + \"Goodbye. Hope to see you again soon!\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"                LINE_HORIZONTAL);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":123}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions created specific to the Duke bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a Duke exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to invalid command.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid command exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to invalid time format.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class InvalidDateFormatException extends DukeException{","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /***","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid date exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public InvalidDateFormatException(String msg) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create an invalid task exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions with missing arguments.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class MissingTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a missing task exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public MissingTaskException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/exception/MissingTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents exceptions due to missing time.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class MissingTimeException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a missing time exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public MissingTimeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":" * This class creates deadline instances which are to be done by a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    // The date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    // The time of the date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    protected String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"     * @param date The date to complete the deadline by.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * Secondary constructor to which includes time.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     * @param time The time of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    public Deadline(String name, LocalDate date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"        String timeComponent \u003d (this.time.equals(\"\")","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"                : this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + this.time);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"                + timeComponent","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"                + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":" * This class creates event instances which are to be done at a certain time.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    // The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    // The time of the date to complete the event by.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    protected String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a event.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"     * Secondary constructor to which includes time.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     * @param time The time of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"    public Event(String name, LocalDate date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"        String timeComponent \u003d (this.time.equals(\"\")","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"                : this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + this.time);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"                + timeComponent","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"                + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class represents tasks to be done by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    // The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    // To track if the task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":38}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import duke.exception.MissingTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":" * This class handles commands dealing with the user\u0027s task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"     * Performs action on tasklist based on the user\u0027s inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"     * @param command The command to perform.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lwj1711"},"content":"     * @param input The input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in user\u0027s list.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lwj1711"},"content":"     * */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lwj1711"},"content":"    public static void performCommand(String command, String input)","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lwj1711"},"content":"            throws InvalidTaskException, MissingTaskException, MissingTimeException, InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lwj1711"},"content":"        switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lwj1711"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lwj1711"},"content":"            printList();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lwj1711"},"content":"        case \"mark\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lwj1711"},"content":"            int toMark \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lwj1711"},"content":"            markTaskAsDone(toMark);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lwj1711"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lwj1711"},"content":"            int toDelete \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lwj1711"},"content":"            deleteTask(toDelete);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lwj1711"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lwj1711"},"content":"            addToDo(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lwj1711"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lwj1711"},"content":"            addDeadline(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lwj1711"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lwj1711"},"content":"            addEvent(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lwj1711"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lwj1711"},"content":"            findTask(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lwj1711"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lwj1711"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidCommandException(\"Command not found.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lwj1711"},"content":"     * Prints out every task in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lwj1711"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lwj1711"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"There are no tasks to be done! Hooray!\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lwj1711"},"content":"            System.out.println(\"Here is your list of tasks:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lwj1711"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lwj1711"},"content":"                String taskName \u003d taskList.get(i).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lwj1711"},"content":"                System.out.printf(\"%d.%s\\n\", i + 1, taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"lwj1711"},"content":"     * Marks the corresponding task as done and prints confirmation.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"lwj1711"},"content":"     * @param toMark The index of the task to be marked.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in user\u0027s list.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"lwj1711"},"content":"     * @throws IOException If there are problems with writing into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"lwj1711"},"content":"    public static void markTaskAsDone(int toMark) throws InvalidTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"lwj1711"},"content":"        if (toMark \u003c\u003d 0 || toMark \u003e taskList.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"Task is not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lwj1711"},"content":"        taskList.get(toMark - 1).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"Great job!\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"lwj1711"},"content":"                + \"The following task is marked as done:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"lwj1711"},"content":"                taskList.get(toMark - 1).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"lwj1711"},"content":"     * Deletes the corresponding task as done and prints confirmation.","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"lwj1711"},"content":"     * @param toDelete The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"lwj1711"},"content":"     * @throws InvalidTaskException If task cannot be found in list.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"lwj1711"},"content":"    public static void deleteTask(int toDelete) throws InvalidTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"lwj1711"},"content":"        if (toDelete \u003c\u003d 0 || toDelete \u003e taskList.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"lwj1711"},"content":"            throw new InvalidTaskException(\"Task is not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"Done!\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"lwj1711"},"content":"                + \"The following task has been removed:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"lwj1711"},"content":"                + \"You now have %d \"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"lwj1711"},"content":"                + (taskList.size() - 1 \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"lwj1711"},"content":"                + \" left in your list!\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"lwj1711"},"content":"                taskList.get(toDelete - 1).toString(), taskList.size() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"lwj1711"},"content":"        taskList.remove(toDelete - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"lwj1711"},"content":"     * Adds the to do entered by the user to the list and prints it.","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"lwj1711"},"content":"     * @param input The to do inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"lwj1711"},"content":"    public static void addToDo(String input) throws MissingTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"lwj1711"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"lwj1711"},"content":"        taskList.add(new ToDo(taskName));","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"lwj1711"},"content":"     * Adds the deadline entered by the user to the list and prints it.","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"lwj1711"},"content":"     * @param input The deadline inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"lwj1711"},"content":"     * @throws DateTimeParseException If date entered is of the wrong format.","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"lwj1711"},"content":"    public static void addDeadline(String input)","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException, DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 11) {","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(9, separation);","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 6).length() \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d input.substring(separation + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"lwj1711"},"content":"        int timeFullSeparation;","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"lwj1711"},"content":"        if ((timeFullSeparation \u003d timeFull.indexOf(\" \")) !\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(timeFullSeparation + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, timeFullSeparation));","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Deadline(taskName, date, time));","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull);","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Deadline(taskName, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"lwj1711"},"content":"     * Adds the event entered by the user to the list and prints it.","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"lwj1711"},"content":"     * @param input The event inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"lwj1711"},"content":"     * @throws DateTimeParseException If date entered is of the wrong format.","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"lwj1711"},"content":"    public static void addEvent(String input)","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"lwj1711"},"content":"            throws MissingTaskException, MissingTimeException, DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"lwj1711"},"content":"        int separation \u003d input.indexOf(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003d\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"lwj1711"},"content":"        if (separation \u003c 8) {","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(6, separation);","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"lwj1711"},"content":"        if (input.substring(separation + 6).length() \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTimeException(\"Time not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"lwj1711"},"content":"        String timeFull \u003d input.substring(separation + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"lwj1711"},"content":"        int timeFullSeparation;","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"lwj1711"},"content":"        if ((timeFullSeparation \u003d timeFull.indexOf(\" \")) !\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"lwj1711"},"content":"            String time \u003d timeFull.substring(timeFullSeparation + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull.substring(0, timeFullSeparation));","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Event(taskName, date, time));","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"lwj1711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"lwj1711"},"content":"            LocalDate date \u003d LocalDate.parse(timeFull);","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"lwj1711"},"content":"            taskList.add(new Event(taskName, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":222,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"lwj1711"},"content":"        printTaskAdded(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"lwj1711"},"content":"     * Prints the confirmation of the addition of the last task.","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"lwj1711"},"content":"     * @param taskName The name of the task just added.","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"lwj1711"},"content":"    public static void printTaskAdded(String taskName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"lwj1711"},"content":"        System.out.printf(\"Gotcha! The following task has been added:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"lwj1711"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"lwj1711"},"content":"                + \"You now have %d \"","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"lwj1711"},"content":"                + (taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"lwj1711"},"content":"                + \" in your list!\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"lwj1711"},"content":"                taskName, taskList.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":240,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":241,"author":{"gitId":"lwj1711"},"content":"     * Finds the tasks requested by the user and prints them.","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"lwj1711"},"content":"     * @param input The event inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":244,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTaskException If task is unspecified after command.","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"lwj1711"},"content":"     * @throws MissingTimeException If time is unspecified after command.","lastModifiedDate":"2021-08-26"},{"lineNumber":246,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"lwj1711"},"content":"    public static void findTask(String input) throws MissingTaskException {","lastModifiedDate":"2021-08-26"},{"lineNumber":248,"author":{"gitId":"lwj1711"},"content":"        ArrayList\u003cTask\u003e toPrint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":249,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":250,"author":{"gitId":"lwj1711"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2021-08-26"},{"lineNumber":251,"author":{"gitId":"lwj1711"},"content":"            throw new MissingTaskException(\"Task not found.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":252,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":253,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":254,"author":{"gitId":"lwj1711"},"content":"        String taskName \u003d input.substring(5);","lastModifiedDate":"2021-08-26"},{"lineNumber":255,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":256,"author":{"gitId":"lwj1711"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":257,"author":{"gitId":"lwj1711"},"content":"            String currentTask \u003d taskList.get(i).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":258,"author":{"gitId":"lwj1711"},"content":"            if (currentTask.indexOf(taskName) !\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":259,"author":{"gitId":"lwj1711"},"content":"                toPrint.add(taskList.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"lwj1711"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":261,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":262,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":263,"author":{"gitId":"lwj1711"},"content":"        if (toPrint.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"It seems like there are no tasks matching your search.\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":265,"author":{"gitId":"lwj1711"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":266,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":267,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":268,"author":{"gitId":"lwj1711"},"content":"        System.out.println(\"The matching \"","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"lwj1711"},"content":"                + (toPrint.size() \u003d\u003d 1 ? \"task in your list is:\" : \"tasks in your list are:\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":270,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":271,"author":{"gitId":"lwj1711"},"content":"        for (int i \u003d 0; i \u003c toPrint.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":272,"author":{"gitId":"lwj1711"},"content":"            System.out.printf(\"%d.%s\\n\", i + 1, toPrint.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":273,"author":{"gitId":"lwj1711"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":276,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":277,"author":{"gitId":"lwj1711"},"content":"     * Returns the last task added to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":278,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":279,"author":{"gitId":"lwj1711"},"content":"     * @return The array containing the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":280,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":281,"author":{"gitId":"lwj1711"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":282,"author":{"gitId":"lwj1711"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":283,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":284,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":284}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":" * This class creates to do instances which can be done any time.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"     * Constructor to create a task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"     * @param name The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"     * Returns the string representation of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"     * @return The name of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":25}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":12}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public void testInterpretCommand_normalInputs() throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"list\", parser.interpretCommand(\"list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"mark\", parser.interpretCommand(\"mark 2\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"todo\", parser.interpretCommand(\"todo fishing\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"deadline\", parser.interpretCommand(\"cake /by 2020-03-03\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"event\", parser.interpretCommand(\"homework /at 2020-03-03 5pm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"    public void testInterpretCommand_unknownCommand() throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"invalid\", parser.interpretCommand(\"aaaaaaa\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"invalid\", parser.interpretCommand(\"list 3123\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"invalid\", parser.interpretCommand(\"frogfish\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":26}},{"path":"src/test/java/duke/command/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"public class UiTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"    public void testReceiveUserCommand() throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"        Ui ui \u003d new Ui(\"Bob\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"        assertEquals(\"todo\", ui.receiveUserCommand(\"todo homework\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lwj1711":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lwj1711"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwj1711"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwj1711"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lwj1711"},"content":"event /at 2021-08-06 2pm - 4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lwj1711"},"content":"event project meeting /at 2021-08-06 2pm - 4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lwj1711"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwj1711"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwj1711"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwj1711"},"content":"deadling return book /by 2021-08-09 (Sunday)","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lwj1711"},"content":"deadline return book /by 2021-08-09 (Sunday)","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lwj1711"},"content":"event project meeting /at 2021-08-27 2-4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwj1711"},"content":"done 14","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwj1711"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"find book","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lwj1711"},"content":"ok","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lwj1711"},"content":"find","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lwj1711"},"content":"find nday","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lwj1711"},"content":"delete 34","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lwj1711"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lwj1711"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwj1711":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lwj1711"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lwj1711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"lwj1711"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lwj1711":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lwj1711"},"content":"cp ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"lwj1711"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lwj1711"},"content":"    read","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lwj1711":4,"-":29}}]
