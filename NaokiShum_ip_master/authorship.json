[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NaokiShum":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"T | 1 | read book","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"D | 0 | return book | Sep 30 2021","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"DA | 0 | borrow book | return book","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"NaokiShum":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"### Adding a task","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"Adds a task to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"### Deleting a task","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"### Marking task as done","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"Marks the specified task as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"### Listing all tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"Shows a list of tasks in the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"### Finding task by task name","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"Finds task whose names contain any of the given keywords.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"### Exiting","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"Shows a goodbye message and exits the application.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"### Todo - `todo (description)`","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"Adds a Todo task with the task name `(description)`.","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"`todo read books`","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"`Got it. I\u0027ve added this task:`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"`[T][] read book`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"`Now you have 1 tasks in the list.`","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"### Deadline - `deadline (description) /by (date)`","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"Adds a Deadline task with the task name `(description)` and `(date)`.","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"`deadline return book /by 2021-09-30`","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"`Got it. I\u0027ve added this task:`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"`[D][] return book(by:Sep 30 2021)`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"`Now you have 2 tasks in the list.`","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"### Event - `event (description) /at (period)`","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"Adds an Event task with the task name `(description)` and `(period)`.","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"`event team meeting /at Aug 6th 2-4pm`","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"`Got it. I\u0027ve added this task:`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"`[E][] team meeting(at:Aug 6th 2-4pm)`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"`Now you have 3 tasks in the list.`","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"### DoAfter - `doafter (description) /after (afterWhen)` ","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"NaokiShum"},"content":"Adds a DoAftertask with the task name `(description)` and `(afterWhen)`.","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"NaokiShum"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"NaokiShum"},"content":"`doafter borrow book /after return book`","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"NaokiShum"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"NaokiShum"},"content":"`Got it. I\u0027ve added this task:`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"NaokiShum"},"content":"`[DA][] return book(DoAfter:return book)`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"NaokiShum"},"content":"`Now you have 4 tasks in the list.`","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"NaokiShum"},"content":"### List - `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"NaokiShum"},"content":"All the tasks in the list will be shown.","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"NaokiShum"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"NaokiShum"},"content":"`list`","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"NaokiShum"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"NaokiShum"},"content":"`1.[T][] read book`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"NaokiShum"},"content":"`2.[D][] return book(by:Sep 30 2021)`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"NaokiShum"},"content":"`3.[E][] team meeting(at:Aug 6th 2-4pm)`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"NaokiShum"},"content":"`4.[DA][] return book(DoAfter:return book)`","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":104,"author":{"gitId":"NaokiShum"},"content":"### Done - `done (task number)`","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"NaokiShum"},"content":"Task with the specified `(task number)` will be marked as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"NaokiShum"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"NaokiShum"},"content":"`done 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"NaokiShum"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"NaokiShum"},"content":"`Nice! I\u0027ve marked this task as done:`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"NaokiShum"},"content":"`[T][X] read book`","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"NaokiShum"},"content":"### Delete - `delete (task number)`","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"NaokiShum"},"content":"Task with the specified `(task number)` will be deleted.","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"NaokiShum"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"NaokiShum"},"content":"`delete 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"NaokiShum"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"NaokiShum"},"content":"`Noted. I\u0027ve removed this task:`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"NaokiShum"},"content":"`[T][X] read book`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"NaokiShum"},"content":"`Now you have 3 tasks in the list.`","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"NaokiShum"},"content":"### Find - `find (keyword)`","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"NaokiShum"},"content":"Finds task whose names contain the given `(keywords)`.","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"NaokiShum"},"content":"`find book`","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"NaokiShum"},"content":"`Here are the matching tasks in your list:`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"NaokiShum"},"content":"`[D][] return book(by:Sep 30 2021)`\u003cbr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"NaokiShum"},"content":"`[DA][] return book(DoAfter:return book)`","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"NaokiShum"},"content":"### Exit - `bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"NaokiShum"},"content":"Shows a goodbye message and exits the application.","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"NaokiShum"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"NaokiShum"},"content":"`bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"NaokiShum"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"NaokiShum"},"content":"`Bye. Hope to see you again soon!`","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"NaokiShum":127,"-":28}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":" * Command class will execute the different commands input from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"public class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"    private String input;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    Command(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"     * executes different commands from user and save tasks into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in TaskList object containing the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     * @param ui takes in Ui object containing the list of message to user","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"     * @param save Storage object to store the TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    public String execute(TaskList tasks, Ui ui, Storage save) {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"            Scanner sc \u003d new Scanner(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"            String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"            String command \u003d Parser.parseCommand(sc.next());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"            switch(command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"                return ui.showBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"            case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"                String list \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"                int listNum \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"                    list +\u003d listNum + \".\" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"                    listNum++;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"                assert listNum \u003d\u003d tasks.size()","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"                        : \"listNum and tasks size should be the same\";","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"                return ui.list(list);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"            case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"                int doneNum \u003d sc.nextInt() - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"                assert doneNum \u003c tasks.size() \u0026\u0026 doneNum \u003e -1","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"                        : \"Task number should be in range\";","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"                tasks.get(doneNum).markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"                return ui.done(tasks.get(doneNum));","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"                String todoDescription \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"                Task todo \u003d new Todo(todoDescription);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"                if (todoDescription.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"                    throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"                tasks.add(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"                save.writeToFile(filePath, tasks);","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"                return ui.todo(tasks, todo);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"                int delNum \u003d sc.nextInt() - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"                assert delNum \u003c tasks.size() \u0026\u0026 delNum \u003e -1","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"                        : \"Task number should be in range\";","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"                Task delete \u003d tasks.get(delNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"                tasks.remove(delNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"                save.writeToFile(filePath, tasks);","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"                return ui.delete(tasks, delete);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"                String[] deadlineArr \u003d sc.nextLine().split(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"                if (deadlineArr[0].strip().isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"                    throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"                LocalDate d1 \u003d LocalDate.parse(deadlineArr[1].trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"                Task deadline \u003d new Deadline(deadlineArr[0].trim(),","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"                        d1.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")));","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"                tasks.add(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"NaokiShum"},"content":"                save.writeToFile(filePath, tasks);","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"NaokiShum"},"content":"                return ui.deadline(tasks, deadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"NaokiShum"},"content":"            case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"NaokiShum"},"content":"                String[] eventArr \u003d sc.nextLine().split(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"NaokiShum"},"content":"                if (eventArr[0].strip().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"NaokiShum"},"content":"                    throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"NaokiShum"},"content":"                Task event \u003d new Event(eventArr[0].trim(), eventArr[1].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"NaokiShum"},"content":"                tasks.add(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"NaokiShum"},"content":"                save.writeToFile(filePath, tasks);","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"NaokiShum"},"content":"                return ui.event(tasks, event);","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"NaokiShum"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"NaokiShum"},"content":"                String keyword \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"NaokiShum"},"content":"                String findList \u003d \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"NaokiShum"},"content":"                if (keyword.strip().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"NaokiShum"},"content":"                    throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"NaokiShum"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"NaokiShum"},"content":"                    if (tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"NaokiShum"},"content":"                        findList +\u003d tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"NaokiShum"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"NaokiShum"},"content":"                return ui.find(findList);","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"NaokiShum"},"content":"            case \"doafter\":","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"NaokiShum"},"content":"                String[] afterArr \u003d sc.nextLine().split(\"/after\");","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"NaokiShum"},"content":"                if (afterArr[0].strip().isEmpty()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"NaokiShum"},"content":"                    throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"NaokiShum"},"content":"                Task doAfter \u003d new DoAfter(afterArr[0].trim(), afterArr[1].trim());","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"NaokiShum"},"content":"                tasks.add(doAfter);","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"NaokiShum"},"content":"                save.writeToFile(filePath, tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"NaokiShum"},"content":"                return ui.after(tasks, doAfter);","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"NaokiShum"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"NaokiShum"},"content":"                return ui.defaultError();","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"NaokiShum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"NaokiShum"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"NaokiShum"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"NaokiShum"},"content":"            return ui.showDeadlineError();","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"NaokiShum"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"NaokiShum"},"content":"            return ui.showNoSuchTaskError();","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NaokiShum":118}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Deadline class that extends from Task class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     * Creates a Deadline object","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String describing the task description","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     * @param by takes in a String representing the deadline of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     * gets task deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"        return this.by;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":35}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"     * creates a DialogBox object","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"     * @param text takes in a String representing the text","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"     * @param img takes in an img representing the image","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"NaokiShum":68}},{"path":"src/main/java/duke/DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * DoAfter class that extends from Task class","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class DoAfter extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    protected String after;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     * Creates a DoAfter object","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String describing the task description","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     * @param after takes in a String representing the task to do after","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    public DoAfter(String description, String after) {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"        this.after \u003d after;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     * gets task to do after","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing task to do after","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"    public String getAfter() {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"        return after;","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"        return \"[DA]\" + super.toString() + \"(DoAfter:\" + after + \")\";","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"NaokiShum":34}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     * creates a Duke object","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath takes a String representing the directory","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"            tasks \u003d new TaskList(storage.readFile(filePath));","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"     * Gets a String representing the response","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     * @param input a String representing user command","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"     * @return a String handling user command","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"        Command c \u003d new Command(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"        String s \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"        return s;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NaokiShum":35,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * DukeException class that extends from Exception class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"     * creates a DukeException object","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * @param msg takes in a String representing the exception","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"        super(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Event class that extends from Task class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    protected String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * creates an Event object","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String describing the task description","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * @param at takes in a String representing the time of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * gets event timing","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"     * @return getter method to get event time","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"        return this.at;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":33}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"NaokiShum":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"NaokiShum":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.util.Timer;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"     * initialise dialog","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"                DialogBox.getDukeDialog(ui.showWelcome(), dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user input","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"     * after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"        if (Parser.parseCommand(input).equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"            Timer timer \u003d new Timer();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"            TimerTask task \u003d new TimerTask() {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"                public void run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"                    System.exit(0);","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"            };","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"            timer.schedule(task, 500);","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"NaokiShum":74}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Parser class to make sense of user\u0027s input","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"     * Converts the letters to lowercase to accept commands with uppercase letters","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * @param command takes in a String representing user\u0027s command","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     * @return a String with only lower case letters representing user\u0027s command","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"    public static String parseCommand(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"        return command.toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":17}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":" * Storage class to handle saving and loading tasks from a file","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    private File file;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    private String filePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"     * creates a Storage object","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath a String representing the directory of the file","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"    Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"                file \u003d new File(\"data\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"                file.mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"                file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"     * saves tasks into a file","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath a String representing the directory of the file","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"     * @param list list of tasks that will be written into the file","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"    public void writeToFile(String filePath, TaskList list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"            String text \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"                Task t \u003d list.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"                text +\u003d textToAdd(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"            fw.write(text);","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"            fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"     * loads tasks from a file","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath a String representing the directory of the file","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"     * @return return a TaskList object containing the list of tasks that was in the file","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"    public ArrayList\u003cTask\u003e readFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"            String taskType \u003d s.next();","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"            switch(taskType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"            case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"                String[] todoArr \u003d s.nextLine().trim().split(\"\\\\|\");","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"                Task todo \u003d new Todo(todoArr[2].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"NaokiShum"},"content":"                if (Integer.parseInt(todoArr[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"NaokiShum"},"content":"                    todo.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"NaokiShum"},"content":"                list.add(todo);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"NaokiShum"},"content":"            case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"NaokiShum"},"content":"                String[] deadlineArr \u003d s.nextLine().trim().split(\"\\\\|\");","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"NaokiShum"},"content":"                Task deadline \u003d new Deadline(deadlineArr[2].trim(), deadlineArr[3].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"NaokiShum"},"content":"                if (Integer.parseInt(deadlineArr[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"NaokiShum"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"NaokiShum"},"content":"                list.add(deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"NaokiShum"},"content":"            case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"NaokiShum"},"content":"                String[] eventArr \u003d s.nextLine().trim().split(\"\\\\|\");","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"NaokiShum"},"content":"                Task event \u003d new Event(eventArr[2].trim(), eventArr[3].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"NaokiShum"},"content":"                if (Integer.parseInt(eventArr[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"NaokiShum"},"content":"                    event.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"NaokiShum"},"content":"                list.add(event);","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"NaokiShum"},"content":"            case \"DA\":","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"NaokiShum"},"content":"                String[] doAfterArr \u003d s.nextLine().trim().split(\"\\\\|\");","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"NaokiShum"},"content":"                Task doAfter \u003d new DoAfter(doAfterArr[2].trim(), doAfterArr[3].trim());","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"NaokiShum"},"content":"                if (Integer.parseInt(doAfterArr[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"NaokiShum"},"content":"                    doAfter.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"NaokiShum"},"content":"                list.add(doAfter);","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"NaokiShum"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"NaokiShum"},"content":"        return list;","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"NaokiShum"},"content":"     * returns text to add in save file","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a task to be added into save file","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing text to be added","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"NaokiShum"},"content":"    private static String textToAdd(Task t) {","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"NaokiShum"},"content":"        String mes \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"NaokiShum"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"NaokiShum"},"content":"            mes +\u003d \"T\" + statusIcon(t) + t.description + \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"NaokiShum"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"NaokiShum"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"NaokiShum"},"content":"            mes +\u003d \"D\" + statusIcon(t) + t.description + \" | \" + d.getBy() + \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"NaokiShum"},"content":"        if (t instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"NaokiShum"},"content":"            Event e \u003d (Event) t;","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"NaokiShum"},"content":"            mes +\u003d \"E\" + statusIcon(t) + t.description + \" | \" + e.getAt() + \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"NaokiShum"},"content":"        if (t instanceof DoAfter) {","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"NaokiShum"},"content":"            DoAfter da \u003d (DoAfter) t;","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"NaokiShum"},"content":"            mes +\u003d \"DA\" + statusIcon(t) + t.description + \" | \" + da.getAfter() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"NaokiShum"},"content":"        return mes;","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"NaokiShum"},"content":"     * gets status icon for task","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a task to check its status","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the status","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"NaokiShum"},"content":"    private static String statusIcon(Task t) {","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"NaokiShum"},"content":"        if (t.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"NaokiShum"},"content":"            return \" | 1 | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"NaokiShum"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"NaokiShum"},"content":"            return \" | 0 | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"NaokiShum":151}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Task class representing things to do","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     * Creates a Task object","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String describing the task description","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * gets status of whether a Task is done","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the status","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     * gets description of Task","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing Task","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"     * marks a task as done","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":49}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":" * TaskList class that contains a list of Task and","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":" * methods to modify them","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * Creates a TaskList object","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     * Creates a TaskList object","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     * @param list takes in a list of Task","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"    TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"     * Adds a task to the list","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a Task to be added","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"        list.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"     * Gets the task in the specific index","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"     * @param getNum takes in a int representing the index","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"     * @return a Task at the specific index","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"    public Task get(int getNum) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"        return list.get(getNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"     * Gets the size of the list","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"     * @return a int representing the list size","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"        return list.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"     * Removes a task at the specific index from the list","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"     * @param delNum takes in a int representing the index","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"    public void remove(int delNum) {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"        list.remove(delNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NaokiShum":65}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Todo class that extends from Task class","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"     * Creates a Todo object","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String representing the task","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":20}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Ui class provides methods for user interaction","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    private static final String line \u003d \"_______________________________________________________\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * Shows a welcome text","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing welcome text","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"        return line + \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\" + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"     * Shows a farewell text","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing farewell text","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    public String showBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Bye. Hope to see you again soon!\\n\" + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027list\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     * @param list a String representing the list","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the list with lines","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"    public String list(String list) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"        return line + list + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027done\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a task that user marked as done","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the done task","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"    public String done(Task t) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Nice! I\u0027ve marked this task as done:\\n\" + t + \"\\n\" + line;","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027delete\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"     * @param delete takes in a Task representing the deleted task","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the deleted task","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"    public String delete(TaskList tasks, Task delete) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Noted. I\u0027ve removed this task:\\n\" + delete","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"     * Shows error message when index is out of bound","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the error message","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"    public String showNoSuchTaskError() {","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"        return \"\\n\" + line","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nOOPS!!! No such task.\\n\" + line;","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027todo\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"     * @param todo takes in a Task that user added as todo","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the todo Task","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"NaokiShum"},"content":"    public String todo(TaskList tasks, Task todo) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Got it. I\u0027ve added this task:\\n\" + todo","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027deadline\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"NaokiShum"},"content":"     * @param deadline takes in a Task that user added as deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the deadline task","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"NaokiShum"},"content":"    public String deadline(TaskList tasks, Task deadline) {","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Got it. I\u0027ve added this task:\\n\" + deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"NaokiShum"},"content":"     * Shows an error message for \u0027deadline\u0027 command if date is not in yyyy-mm-dd format","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the error message","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"NaokiShum"},"content":"    public String showDeadlineError() {","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"NaokiShum"},"content":"        return \"\\n\" + line","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nOOPS!!! The date must be in the format YYYY-MM-DD\\n\" + line;","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027event\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"NaokiShum"},"content":"     * @param event takes in a Task that user added as event","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the event task","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"NaokiShum"},"content":"    public String event(TaskList tasks, Task event) {","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Got it. I\u0027ve added this task:\\n\" + event","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027after\u0027 command","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"NaokiShum"},"content":"     * @param doAfter takes in a Task that user added as DoAfter","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the DoAfter task","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"NaokiShum"},"content":"    public String after(TaskList tasks, Task doAfter) {","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Got it. I\u0027ve added this task:\\n\" + doAfter","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line;","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"NaokiShum"},"content":"     * Shows a respone when user uses the \u0027find\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"NaokiShum"},"content":"     * @param findList takes in a String representing the results of find","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the task found by find","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"NaokiShum"},"content":"    public String find(String findList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"NaokiShum"},"content":"        return line + \"Here are the matching tasks in your list:\" + findList + line;","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"NaokiShum"},"content":"     * Shows an error message when description of task is empty","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the error message","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"NaokiShum"},"content":"    public String emptyDescriptionError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"NaokiShum"},"content":"        return \"\\n\" + line + \"\\nOOPS!!! The description cannot be empty.\\n\" + line;","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"NaokiShum"},"content":"     * Shows an error message when user command is invalid","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the error message","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"NaokiShum"},"content":"    public String defaultError() {","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"NaokiShum"},"content":"        return \"\\n\" + line","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"NaokiShum"},"content":"                + \"\\nOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(.\\n\" + line;","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NaokiShum":156}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"NaokiShum":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"NaokiShum":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    public void Test1(){","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"        String test \u003d \"BYE\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(\"bye\", Parser.parseCommand(test));","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    public void Test2(){","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        String test \u003d \"LiSt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(\"list\", Parser.parseCommand(test));","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    public void Test1(){","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"        Task todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"        Task deadline \u003d new Deadline(\"return book\",\" 2020-08-12\");","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(2,tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        tasks.remove(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(1,tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(todo,tasks.get(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"list","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"NaokiShum":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NaokiShum":1,"-":21}}]
