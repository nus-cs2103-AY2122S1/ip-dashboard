[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"D | 1 | return book | Jun 12 2020","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"NaokiShum":2}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":" * Command class will execute the different commands input from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"public class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * executes different commands from user and save tasks into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in TaskList object containing the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"     * @param ui takes in Ui object containing the list of message to user","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"     * @param save Storage object to store the TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    public void execute(TaskList tasks, Ui ui, Storage save) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"        ui.Start();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"        boolean hasExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        while (!hasExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"            String command \u003d Parser.parseCommand(sc.next());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"            switch(command){","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"                ui.Bye();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"                hasExit \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"            case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"                String list \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"                int listNum \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"                    list +\u003d listNum + \".\" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"                    listNum++;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"                ui.list(list);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"            case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"                int doneNum \u003d sc.nextInt() - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"                    tasks.get(doneNum).markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"                    ui.Done(tasks.get(doneNum));","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"                    ui.showDoneError();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"                    String todoDescription \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"                    Task todo \u003d new Todo(todoDescription);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"                    if(todoDescription.isEmpty()){","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"                        throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"                    tasks.add(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"                    ui.todo(tasks,todo);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"                int delNum \u003d sc.nextInt()-1;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"                    Task delete \u003d tasks.get(delNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"                    tasks.remove(delNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"                    ui.Delete(tasks,delete);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"                } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"                    ui.showDeleteError();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"NaokiShum"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"NaokiShum"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"NaokiShum"},"content":"                    String[] deadlineArr \u003d sc.nextLine().split(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"NaokiShum"},"content":"                    if(deadlineArr[0].strip().isEmpty()){","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"NaokiShum"},"content":"                        throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"NaokiShum"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"NaokiShum"},"content":"                    LocalDate d1 \u003d LocalDate.parse(deadlineArr[1].trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"NaokiShum"},"content":"                    Task deadline \u003d new Deadline(deadlineArr[0].trim(),","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"NaokiShum"},"content":"                            d1.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")));","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"NaokiShum"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"NaokiShum"},"content":"                    ui.deadline(tasks,deadline);","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"NaokiShum"},"content":"                } catch (DateTimeParseException e){","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"NaokiShum"},"content":"                    ui.showDeadlineError();","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"NaokiShum"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"NaokiShum"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"NaokiShum"},"content":"            case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"NaokiShum"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"NaokiShum"},"content":"                    String[] eventArr \u003d sc.nextLine().split(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"NaokiShum"},"content":"                    if(eventArr[0].strip().isEmpty()){","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"NaokiShum"},"content":"                        throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"NaokiShum"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"NaokiShum"},"content":"                    Task event \u003d new Event(eventArr[0].trim(),eventArr[1].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"NaokiShum"},"content":"                    tasks.add(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"NaokiShum"},"content":"                    ui.event(tasks,event);","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"NaokiShum"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"NaokiShum"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"NaokiShum"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"NaokiShum"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"NaokiShum"},"content":"                    String keyword \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"NaokiShum"},"content":"                    String findList \u003d \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"NaokiShum"},"content":"                    if(keyword.strip().isEmpty()){","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"NaokiShum"},"content":"                        throw new DukeException(ui.emptyDescriptionError());","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"NaokiShum"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"NaokiShum"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"NaokiShum"},"content":"                        if (tasks.get(i).getDescription().contains(keyword)){","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"NaokiShum"},"content":"                            findList +\u003d tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"NaokiShum"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"NaokiShum"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"NaokiShum"},"content":"                    ui.find(findList);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"NaokiShum"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"NaokiShum"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"NaokiShum"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"NaokiShum"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"NaokiShum"},"content":"                ui.defaultError();","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"NaokiShum"},"content":"            save.writeToFile(filePath,tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NaokiShum":132}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Deadline class that extends from Task class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String describing the task description","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * @param by takes in a String representing the deadline of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    public Deadline(String description,String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * gets task deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"    public String getBy(){","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"        return this.by;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\" ;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":" * Duke class to start running the application","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"     * Creates a Duke object","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath takes in a String representing the directory of the file","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    public Duke(String filePath){","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"            tasks \u003d new TaskList(storage.readFile(filePath));","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     * runs the program","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"    public void run(){","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"        Command c \u003d new Command();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"        c.execute(tasks,ui,storage);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NaokiShum":37,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * DukeException class that extends from Exception class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"     * creates a DukeException object","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"     * @param msg takes in a String representing the exception","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"    public DukeException(String msg){","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"        super(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":14}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Event class that extends from Task class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    protected String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * creates an Event object","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String describing the task description","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     * @param at takes in a String representing the time of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     * gets event timing","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * @return getter method to get event time","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    public String getAt(){","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        return this.at;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\" ;","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Parser class to make sense of user\u0027s input","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"     * Converts the letters to lowercase to accept commands with uppercase letters","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"     * @param command takes in a String representing user\u0027s command","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * @return a String with only lower case letters representing user\u0027s command","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    public static String parseCommand(String command){","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"        return command.toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":16}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":" * Storage class to handle saving and loading tasks from a file","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    File file;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"     * creates a Storage object","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath a String representing the directory of the file","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"    Storage(String filePath){","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"                file \u003d new File(\"data\");","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"                file.mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"                file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"            } catch (IOException e){","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"     * saves tasks into a file","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath a String representing the directory of the file","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"     * @param list list of tasks that will be written into the file","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"    public void writeToFile(String filePath, TaskList list){","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"            String text \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++){","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"                Task t \u003d list.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"                text +\u003d textToAdd(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"            fw.write(text);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"            fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"     * loads tasks from a file","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"     * @param filePath a String representing the directory of the file","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"     * @return return a TaskList object containing the list of tasks that was in the file","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"    public ArrayList\u003cTask\u003e readFile(String filePath) throws FileNotFoundException{","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"            String taskType \u003d s.next();","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"            switch(taskType){","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"            case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"                String[] todoArr \u003d s.nextLine().trim().split(\"\\\\|\");","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"                Task todo \u003d new Todo(todoArr[2].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"                if (Integer.parseInt(todoArr[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"                    todo.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"NaokiShum"},"content":"                list.add(todo);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"NaokiShum"},"content":"            case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"NaokiShum"},"content":"                String[] deadlineArr \u003d s.nextLine().trim().split(\"\\\\|\");","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"NaokiShum"},"content":"                Task deadline \u003d new Deadline(deadlineArr[2].trim(),deadlineArr[3].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"NaokiShum"},"content":"                if (Integer.parseInt(deadlineArr[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"NaokiShum"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"NaokiShum"},"content":"                list.add(deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"NaokiShum"},"content":"            case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"NaokiShum"},"content":"                String[] eventArr \u003d s.nextLine().trim().split(\"\\\\|\");","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"NaokiShum"},"content":"                Task event \u003d new Event(eventArr[2].trim(),eventArr[3].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"NaokiShum"},"content":"                if (Integer.parseInt(eventArr[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"NaokiShum"},"content":"                    event.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"NaokiShum"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"NaokiShum"},"content":"                list.add(event);","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"NaokiShum"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"NaokiShum"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"NaokiShum"},"content":"        return list;","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"NaokiShum"},"content":"     * returns text to add in save file","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a task to be added into save file","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing text to be added","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"NaokiShum"},"content":"    private static String textToAdd(Task t) {","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"NaokiShum"},"content":"        String mes \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"NaokiShum"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"NaokiShum"},"content":"            mes +\u003d \"T\" + statusIcon(t) + t.description +\"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"NaokiShum"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"NaokiShum"},"content":"            Deadline d \u003d (Deadline)t;","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"NaokiShum"},"content":"            mes +\u003d \"D\" + statusIcon(t) + t.description + \" | \" + d.getBy() + \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"NaokiShum"},"content":"        if (t instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"NaokiShum"},"content":"            Event e \u003d (Event)t;","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"NaokiShum"},"content":"            mes +\u003d \"E\" + statusIcon(t) + t.description + \" | \" + e.getAt() + \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"NaokiShum"},"content":"        return mes;","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"NaokiShum"},"content":"     * gets status icon for task","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a task to check its status","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the status","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"NaokiShum"},"content":"    private static String statusIcon(Task t){","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"NaokiShum"},"content":"        if (t.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"NaokiShum"},"content":"            return \" | 1 | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"NaokiShum"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"NaokiShum"},"content":"            return \" | 0 | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"NaokiShum"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"NaokiShum":131}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Task class representing things to do","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     * Creates a Task object","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String describing the task description","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     * gets status of whether a Task is done","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing the status","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"     * gets description of Task","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"     * @return a String representing Task","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"     * marks a task as done","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"    public String toString(){","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description ;","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":" * TaskList class that contains a list of Task and","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":" * methods to modify them","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"     * Creates a TaskList object","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    TaskList(){","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"     * Creates a TaskList object","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"     * @param list takes in a list of Task","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    TaskList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"     * Adds a task to the list","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a Task to be added","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"    public void add(Task t){","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"        list.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"     * Gets the task in the specific index","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"     * @param getNum takes in a int representing the index","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"     * @return a Task at the specific index","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"    public Task get(int getNum){","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"        return list.get(getNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"     * Gets the size of the list","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"     * @return a int representing the list size","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"    public int size(){","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"        return list.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"     * Removes a task at the specific index from the list","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"     * @param delNum takes in a int representing the index","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"    public void remove(int delNum){","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"        list.remove(delNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NaokiShum":60}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Todo class that extends from Task class","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"     * Creates a Todo object","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"     * @param description takes in a String representing the task","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"    public Todo(String description){","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"NaokiShum":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":" * Ui class provides methods for user interaction","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"     * Shows a welcome text","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    public void Start(){","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\" + line);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"     * Shows a farewell text","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    public void Bye(){","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \"Bye. Hope to see you again soon!\\n\" + line);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027list\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"     * @param list","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"    public void list(String list){","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + list + line);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027done\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"     * @param t takes in a task that user marked as done","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"    public void Done(Task t){","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \"Nice! I\u0027ve marked this task as done:\\n\" + t);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027delete\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"     * @param delete takes in a Task representing the deleted task","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"    public void Delete(TaskList tasks, Task delete){","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \"Noted. I\u0027ve removed this task:\\n\" + delete +","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"     * Shows error message for \u0027done\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"     * when index is out of bound","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"    public void showDoneError(){","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(\"\\n\" + line +","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"NaokiShum"},"content":"                \"\\n☹ OOPS!!! No such task to be done.\\n\" + line);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"NaokiShum"},"content":"     * Shows error message for \u0027delete\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"NaokiShum"},"content":"     * when index is out of bound","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"NaokiShum"},"content":"    public void showDeleteError(){","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(\"\\n\" + line +","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NaokiShum"},"content":"                \"\\n☹ OOPS!!! No such task to be deleted.\\n\" + line);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027todo\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"NaokiShum"},"content":"     * @param todo takes in a Task that user added as todo","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"NaokiShum"},"content":"    public void todo(TaskList tasks,Task todo){","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \"Got it. I\u0027ve added this task:\\n\" + todo +","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"NaokiShum"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027deadline\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"NaokiShum"},"content":"     * @param deadline takes in a Task that user added as deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"NaokiShum"},"content":"    public void deadline(TaskList tasks,Task deadline){","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \"Got it. I\u0027ve added this task:\\n\" + deadline +","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"NaokiShum"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"NaokiShum"},"content":"     * Shows an error message for \u0027deadline\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"NaokiShum"},"content":"     * if date is not in yyyy-mm-dd format","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"NaokiShum"},"content":"    public void showDeadlineError(){","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(\"\\n\" + line +","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"NaokiShum"},"content":"                \"\\n☹ OOPS!!! The time must be in the format YYYY-MM-DD\\n\" + line);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"NaokiShum"},"content":"     * Shows a response when user uses the \u0027event\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"NaokiShum"},"content":"     * @param tasks takes in a TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"NaokiShum"},"content":"     * @param event takes in a Task that user added as event","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"NaokiShum"},"content":"    public void event(TaskList tasks,Task event){","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \"Got it. I\u0027ve added this task:\\n\" + event +","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"NaokiShum"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"NaokiShum"},"content":"     * Shows a respone when user uses the \u0027find\u0027 command","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"NaokiShum"},"content":"     * @param findList takes in a String representing the results of find","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"NaokiShum"},"content":"    public void find(String findList){","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(line + \"Here are the matching tasks in your list:\" + findList + line);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"NaokiShum"},"content":"     * Shows an error message when description of task is empty","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"NaokiShum"},"content":"     * @return","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"NaokiShum"},"content":"    public String emptyDescriptionError(){","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"NaokiShum"},"content":"        return \"\\n\" + line + \"\\n☹ OOPS!!! The description cannot be empty.\\n\" + line;","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"NaokiShum"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"NaokiShum"},"content":"     * Shows an error message when user command is invalid","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"NaokiShum"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"NaokiShum"},"content":"    public void defaultError(){","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"NaokiShum"},"content":"        System.out.println(\"\\n\" + line +","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"NaokiShum"},"content":"                \"\\n☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(.\\n\" + line);","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NaokiShum":129}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":11}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    public void Test1(){","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"        String test \u003d \"BYE\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(\"bye\", Parser.parseCommand(test));","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":13}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"    public void Test1(){","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"        Task todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"        Task deadline \u003d new Deadline(\"return book\",\" 2020-08-12\");","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(2,tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"        tasks.remove(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(1,tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"        assertEquals(todo,tasks.get(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"NaokiShum":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"list","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"NaokiShum":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NaokiShum":1,"-":21}}]
