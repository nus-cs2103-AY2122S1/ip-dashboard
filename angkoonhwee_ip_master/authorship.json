[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"# I would like to join this taskList. How can I help the project","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"angkoonhwee":1,"-":8}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"T|0|iP","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"E|0|birthday!|27/08/2021 0000","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"D|0|iP|26/08/2021 2359","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"E|0|sakfh|24/08/2021 0000","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"E|0|birthday!!|27/08/2021 1500","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"    private static final String PATHNAME \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Duke object","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     * @param filePath relative path to where the data was stored","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"            TaskList temp \u003d storage.readFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"            taskList \u003d temp \u003d\u003d null ? new TaskList() : new TaskList(temp);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"            ui.printFileError(e);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"     * Runs duke program - a chatbot with personality","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"    public void run() {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"        ui.printGreetings();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"        //isExit implementation is referenced from classmate Wu Xiaoyun","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"                Command c \u003d Parser.parseCommands(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"                c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"                isExit \u003d c.isExit;","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"                ui.printFileError(e);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"angkoonhwee"},"content":"     * Driver for duke","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"angkoonhwee"},"content":"     * @param args arguments that user inputs","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"angkoonhwee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"angkoonhwee"},"content":"        new Duke(PATHNAME).run();","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"angkoonhwee":56,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":" * Class for exceptions specific to Duke","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"    private String customMessage;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for duke","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"     * @param message error message that should be displayed","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"        this.customMessage \u003d message;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"     * Return an error message specifying type of Duke Error","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"     * @return error message","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"        return customMessage;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"angkoonhwee":28}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":" * Parser object that parses all the input from user to commands understood by Duke","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    private static String[] parsed;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    private static int parseTaskNo(String parse) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"        int taskNo \u003d Integer.parseInt(parse) - 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"        return taskNo;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    private static String parseTodoTask() throws IllegalArgumentException {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"        if (parsed.length \u003c 2 || parsed[1].equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"        return parsed[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"    private static String[] parseEventTask(String command) throws","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"            IllegalArgumentException,","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"            ArrayIndexOutOfBoundsException,","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"            StringIndexOutOfBoundsException {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"        String[] details \u003d new String[2];","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"        String desc \u003d command.split(\" /at \")[0].substring(6);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"        details[0] \u003d desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"        details[1] \u003d command.split(\" /at \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"        if (details[1].equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"        return details;","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"    private static String[] parseDeadlineTask(String command) throws","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"            IllegalArgumentException,","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"            ArrayIndexOutOfBoundsException,","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"angkoonhwee"},"content":"            StringIndexOutOfBoundsException {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"        String[] details \u003d new String[2];","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"angkoonhwee"},"content":"        String desc \u003d command.split(\" /by \")[0].substring(9);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"angkoonhwee"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"angkoonhwee"},"content":"        details[0] \u003d desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"angkoonhwee"},"content":"        details[1] \u003d command.split(\" /by \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"angkoonhwee"},"content":"        if (details[1].equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"angkoonhwee"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"angkoonhwee"},"content":"        return details;","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"angkoonhwee"},"content":"    private static LocalDateTime parseDate(String dateTime) throws DateTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"angkoonhwee"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"angkoonhwee"},"content":"    private static String parseKeyword(String input) throws IllegalArgumentException {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"angkoonhwee"},"content":"        String keyword \u003d input.substring(4).strip().toLowerCase();","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"angkoonhwee"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"angkoonhwee"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"angkoonhwee"},"content":"        return keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"angkoonhwee"},"content":"     * Parses input line by line","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"angkoonhwee"},"content":"     * @param input the input of the user","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"angkoonhwee"},"content":"     * @return returns a command type to be executed in duke.run()","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"angkoonhwee"},"content":"    public static Command parseCommands(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"angkoonhwee"},"content":"        parsed \u003d input.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"angkoonhwee"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"angkoonhwee"},"content":"            switch (parsed[0]) {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"angkoonhwee"},"content":"            case ByeCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"angkoonhwee"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"angkoonhwee"},"content":"            case ListCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"angkoonhwee"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"angkoonhwee"},"content":"            case DoneCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"angkoonhwee"},"content":"                return new DoneCommand(parseTaskNo(parsed[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"angkoonhwee"},"content":"            case DeleteCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"angkoonhwee"},"content":"                return new DeleteCommand(parseTaskNo(parsed[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"angkoonhwee"},"content":"            case TodoCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"angkoonhwee"},"content":"                return new TodoCommand(parseTodoTask());","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"angkoonhwee"},"content":"            case EventCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"angkoonhwee"},"content":"                String[] eventDetails \u003d parseEventTask(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"angkoonhwee"},"content":"                return new EventCommand(eventDetails[0], parseDate(eventDetails[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"angkoonhwee"},"content":"            case DeadlineCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"angkoonhwee"},"content":"                String[] deadlineDetails \u003d parseDeadlineTask(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"angkoonhwee"},"content":"                return new EventCommand(deadlineDetails[0], parseDate(deadlineDetails[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"angkoonhwee"},"content":"            case FindCommand.COMMAND:","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"angkoonhwee"},"content":"                return new FindCommand(parseKeyword(input));","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"angkoonhwee"},"content":"            default:","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"angkoonhwee"},"content":"                throw new DukeException(\"Ehhh... (￣ ￣|||) Sorry I do not understand.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"angkoonhwee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"angkoonhwee"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"angkoonhwee"},"content":"        } catch (IllegalArgumentException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"angkoonhwee"},"content":"            return new ErrorCommand(\"Don\u0027t leave it empty!!\" ,\"(・`ω´・)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"angkoonhwee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"angkoonhwee"},"content":"            return new ErrorCommand(\"You forgot the date...\", \"(-_-)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"angkoonhwee"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"angkoonhwee"},"content":"            return new ErrorCommand(","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"angkoonhwee"},"content":"                    \"Please input a valid date format of \u0027dd/mm/yyyy HHmm\u0027 in 24 Hour Format\",","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"angkoonhwee"},"content":"                    \"(`ー´)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":119}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":" * Storage class that stores all previous chat history and list in data/duke.txt","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"    private File f;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Storage","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     * @param pathname relative path to where the chat history is stored","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"    public Storage(String pathname) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"        f \u003d new File(pathname);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"     * read and parse data from previous chat history","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"     * @return List of previous stated task","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException when file cannot be read","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"    public TaskList readFile() throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"            f.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"            String[] parsed \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"            switch (parsed[0]) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"angkoonhwee"},"content":"            case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"                Todo newTodo \u003d new Todo(parsed[2], parsed[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"angkoonhwee"},"content":"                taskList.add(newTodo);","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"angkoonhwee"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"angkoonhwee"},"content":"            case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"angkoonhwee"},"content":"                LocalDateTime at \u003d LocalDateTime.parse(parsed[3], formatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"angkoonhwee"},"content":"                Event newEvent \u003d new Event(parsed[2], parsed[1], at);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"angkoonhwee"},"content":"                taskList.add(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"angkoonhwee"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"angkoonhwee"},"content":"            case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"angkoonhwee"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parsed[3], formatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"angkoonhwee"},"content":"                Deadline newDeadline \u003d new Deadline(parsed[2], parsed[1], by);","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"angkoonhwee"},"content":"                taskList.add(newDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"angkoonhwee"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"angkoonhwee"},"content":"        return taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"angkoonhwee"},"content":"     * saves the current list to the chat history file","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList updated list after commands are executed","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException when file cannot be saved","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"angkoonhwee"},"content":"    public void writeToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"angkoonhwee"},"content":"        FileWriter fw \u003d new FileWriter(f.getAbsoluteFile());","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"angkoonhwee"},"content":"        for (int i \u003d 0; i \u003c taskList.getList().size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"angkoonhwee"},"content":"            fw.write(taskList.getList().get(i).toSaveString() + System.lineSeparator());","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"angkoonhwee"},"content":"        fw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":86}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    public TaskList() {}","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList Existing list","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    public TaskList(TaskList taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"        this.tasks \u003d taskList.getList();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     * add task to list","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"     * @param task task to be added","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"     * get current list","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"     * @return current list","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"        return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"     * mark certain task as complete","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskNo the index of task to be marked as completed","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"     * @return displayed message to inform user that task has been marked as completed","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"angkoonhwee"},"content":"    public String complete(int taskNo) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"angkoonhwee"},"content":"        return tasks.get(taskNo).check();","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"angkoonhwee"},"content":"     * delete certain task","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskNo the index of task to be deleted","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"angkoonhwee"},"content":"     * @return displayed message to inform user that task has been deleted","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"angkoonhwee"},"content":"    public String delete(int taskNo) {","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"angkoonhwee"},"content":"        String temp \u003d tasks.get(taskNo).toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"angkoonhwee"},"content":"        tasks.remove(taskNo);","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"angkoonhwee"},"content":"        return temp;","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"angkoonhwee"},"content":"     * finds tasks that contains the keyword","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"angkoonhwee"},"content":"     * @param keyword keyword","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"angkoonhwee"},"content":"     * @return the collection of task that contains the keyword","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"angkoonhwee"},"content":"     * ","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"angkoonhwee"},"content":"    public ArrayList\u003cTask\u003e findKeyword(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"angkoonhwee"},"content":"        ArrayList\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"angkoonhwee"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"angkoonhwee"},"content":"            if (task.findKeyword(keyword)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"angkoonhwee"},"content":"                matched.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"angkoonhwee"},"content":"        return matched;","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"angkoonhwee":85}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":" * User Interface that user directly interacts with","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":" * e.g. displaying messages, scanning inputs","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for UI","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     * starts scanner object to read user inputs","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    public Ui() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"    private static final String END \u003d \"    ---------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"     * scan the next line","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"     * @return the user\u0027s raw input","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"    private void printBreak() {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(END);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"angkoonhwee"},"content":"     * Print welcome message when duke runs initially","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"angkoonhwee"},"content":"    public void printGreetings() {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"angkoonhwee"},"content":"     * Prints the current list formatted","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"angkoonhwee"},"content":"    public void printList(TaskList taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"angkoonhwee"},"content":"        ArrayList\u003cTask\u003e todos \u003d taskList.getList();","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"angkoonhwee"},"content":"        todos.trimToSize();","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"angkoonhwee"},"content":"        if (todos.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"angkoonhwee"},"content":"            System.out.println(INDENTATION + \" ٩(◕‿◕｡)۶ Ehe no task for now.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"angkoonhwee"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"angkoonhwee"},"content":"            for (int i \u003d 0; i \u003c todos.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"angkoonhwee"},"content":"                System.out.println(INDENTATION + (i + 1) + \": \" + todos.get(i).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"angkoonhwee"},"content":"     * prints the task added to list formatted","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"angkoonhwee"},"content":"     * @param task new task added","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskLength the new length of the list","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"angkoonhwee"},"content":"    public void printAdd(Task task, int taskLength) {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + \"added: \" + task.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(\"\\n\" + INDENTATION + \"You have \" + taskLength + \" task(s) to go! (]＞＜)]\");","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"angkoonhwee"},"content":"     * prints the goodbye message to user","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"angkoonhwee"},"content":"    public void printBye() {","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + \"Bye. Hope to see you again soon! (´｡• ω •｡`)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"angkoonhwee"},"content":"     * prints the task that has been marked as complete formatted","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"angkoonhwee"},"content":"     * @param completedTask the description field of the task that has been completed","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"angkoonhwee"},"content":"    public void printDone(String completedTask){","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + \"(´• ω •`) What a rarity! This task has been marked as done:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + completedTask);","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"angkoonhwee"},"content":"     * prints the specific task deleted by user formatted","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"angkoonhwee"},"content":"     * @param deletedTask description field of the task that has been deleted","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"angkoonhwee"},"content":"     * @param listLength current length of list after deletion","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"angkoonhwee"},"content":"    public void printDelete(String deletedTask, int listLength) {","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + \"(￢_￢) Ok... This task has been deleted:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + \"deleted: \" + deletedTask);","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(\"\\n\" + INDENTATION + \"You have \" +listLength + \" task(s) to go! (]＞＜)]\");","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"angkoonhwee"},"content":"    public void printFileCreated() {","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + \"╰(▔∀▔)╯ File created!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"angkoonhwee"},"content":"     * Print file error that has occurred during storage","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"angkoonhwee"},"content":"     * @param e the error to getMessage()","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"angkoonhwee"},"content":"    public void printFileError(IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + \"╮(￣ω￣;)╭ File Error...\" + e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"angkoonhwee"},"content":"     * print type of error formatted","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"angkoonhwee"},"content":"     * @param message error message to be understood","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"angkoonhwee"},"content":"     * @param emoticon emoticon to add expressions and character to duke","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"angkoonhwee"},"content":"    public void printError(String message, String emoticon) {","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + emoticon + \" \" + message);","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"angkoonhwee"},"content":"     * print already formatted error messages","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"angkoonhwee"},"content":"     * @param message formatted error message","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"angkoonhwee"},"content":"    public void printError(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"angkoonhwee"},"content":"        System.out.println(INDENTATION + message);","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"angkoonhwee"},"content":"    public void printFound(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"angkoonhwee"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"angkoonhwee"},"content":"            System.out.println(INDENTATION + \"(///￣ ￣///) No tasks with that keyword was found...\");","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"angkoonhwee"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"angkoonhwee"},"content":"            System.out.println(INDENTATION + \"(*¯︶¯*) Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"angkoonhwee"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"angkoonhwee"},"content":"                System.out.println(INDENTATION + (i + 1) + \": \" + foundTasks.get(i).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"angkoonhwee"},"content":"        printBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":179}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"Bye!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for ByeCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"     * will mark isExit as true so duke can escape while loop","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"     * Execute ByeCommand, prints a goodbye message from duke","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current task list","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"        ui.printBye();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":" * Abstract command class that all commands inherits from","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"     * to denote when to exit the loop","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    public boolean isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"     * Executes commands","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException for commands that needs to write to storage file","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":27}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    private String desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor of Deadline Command","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"     * @param desc the description of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"     * @param by due date","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    public DeadlineCommand(String desc, LocalDateTime by) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     * Executes Deadline Command, adds a deadline task to the list, prints response","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"     * and stores updated list in file","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException when there is file save error","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"        Deadline newDeadline \u003d new Deadline(this.desc, this.by);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"        ui.printAdd(newDeadline, taskList.getList().size());","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"delete\";","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    private int taskNo;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Delete Command","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskNo the index of task deleted","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    public DeleteCommand(int taskNo) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"          this.taskNo \u003d taskNo;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"     * Executes Delete Command to delete task, stores updated list in file","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     * and prints response","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException if writeToFile has a file error","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"        try{","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"            if (taskNo \u003d\u003d -1 || taskNo + 1 \u003e taskList.getList().size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"                throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"            String display \u003d taskList.delete(this.taskNo);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"            ui.printDelete(display, taskList.getList().size());","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"            ui.printError(\"Eh... No such task found. Cannot delete.\", \"(＃￣ω￣)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":46}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    private int taskNo;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Done Command","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskNo the index of task completed","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    public DoneCommand(int taskNo) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"     * Executes Done Command to mark task as completed, stores updated list in file","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     * and prints response","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"     * @throws ArrayIndexOutOfBoundsException","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException if writeToFile has a file error","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"            ArrayIndexOutOfBoundsException,","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"            IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"            if (taskNo \u003d\u003d -1 || taskNo + 1 \u003e taskList.getList().size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"                throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"            String display \u003d taskList.complete(this.taskNo);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"            ui.printDone(display);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"            ui.printError(","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"                    \"Eh... No such task found. Cannot mark as done.\",","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"angkoonhwee"},"content":"                    \"(＃￣ω￣)\"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"            );","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":52}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    private String error;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    private String emoticon;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Error Command","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     * @param error error message","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"    public ErrorCommand(String error) {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"        this.emoticon \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Error command","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     * @param error error message","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"     * @param emoticon emoticon to express dissatisfaction for the error committed","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"    public ErrorCommand(String error, String emoticon) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"        this.emoticon \u003d emoticon;","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"     * Executes Error Command to print error response","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"        if (this.emoticon !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"angkoonhwee"},"content":"            ui.printError(this.error, this.emoticon);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"angkoonhwee"},"content":"            ui.printError(this.error);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":51}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    private  String desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Event Command","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"     * @param desc description of task","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"     * @param at when task starts","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    public EventCommand(String desc, LocalDateTime at) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     * Executes Events Command, adds an event task to the list, prints response","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"     * and stores updated list in file","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException when there is file save error","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"        Event newEvent \u003d new Event(this.desc, this.at);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"        ui.printAdd(newEvent, taskList.getList().size());","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"find\";","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    private String keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for keyword","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     * @param keyword to search in list","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     * Executes find command and search for keyword in list and print response","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"        ui.printFound(taskList.findKeyword(this.keyword));","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"     * Executes list command and prints out the current list","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"        ui.printList(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":21}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    public static final String COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"    private String desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"     * Constructor for Todo Command","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"     * @param desc description of todo task","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    public TodoCommand(String desc) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"     * Executes Todo Command, adds a todo task to the list, prints response","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"     * and stores updated list in file","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"     * @param taskList current list","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"     * @param ui current ui to access print responses","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"     * @param storage current storage","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"     * @throws IOException when there is file save error","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"angkoonhwee"},"content":"        if (this.desc.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"angkoonhwee"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"        Todo newTodo \u003d new Todo(this.desc);","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"angkoonhwee"},"content":"        taskList.add(newTodo);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"angkoonhwee"},"content":"        ui.printAdd(newTodo, taskList.getList().size());","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":43}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"    private DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"    private DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"        super(description, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    public Deadline(String description, String isDone, LocalDateTime by) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"        super(description, isDone \u003d\u003d \"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(displayFormatter) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"    public String toSaveString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"        return \"D|\" + super.toSaveString() + \"|\" + by.format(saveFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"angkoonhwee":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"    private DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"    private DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"        super(description, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    public Event(String description, String isDone, LocalDateTime at) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"        super(description, isDone \u003d\u003d \"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(displayFormatter) + \")\" ;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"    public String toSaveString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"        return \"E|\" + super.toSaveString() + \"|\" + at.format(saveFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"angkoonhwee":30}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"    private String description;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"    public Task(String task, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"        this.description \u003d task;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"    public String check() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"        return this.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"    public String toSaveString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"        return isDone ? \"1\" : \"0\" + \"|\" + this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"angkoonhwee"},"content":"    public boolean findKeyword(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"        String processed \u003d description;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"angkoonhwee"},"content":"        return processed.toLowerCase().contains(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"angkoonhwee":34}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"    public Todo(String task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"        super(task, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"    public Todo(String task, String isDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"        super(task, isDone \u003d\u003d \"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    public String toSaveString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"        return \"T|\" + super.toSaveString();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"angkoonhwee":22}},{"path":"src/test/java/duke/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"class ByeCommandTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    public void testExecute() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"        ByeCommand byeCommand \u003d new ByeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"        isExit \u003d byeCommand.isExit;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"        assertEquals(true, isExit);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":16}},{"path":"src/test/java/duke/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"class EventsTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(\"27/08/2021 1400\", formatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"        String desc \u003d \"Birthday!!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"        Event events \u003d new Event(desc, at);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"        assertEquals(\"[E][ ] Birthday!! (at: 27 Aug 2021 1400)\", events.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"    public void testToSaveString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(\"27/08/2021 1400\", formatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"        String desc \u003d \"Birthday!!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"angkoonhwee"},"content":"        Event events \u003d new Event(desc, at);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"        assertEquals(\"E|0|Birthday!!|27/08/2021 1400\", events.toSaveString());","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":29}},{"path":"src/test/java/duke/task/TodosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"class TodosTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"        String desc \u003d \"finish iP!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"        Todo todos \u003d new Todo(desc);","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"        assertEquals(\"[T][ ] finish iP!\", todos.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"    public void testToSaveString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"        String desc \u003d \"finish iP!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"        Todo todos \u003d new Todo(desc);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"        assertEquals(\"T|0|finish iP!\", todos.toSaveString());","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"angkoonhwee":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angkoonhwee"},"content":"taskList","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"angkoonhwee"},"content":"todo finish iP","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"angkoonhwee"},"content":"todo suanlafen","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"angkoonhwee"},"content":"taskList","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"angkoonhwee"},"content":"event finish iP /at NOW","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"angkoonhwee"},"content":"deadline finish iP /by TONIGHT","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"angkoonhwee"},"content":"taskList","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"angkoonhwee"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"angkoonhwee"},"content":"taskList","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"angkoonhwee"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"angkoonhwee"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"done 10","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"angkoonhwee"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"event test iP","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"angkoonhwee"},"content":"event test iP /by","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"taskList","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"angkoonhwee"},"content":"deadline /by","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"blah blah","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"angkoonhwee"},"content":"delete 0","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"delete 10","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"angkoonhwee"},"content":"taskList","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"delete 3","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"angkoonhwee"},"content":"taskList","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"Bye!","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"angkoonhwee":25}}]
