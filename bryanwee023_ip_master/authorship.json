[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"plugins {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    id \"com.github.johnrengelman.shadow\" version \"7.0.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"repositories {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"test{","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"dependencies {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.1\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"application {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    configFile file(\u0027config/checkstyle/checkstyle.xml\u0027)","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    toolVersion \u003d \u00278.45\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bryanwee023":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"The Duke is a CLI-based chat-bot that helps users track their day-to-day tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"![](Ui.png?raw\u003dtrue)","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"### Easy Task Management","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"Add and delete your tasks with single line commands. ","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"Duke will help you remember saved tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"Tag your tasks to time or deadline, or mark them as complete/incomplete.","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"Why bother remembering all these nitty-gritty details?","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"### Flexible Task Retrieval","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"Quickly list all your tasks with a single command. You can even:","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"- Sort your tasks by time or completion status.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"- Search for specific tasks with keyword search ","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"## Usage of Commands","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"### `todo`/`event`/`deadline` - Add tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"Add different types of task into your list of saved tasks. ","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"1. Add a generic task with `todo [description]`:","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"todo my homework","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"2. Add a task with a time of occurrence with `event [description] /on [date]`:","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"event CS2103 Finals /at 12/11/2021","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"**Note:** Date must be formatted as _DD/MM/YYYY_","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"3. Add a task with due date with `deadline [description] /by [date]`:","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"deadline CS2103 iP submission /by 20/09/2021","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"**Note:** Date must be formatted as _DD/MM/YYYY_","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"### `list`/`find` - List out saved tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"Use `list` to list all saved tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"Alternatively, use the flags:","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"1. `list -name` to list tasks in alphabetical order.","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"2. `list -time` to list tasks in chronological order.","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"3. `list -done` to list incomplete tasks first.","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"Use the command `find [keyword]` to search for tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"![](search-example.png?raw\u003dtrue)","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"### `done` - Check off tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"Use `done [id]` to mark tasks as complete.","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"e.g. To complete task #2:","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"done 2","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"### `delete` - Delete tasks ","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"Use `delete [id]` to delete tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"e.g. To delte task #3:","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"delete 3","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"### `bye` - Exit the program","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"Use `bye` to exit and close the program. All tasks will be saved so don\u0027t worry!","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"bryanwee023":63,"-":16}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"@rem","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"@rem","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"@rem","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"@rem","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"@rem","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"@rem","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"@rem","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"echo.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"echo.","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"goto fail","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"echo.","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"echo.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"goto fail","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":":execute","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":":end","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":":fail","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"exit /b 1","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":":mainEnd","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":":omega","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bryanwee023":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bryanwee023":1}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    private StackPane chatBubble;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        dialog.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        //Reverse order of components","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        //Set alignment to top left / left","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"     * Returns DialogBox belonging to the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"     * @param text user\u0027s message","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"     * @param img user\u0027s profile picture","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"     * @return user\u0027s dialog box","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        db.chatBubble.getStyleClass().add(\"userBubble\");","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        db.dialog.setTextFill(Color.WHITE);","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        db.dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        db.dialog.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"     * Returns DialogBox belonging to the Duke.","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"     * @param text Duke\u0027s message","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"     * @param img Duke\u0027s profile picture","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"     * @return Duke\u0027s dialog box","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        db.chatBubble.getStyleClass().add(\"dukeBubble\");","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        db.dialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        db.dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bryanwee023":93}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" * Main class which runs Duke\u0027s main loop.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    private static TaskBank taskBank \u003d new TaskBank(\"data/duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private static Hashtable\u003cString, Consumer\u003cString\u003e\u003e commandTable \u003d initCommandTable();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private static Hashtable\u003cString, Consumer\u003cString\u003e\u003e initCommandTable() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        Hashtable\u003cString, Consumer\u003cString\u003e\u003e table \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"list\", (x) -\u003e Ui.printTasks(taskBank.getTasks(x)));","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"event\", (x) -\u003e taskBank.addTask(x, Event::create));","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"deadline\", (x) -\u003e taskBank.addTask(x, Deadline::create));","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"todo\", (x) -\u003e taskBank.addTask(x, ToDo::create));","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"done\", (x) -\u003e taskBank.markTask(x));","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"delete\", (x) -\u003e taskBank.deleteTask(x));","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"find\", (x) -\u003e Ui.printTasks(taskBank.searchTasks(x)));","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        table.put(\"bye\", (x) -\u003e System.exit(0));","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        return table;","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    private static void parseInput(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        if (!commandTable.containsKey(keyword)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"            Ui.print(\"I cannot understand you\");","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"            commandTable.get(keyword).accept(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"            Ui.print(e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     * Duke\u0027s main loop.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * @param args Command line arguments","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        //Command table should be initialised at this point","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        assert(commandTable.keySet().size() \u003e 0);","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        Ui.setInputHandler(Duke::parseInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        Application.launch(Ui.class);","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bryanwee023":59,"-":3}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private static final Image USER_IMG \u003d getImage(\"/images/shrek.png\");","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private static final Image DUKE_IMG \u003d getImage(\"/images/lord-farquaad.png\");","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    private Consumer\u003cString\u003e inputHandler;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    private static Image getImage(String fileName) {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        InputStream inputStream \u003d MainWindow.class.getResourceAsStream(fileName);","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assert(inputStream !\u003d null);","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        return new Image(inputStream);","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"     * Initialise the JavaFX window.","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        userInput.setPromptText(\"Type your message here...\");","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     * Set the callback to handle input.","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     * @param handler input handler callback","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    public void setInputHandler(Consumer\u003cString\u003e handler) {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        this.inputHandler \u003d handler;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"     * Get Duke to send a given text.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"     * @param text Given text","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"    public void print(String text) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        this.dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"                DialogBox.getDukeDialog(text, DUKE_IMG)","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        if (userText.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"                DialogBox.getUserDialog(userText, USER_IMG)","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        inputHandler.accept(userText);","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bryanwee023":83}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" * Manages the reading and writing of files onto the disk.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private final File dataFile;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"     * Initialises a new Storage with the given file location to save.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * If file does not exist, one will be created.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"     * @param filepath path to a .txt file","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        dataFile \u003d new File(filepath);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        //Create data file if missing","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"                Files.createDirectory(Path.of(\"data\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"                Files.createFile(Path.of(filepath));","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"                System.out.println(\"WARNING: Cannot create save file\");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     * Retrieves the list of tasks saved from onto the disk.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     * Returns an empty list if error is encountered.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"     * @return list of tasks retrieved from disk","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    public ArrayList\u003cTask\u003e readFromDisk() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        // Return empty list if file is empty","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        if (dataFile.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        // Else, deserialize data","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"            FileInputStream fileStream \u003d new FileInputStream(dataFile);","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(fileStream);","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"            return (ArrayList\u003cTask\u003e) (inputStream.readObject());","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task list\u0027s save file missing.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task List not properly retrieved.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Missing Class ArrayList\u003cTask\u003e.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"     * Writes a given list of tasks onto the disk.","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"     * @param taskList list of tasks to be written onto the disk","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    public void writeToDisk(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"            FileOutputStream fileStream \u003d new FileOutputStream(dataFile);","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"            ObjectOutputStream outputStream \u003d new ObjectOutputStream(fileStream);","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"            outputStream.writeObject(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"            outputStream.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task list\u0027s save file missing.\\n\" + e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task List not properly saved.\\n\" + e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":93}},{"path":"src/main/java/duke/TaskBank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import duke.util.Utility;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import duke.util.sort.DoneSorter;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import duke.util.sort.NameSorter;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import duke.util.sort.TimeSorter;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" * Stores and manages the user\u0027s list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"public class TaskBank {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"     * Initialise a new TaskBank given a storage path.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     * @param filepath path to storage file","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    public TaskBank(String filepath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        this.taskList \u003d storage.readFromDisk();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * Add a task to the list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     * Throws a Duke Exception if format is erroneous","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"     * @param formattedString task to add represented as a formatted string","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"     * @param create function to map the formatted string into a task","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    //TODO: change function parameter to enum","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public void addTask(String formattedString, Function\u003cString, ? extends Task\u003e create) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        Task e \u003d create.apply(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        this.taskList.add(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        Ui.print(String.format(\"Accepted, I\u0027ve added the following task\\n%s\", e));","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        this.storage.writeToDisk(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"     * Throws a Duke Exception if given id is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     * @param input task to mark represented as a formatted string (done [id])","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    public void markTask(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"            taskId \u003d Utility.getIdFromString(input, \"done \");","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"            Task t \u003d this.taskList.get(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"            t.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"            Ui.print(\"Approved, I\u0027ve marked this duke.task as done\\n\" + t);","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"            Ui.print(String.format(\"Nonsense, Task.Task #%d doesn\u0027t exist\\n\", taskId));","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        this.storage.writeToDisk(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"     * Deletes a task in the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"     * Throws a Duke Exception if given id is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"     * @param input task to delete represented as a formatted string (delete [id])","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"            taskId \u003d Utility.getIdFromString(input, \"delete \");","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"            Task t \u003d this.taskList.get(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"            this.taskList.remove(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"            Ui.print(\"Approved, I\u0027ve removed this duke.task\\n\" + t);","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(String.format(\"Nonsense, Task.Task #%d doesn\u0027t exist\\n\", taskId));","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"        this.storage.writeToDisk(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"     * Searches for tasks that contain the given substring.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"     * @param query substring to search","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"     * @return list of matching tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    public ArrayList\u003cTask\u003e searchTasks(String query) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        query \u003d query.split(\" \", 2)[1].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        for (Task t : this.taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"            if (t.getDescription().contains(query)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"        return matchingTasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"    private ArrayList\u003cTask\u003e sortTasks(Comparator\u003cTask\u003e cmp) {","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"        ArrayList\u003cTask\u003e taskListCopy \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"        taskListCopy.sort(cmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"        return taskListCopy;","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"     * Returns a copy of the list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"     * If a sort order is specified, sort the copy before returning.","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"     * @param input input string","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"    public ArrayList\u003cTask\u003e getTasks(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"        String[] inputWords \u003d input.split(\" \");","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"bryanwee023"},"content":"            return new ArrayList\u003c\u003e(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"        } else if (inputWords[1].equals(\"-name\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"            return sortTasks(new TimeSorter());","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"        } else if (inputWords[1].equals(\"-time\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"            return sortTasks(new NameSorter());","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"        } else if (inputWords[1].equals(\"-done\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"            return sortTasks(new DoneSorter());","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I don\u0027t understand how you want me to list the tasks\");","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":135}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collection;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" * Handles Duke\u0027s User Interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"public class Ui extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private static Consumer\u003cString\u003e inputHandler;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private static MainWindow mainWindow;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Get Duke to send a welcome message.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    private static void welcomeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        print(\"Greetings, my subject.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"     * Get Duke to send a given String.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * @param text String to send","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public static void print(String text) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        mainWindow.print(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"     * Get Duke to send a given collection of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"     * @param tasks given collection of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    public static void printTasks(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"            listString.append(String.format(\"%d. %s\\n\", i + 1, t));","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"            i++;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        Ui.print(listString.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public static void setInputHandler(Consumer\u003cString\u003e handler) {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        inputHandler \u003d handler;","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"            //There should only be a single instance of mainWindow","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"            assert(mainWindow \u003d\u003d null);","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"            mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"            mainWindow.setInputHandler(inputHandler);","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":82}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import duke.util.Utility;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":" * A Task with a given finishing date.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"     * Initialises a Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"     * @param description description of Deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     * @param by date of Deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        int byIndex \u003d formattedString.indexOf(\"/by \");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"            byIndex \u003d formattedString.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the deadline keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        } else if (formattedString.length() \u003c\u003d 9","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"                || formattedString.substring(9, byIndex).isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"            //Checks for characters between \"deadline \" and \"/by\"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of deadline cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        } else if (byIndex \u003d\u003d formattedString.length()","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"                || formattedString.length() \u003c byIndex + 5) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"            //Checks for characters after \"/by\"","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the [/by] time of deadline cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     * Creates a Deadline given a Deadline represented as a formatted string.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     * Format: deadline [description] /by [DD/MM/YYYY]","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     * @param formattedString Deadline represented as a formatted string.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * @return Created Deadline","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     * @throws DukeException given string fails to meet format requirements","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    public static Deadline create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        int byIndex \u003d formattedString.indexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        LocalDate time;","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"            time \u003d LocalDate.parse(","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"                formattedString.substring(byIndex + 4),","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"                Utility.DATE_SHORT_FORMATTER);","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"are you following the correct date format (DD/MM/YYYY)?\");","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        return new Deadline(formattedString.substring(9, byIndex).trim(), time);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        return by;","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d isDone ? \u0027\\u2713\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        String timeString \u003d Utility.DATE_MED_FORMATTER.format(this.by);","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] Deadline: %s (by: %s)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"                statusIcon, this.description, timeString);","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d deadline.isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 by.equals(deadline.by)","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(deadline.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":102}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import duke.util.Utility;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":" * Task with a time of occurrence.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    private LocalDate on;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"     * Initialises an Event.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"     * @param description description of Event","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"     * @param on date of Event","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    public Event(String description, LocalDate on) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        this.on \u003d on;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        int onIndex \u003d formattedString.indexOf(\"/on \");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        if (onIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"            onIndex \u003d formattedString.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.startsWith(\"event\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the event keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        } else if (formattedString.length() \u003c\u003d 6","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"                || formattedString.substring(6, onIndex).isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            //Checks for characters between \"Event \" and \"/on\"","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of event cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        } else if (onIndex \u003d\u003d formattedString.length()","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"                || formattedString.length() \u003c onIndex + 5) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"            //Checks for characters after \"/on\"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the [/on] time of event cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"     * Creates an Event given a Event represented as a formatted string.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"     * Format: event [description] /on [DD/MM/YYYY]","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     * @param formattedString Event represented as a formatted string.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     * @return Created Event","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     * @throws DukeException given string fails to meet format requirements","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    public static Event create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        int onIndex \u003d formattedString.indexOf(\"/on \");","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        LocalDate time;","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"            time \u003d LocalDate.parse(","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"                formattedString.substring(onIndex + 4),","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"                Utility.DATE_SHORT_FORMATTER);","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"are you following the correct date format (DD/MM/YYYY)?\");","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        return new Event(formattedString.substring(6, onIndex).trim(), time);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        return on;","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d isDone ? \u0027\\u2713\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        String timeString \u003d Utility.DATE_MED_FORMATTER.format(this.on);","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] Event: %s (on: %s)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"                statusIcon, this.description, timeString);","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d event.isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 on.equals(event.on)","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(event.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":100}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * A serializable item that contains a description and a boolean isDone.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"     * Initialises a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        return this.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"     * Get date of task. If task has no date associated to it, return the maximum value.","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"     * @return Date of task","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        return LocalDate.MAX;","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public Boolean isDone() {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        return isDone;","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d isDone ? \u0027\\u2713\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] %s\", statusIcon, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d ((Task) o).isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(task.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":66}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":" * Task without a time tagged to it.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"     * Initialises a ToDo.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"     * @param description description of ToDo","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.equals(\"todo\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the todo keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        } else if (formattedString.length() \u003c\u003d 5 || formattedString.substring(5).isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            //Checks for characters after \"todo \"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of todo cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"     * Creates a ToDo given a ToDo represented as a formatted string.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"     * Format: todo [description]","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     * @param formattedString ToDo represented as a formatted string.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"     * @return Created ToDo","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"     * @throws DukeException given string fails to meet format requirements","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    public static ToDo create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        return new ToDo(formattedString.substring(5).trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d isDone ? \u0027\\u2713\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] ToDo: %s\", statusIcon, this.description);","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        ToDo toDo \u003d (ToDo) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d ((ToDo) o).isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(toDo.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":64}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":" * Exception specific to Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"Nonsense, %s\", this.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":16}},{"path":"src/main/java/duke/util/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * Contains various utility methods used by Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"public class Utility {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    public static final DateTimeFormatter DATE_SHORT_FORMATTER","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"            \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    public static final DateTimeFormatter DATE_MED_FORMATTER","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"            \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG);","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"     * Extracts an integer from an input string, specifically,the integer after the prefix.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"     * e.g. Extracts 2 from \"done 2\"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     * @param input input string","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     * @param prefix prefix string","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"     * @return extracted integer","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"     * @throws DukeException extracted substring is not a valid integer","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    //TODO: refactor to not include prefix","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public static int getIdFromString(String input, String prefix) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        String idString \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"            if (!input.startsWith(prefix) || input.length() \u003c\u003d prefix.length()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"                throw new DukeException(\"you did not specify a duke.task id\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"            idString \u003d input.substring(prefix.length());","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"            return Integer.parseInt(idString);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"            String msg \u003d String.format(\"\\\"%s\\\" is not a valid integer\", idString);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":41}},{"path":"src/main/java/duke/util/sort/DoneSorter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.util.sort;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class DoneSorter implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        return t1.isDone().compareTo(t2.isDone());","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"bryanwee023":14}},{"path":"src/main/java/duke/util/sort/NameSorter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.util.sort;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class NameSorter implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        return t1.getDescription().compareTo(t2.getDescription());","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"bryanwee023":14}},{"path":"src/main/java/duke/util/sort/TimeSorter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.util.sort;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class TimeSorter implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        return t1.getDate().compareTo(t2.getDate());","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"bryanwee023":14}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" styleClass\u003d\"DialogBox\" stylesheets\u003d\"@DialogBox.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        \u003cStackPane fx:id\u003d\"chatBubble\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bryanwee023":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@MainWindow.css\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"        \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"disableFocus\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"340.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"        \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"disableFocus\" layoutX\u003d\"340.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"60.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" styleClass\u003d\"disableFocus\" hbarPolicy\u003d\"NEVER\" layoutY\u003d\"70\" hvalue\u003d\"1.0\" prefHeight\u003d\"490.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"490.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        \u003cHBox fx:id\u003d\"header\" styleClass\u003d\"disableFocus\" prefHeight\u003d\"70.0\" prefWidth\u003d\"400.0\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"            \u003cImageView fx:id\u003d\"title\" fitHeight\u003d\"40\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bryanwee023":25}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    public void readWriteTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        tasks.add(new Task(\"task a\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        tasks.add(new Task(\"task b\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        tasks.add(new Task(\"task c\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        storage.writeToDisk(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(tasks, storage.readFromDisk());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bryanwee023":25}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public void createEventTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new Event(\"test event\", LocalDate.of(2020, 1, 1)),","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"                Event.create(\"event test event /on 01/01/2020\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        Exception exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e Event.create(\"event test event\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the [/on] time of event cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e Event.create(\"event\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the description of event cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e Event.create(\"test event\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"I can\u0027t seem to find the event keyword\",","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    public void createDeadlineTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new Deadline(\"test deadline\", LocalDate.of(2020, 1, 1)),","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"                Deadline.create(\"deadline test deadline /by 01/01/2020\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        Exception exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e Deadline.create(\"deadline test deadline\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the [/by] time of deadline cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e Deadline.create(\"deadline /by 20/20/1000\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the description of deadline cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e Deadline.create(\"test event\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"I can\u0027t seem to find the deadline keyword\",","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public void createToDoTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new ToDo(\"test todo\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"                ToDo.create(\"todo test todo\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        Exception exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e ToDo.create(\"todo\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the description of todo cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"                DukeException.class, () -\u003e ToDo.create(\"test todo\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"I can\u0027t seem to find the todo keyword\",","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bryanwee023":73}}]
