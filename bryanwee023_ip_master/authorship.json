[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    private String by;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"        int byIndex \u003d formattedString.indexOf(\"/by \");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"        if (byIndex \u003d\u003d -1)","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"            byIndex \u003d formattedString.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.startsWith(\"deadline\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the deadline keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        else if (formattedString.length() \u003c\u003d 9 || formattedString.substring(9, byIndex).isEmpty())","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of deadline cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        else if (byIndex \u003d\u003d formattedString.length() || formattedString.length() \u003c byIndex + 5)","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the [/by] time of deadline cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    //Format: \"Deadline: [description] /by [on]","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    public static Deadline create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        int onIndex \u003d formattedString.indexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        return new Deadline(formattedString.substring(9, onIndex),","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"                formattedString.substring(onIndex + 4));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] Deadline: %s(by: %s)\", statusIcon, this.description, this.by);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"        String sectionBreak \u003d \"------------------------------------------\";","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(\"\\nHello buddy! I am\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(sectionBreak);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        Scanner sc\u003dnew Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"        Hashtable\u003cString, Consumer\u003cString\u003e\u003e commandTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        commandTable.put(\"list\", (x) -\u003e printTaskList());","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        commandTable.put(\"event\", (x) -\u003e AddTask(x, Event::create));","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        commandTable.put(\"deadline\", (x) -\u003e AddTask(x, Deadline::create));","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        commandTable.put(\"todo\", (x) -\u003e AddTask(x, ToDo::create));","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        commandTable.put(\"done\", Duke::MarkTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        commandTable.put(\"delete\", Duke::DeleteTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        while (true) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            if (input.equals(\"bye\")) break;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"            String keyword \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"                if (commandTable.containsKey(keyword))","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"                    commandTable.get(keyword).accept(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"                else","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"                    throw new DukeException(\"I\u0027m not sure what you mean\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"                System.out.println(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(sectionBreak);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(sectionBreak);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    private static void AddTask(String formattedString, Function\u003cString, ? extends Task\u003e create) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        Task e \u003d create.apply(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        taskList.add(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        System.out.printf(\"added: %s\\n\", e);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"    private static void printTaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, taskList.get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    private static int getId(String input, String prefix) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        String idString \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"            if (!input.startsWith(prefix) || input.length() \u003c\u003d prefix.length())","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"                throw new DukeException(\"you did not specify a task id\");","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"            idString \u003d input.substring(prefix.length());","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"            return Integer.parseInt(idString);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"            String msg \u003d String.format(\"\\\"%s\\\" is not a valid integer\", idString);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"    private static void MarkTask(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"            taskId \u003d getId(input, \"done \");","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"            Task t \u003d taskList.get(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"            t.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"Cool, I\u0027ve marked this task as done\\n\" + t);","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"            System.out.printf(\"Oops, Task #%d doesn\u0027t exist\\n\", taskId);","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"    private static void DeleteTask(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"            taskId \u003d getId(input, \"delete \");","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"            Task t \u003d taskList.get(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"            taskList.remove(taskId);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"Okay, I\u0027ve removed this task\\n\" + t);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"            System.out.printf(\"Oops, Task #%d doesn\u0027t exist\\n\", taskId);","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bryanwee023":97,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"Oops, %s :(\", this.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    private String on;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    public Event(String description, String on) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"        this.on \u003d on;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        int onIndex \u003d formattedString.indexOf(\"/on \");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"        if (onIndex \u003d\u003d -1)","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"            onIndex \u003d formattedString.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.startsWith(\"event\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the event keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        else if (formattedString.length() \u003c\u003d 6 || formattedString.substring(6, onIndex).isEmpty())","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of event cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        else if (onIndex \u003d\u003d formattedString.length() || formattedString.length() \u003c onIndex + 5)","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the [/on] time of event cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    //Format: \"Event: [description] /by [on]","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public static Event create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        int onIndex \u003d formattedString.indexOf(\"/on \");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        return new Event(formattedString.substring(6, onIndex),","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"                formattedString.substring(onIndex + 4));","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] Event: %s(on: %s)\", statusIcon, this.description, this.on);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":39}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] %s\", statusIcon, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":19}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.equals(\"todo\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the todo keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"        else if (formattedString.length() \u003c\u003d 5 || formattedString.substring(5).isEmpty())","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of todo cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public static ToDo create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        return new ToDo(formattedString.substring(5));","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] ToDo: %s\", statusIcon, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"event dinner /on 27th March","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"deadline homework /by 30th April","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"todo visit the gym","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"done 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"done 2","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"delete 2","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"event lunch","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"event lunch /on","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"event","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"deadline project","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"deadline project /by","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"todo","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"done","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"done a","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"done 4","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"delete","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"delete 3.14","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"delete 8","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"bye","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanwee023":1,"-":37}}]
