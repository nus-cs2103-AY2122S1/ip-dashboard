[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    private static TaskBank taskBank \u003d new TaskBank(\"data/duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    private static Hashtable\u003cString, Consumer\u003cString\u003e\u003e initCommandTable() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        Hashtable\u003cString, Consumer\u003cString\u003e\u003e ret \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        ret.put(\"list\", (x) -\u003e UI.printTasks(taskBank.getTasks()));","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        ret.put(\"event\", (x) -\u003e taskBank.addTask(x, Event::create));","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        ret.put(\"deadline\", (x) -\u003e taskBank.addTask(x, Deadline::create));","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        ret.put(\"todo\", (x) -\u003e taskBank.addTask(x, ToDo::create));","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        ret.put(\"done\", (x) -\u003e taskBank.markTask(x));","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        ret.put(\"delete\", (x) -\u003e taskBank.deleteTask(x));","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        return ret;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        UI.welcomeMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        UI.printDivider();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        Scanner sc\u003dnew Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        Hashtable\u003cString, Consumer\u003cString\u003e\u003e commandTable \u003d initCommandTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        while (true) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"            if (input.equals(\"bye\")) break;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"            String keyword \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"            if (!commandTable.containsKey(keyword)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"                UI.print(\"Oops, I\u0027m not sure what you mean :o\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"                continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"                commandTable.get(keyword).accept(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"                UI.print(e.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"            UI.printDivider();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        UI.goodbyeMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bryanwee023":56,"-":4}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    private final File DATA_FILE;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        DATA_FILE \u003d new File(filepath);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        //Create data file if missing","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        if (!DATA_FILE.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"                Files.createDirectory(Path.of(\"data\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"                Files.createFile(Path.of(filepath));","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"                System.out.println(\"WARNING: Cannot create save file\");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    public ArrayList\u003cTask\u003e readFromDisk() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        // Return empty list if file is empty","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        if (DATA_FILE.length() \u003d\u003d 0)","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        // Else, deserialize data","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"            FileInputStream f \u003d new FileInputStream(DATA_FILE);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"            ObjectInputStream i \u003d new ObjectInputStream(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"            return (ArrayList\u003cTask\u003e) (i.readObject());","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task.Task list\u0027s save file missing.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task.Task List not properly retrieved.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Missing Class ArrayList\u003cTask.Task\u003e.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    public void writeToDisk(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"            FileOutputStream f \u003d new FileOutputStream(DATA_FILE);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"            ObjectOutputStream o \u003d new ObjectOutputStream(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"            o.writeObject(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"            o.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task.Task list\u0027s save file missing.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"            System.out.println(\"WARNING: Task.Task List not properly saved.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":69}},{"path":"src/main/java/duke/TaskBank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import duke.util.Utility;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"public class TaskBank {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public TaskBank(String filepath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        this.storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        this.taskList \u003d storage.readFromDisk();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    public void addTask(String formattedString, Function\u003cString, ? extends Task\u003e create) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        Task e \u003d create.apply(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        this.taskList.add(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        UI.print(String.format(\"added: %s\", e));","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        this.storage.writeToDisk(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    public void  markTask(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"            taskId \u003d Utility.getIdFromString(input, \"done \");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"            Task t \u003d this.taskList.get(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"            t.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"            UI.print(\"Cool, I\u0027ve marked this duke.task as done\\n\" + t);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"            UI.print(String.format(\"Oops, Task.Task #%d doesn\u0027t exist\\n\", taskId));","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        this.storage.writeToDisk(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"            taskId \u003d Utility.getIdFromString(input, \"delete \");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"            Task t \u003d this.taskList.get(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"            this.taskList.remove(taskId - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"            UI.print(\"Okay, I\u0027ve removed this duke.task\\n\" + t);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(String.format(\"Oops, Task.Task #%d doesn\u0027t exist\\n\", taskId));","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        this.storage.writeToDisk(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return new ArrayList\u003c\u003e(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":56}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collection;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class UI {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    private static final String DIVIDER \u003d \"------------------------------------------\";","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"                                     + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"                                     + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"                                     + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"                                     + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(\"\\nHello buddy! I am\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public static void goodbyeMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public static void printDivider() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public static void print(String text) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        System.out.println(text);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public static void printTasks(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, t);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            i++;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":41}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    private static final DateTimeFormatter DATE_SHORT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    private static final DateTimeFormatter DATE_MED_FORMATTER \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        int byIndex \u003d formattedString.indexOf(\"/by \");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        if (byIndex \u003d\u003d -1)","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            byIndex \u003d formattedString.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.startsWith(\"deadline\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the deadline keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        else if (formattedString.length() \u003c\u003d 9 || formattedString.substring(9, byIndex).isEmpty())","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of deadline cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        else if (byIndex \u003d\u003d formattedString.length() || formattedString.length() \u003c byIndex + 5)","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the [/by] time of deadline cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    //Format: \"duke.task.Deadline: [description] /by [on]","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    public static Deadline create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        int byIndex \u003d formattedString.indexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        LocalDate time \u003d LocalDate.parse(","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"                formattedString.substring(byIndex + 4),","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"                DATE_SHORT_FORMATTER);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        return new Deadline(formattedString.substring(9, byIndex).trim(), time);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        String timeString \u003d DATE_MED_FORMATTER.format(this.by);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] duke.task.Deadline: %s (by: %s)\", statusIcon, this.description, timeString);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o)","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof Deadline))","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d deadline.isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 by.equals(deadline.by)","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(deadline.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    private static final DateTimeFormatter DATE_SHORT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    private static final DateTimeFormatter DATE_MED_FORMATTER \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    private LocalDate on;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public Event(String description, LocalDate on) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        this.on \u003d on;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        int onIndex \u003d formattedString.indexOf(\"/on \");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        if (onIndex \u003d\u003d -1)","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            onIndex \u003d formattedString.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.startsWith(\"event\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the event keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        else if (formattedString.length() \u003c\u003d 6 || formattedString.substring(6, onIndex).isEmpty())","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of event cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        else if (onIndex \u003d\u003d formattedString.length() || formattedString.length() \u003c onIndex + 5)","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the [/on] time of event cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    //Format: \"Task.Event: [description] /by [on]","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    public static Event create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        int onIndex \u003d formattedString.indexOf(\"/on \");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        LocalDate time \u003d LocalDate.parse(","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"                formattedString.substring(onIndex + 4),","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"                DATE_SHORT_FORMATTER);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        return new Event(formattedString.substring(6, onIndex).trim(), time);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        String timeString \u003d DATE_MED_FORMATTER.format(this.on);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] Task.Event: %s (on: %s)\", statusIcon, this.description, timeString);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o)","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof Event))","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d event.isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 on.equals(event.on)","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(event.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] %s\", statusIcon, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o)","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof Task))","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d ((Task) o).isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(task.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":35}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    private static void checkFormat(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"        String keyword \u003d formattedString.split(\" \", 2)[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"        if (!keyword.equals(\"todo\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"I can\u0027t seem to find the todo keyword\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        else if (formattedString.length() \u003c\u003d 5 || formattedString.substring(5).isEmpty())","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(\"the description of todo cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    public static ToDo create(String formattedString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        checkFormat(formattedString);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        return new ToDo(formattedString.substring(5).trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"[%c] Task.ToDo: %s\", statusIcon, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        if (this \u003d\u003d o)","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        if (!(o instanceof ToDo))","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        ToDo toDo \u003d (ToDo) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        return isDone \u003d\u003d ((ToDo) o).isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 description.equals(toDo.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":42}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        return String.format(\"Oops, %s :(\", this.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":13}},{"path":"src/main/java/duke/util/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"public class Utility {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"    public static int getIdFromString(String input, String prefix) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"        String idString \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"            if (!input.startsWith(prefix) || input.length() \u003c\u003d prefix.length())","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"                throw new DukeException(\"you did not specify a duke.task id\");","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"            idString \u003d input.substring(prefix.length());","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"            return Integer.parseInt(idString);","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"            String msg \u003d String.format(\"\\\"%s\\\" is not a valid integer\", idString);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"            throw new DukeException(msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"event dinner /on 27th March","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"deadline homework /by 30th April","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"todo visit the gym","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"done 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"done 2","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"delete 2","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"event lunch","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"event lunch /on","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"event","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"deadline project","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"deadline project /by","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"todo","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"done","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"done a","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"done 4","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"delete","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"delete 3.14","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"delete 8","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"bye","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"bryanwee023":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanwee023":1,"-":37}},{"path":"text-ui-test/unit-tests/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    public void readWriteTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        tasks.add(new Task(\"task a\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        tasks.add(new Task(\"task b\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        tasks.add(new Task(\"task c\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        storage.writeToDisk(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(tasks, storage.readFromDisk());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bryanwee023":25}},{"path":"text-ui-test/unit-tests/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public void createEventTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new Event(\"test event\", LocalDate.of(2020, 1, 1))","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"                , Event.create(\"event test event /on 01/01/2020\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        Exception exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"                () -\u003e Event.create(\"event test event\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the [/on] time of event cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"                () -\u003e Event.create(\"event\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the description of event cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"                () -\u003e Event.create(\"test event\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"I can\u0027t seem to find the event keyword\",","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    public void createDeadlineTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new Deadline(\"test deadline\", LocalDate.of(2020, 1, 1)),","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"                Deadline.create(\"deadline test deadline /by 01/01/2020\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        Exception exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"                () -\u003e Deadline.create(\"deadline test deadline\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the [/by] time of deadline cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"                () -\u003e Deadline.create(\"deadline /by 20/20/1000\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the description of deadline cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"            () -\u003e Deadline.create(\"test event\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"I can\u0027t seem to find the deadline keyword\",","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public void createToDoTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new ToDo(\"test todo\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"                ToDo.create(\"todo test todo\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        Exception exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"                () -\u003e ToDo.create(\"todo\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"the description of todo cannot be empty\",","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"                () -\u003e ToDo.create(\"test todo\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(\"I can\u0027t seem to find the todo keyword\",","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"                exception.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bryanwee023":75}}]
