[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sebbycake":17,"-":45}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"ret\u003d0","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    fi","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"done","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"exit $ret","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sebbycake":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"awk \u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"    BEGIN {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"        ret \u003d 1","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"    END {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"        exit ret","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"\u0027","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sebbycake":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"awk \u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    BEGIN {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"            ret \u003d 1","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    END {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"        exit ret","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"\u0027","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sebbycake":26}},{"path":"config/travis/deploy_github_pages.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"# Pushes files generated by Asciidoctor and associated files to gh-pages branch for commits to master branch.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"set -o errexit # exit with nonzero exit code if any line fails","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"if [ -z \"$GITHUB_TOKEN\" ]; then","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"  echo \u0027GITHUB_TOKEN is not set up in Travis. Skipping deploy.\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"  exit 0","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"fi;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"set -o nounset # exit if variable is unset","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"cd build/docs/html5","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"git init","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"git config user.name \u0027Deployment Bot (Travis)\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"git config user.email \u0027deploy@travis-ci.org\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"git config credential.helper \u0027store --file\u003d.git/credentials\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"echo \"https://${GITHUB_TOKEN}:@github.com\" \u003e .git/credentials","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"git remote add upstream \"https://github.com/${TRAVIS_REPO_SLUG}.git\"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"# Reset to gh-pages branch, or create orphan branch if gh-pages does not exist in remote.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"if git ls-remote --exit-code --heads upstream gh-pages; then","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    git fetch --depth\u003d1 upstream gh-pages","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    git reset upstream/gh-pages","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"elif [ $? -eq 2 ]; then # exit code of git ls-remote is 2 if branch does not exist","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    git checkout --orphan gh-pages","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"else # error occurred","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"    exit $?","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"fi","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"# Exit if there are no changes to gh-pages files.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"if changes\u003d$(git status --porcelain) \u0026\u0026 [ -z \"$changes\" ]; then","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"    echo \u0027No changes to GitHub Pages files; exiting.\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"    exit 0","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"fi","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"git add -A .","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"git commit -m \"Rebuild pages at ${TRAVIS_COMMIT}\"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"git push --quiet upstream HEAD:gh-pages","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sebbycake":42}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    fi","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"done","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"exit $ret","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sebbycake":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"# Sync-Me Sebby","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"A task management application.","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"## About The Project","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"This project enables students to manage their everyday tasks more effectively through the use of a command line system. ","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"From any arbitrary todo, deadline to event items, Sync-Me Sebby has it all settled for you. All you have to do is enter","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"a simple command and your task will be managed and stored easily.","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"### Built With","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"* [Java](https://www.java.com/en/) - Back-end programming language to handle logic","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"* [JavaFX](https://openjfx.io/) - GUI builder","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"## Getting Started","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"### Prerequisites","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"* [Java 11](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html)","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"### Installation","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"Download `duke.jar` file under __Releases__.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"### Add Todo","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"Add todo items.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"### Add Deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"Add deadline items with an end date.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"### Add Event","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"Add event items with an end date and a duration.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"### Delete Task","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"Delete any task item.","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"### Complete Task","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"Mark task as done once completed.","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"### Find Task","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"Search for any task based on a keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"### Storage of all tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"List of tasks will be saved in `data/duke.txt` for your reference.","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"## Usage","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"Run the application:","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"sebbycake"},"content":"java -jar duke.jar","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"sebbycake"},"content":"## Examples","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"Add todo task: `todo do homework`","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"sebbycake"},"content":"Add deadline task: `deadline submit essay /by 2021-09-09`","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"sebbycake"},"content":"Complete task: `done 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"sebbycake"},"content":"Delete task: `delete 1`","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"sebbycake":58,"-":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":" * Duke class which is the main entry point to run the application.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"     * @param filePath File path of .txt file which stores all the tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"     * @throws IOException IOException","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"            Command cmd \u003d Parser.parse(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"            return cmd.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"            return error.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sebbycake":36,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"    {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"            duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    private final String LOGO_DIR \u003d \"/images/fruits.png\";","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    private final String MAIN_WINDOW_DIR \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    private final String CSS_DIR \u003d \"/css/index.css\";","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    private final String GUI_TITLE \u003d \"Sync-Me Sebby\";","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"    private Image logo \u003d new Image(this.getClass().getResourceAsStream(LOGO_DIR));","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(MAIN_WINDOW_DIR));","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"            stage.setTitle(GUI_TITLE);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"            stage.getIcons().add(logo);","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"            scene.getStylesheets().add(getClass().getResource(CSS_DIR).toExternalForm());","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":54}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"import duke.exception.DateNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"import duke.exception.DescriptionNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"import duke.exception.QueryNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"import duke.exception.TimeNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":" * Parser class that encapsulates handling of user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"     * Handles user input from scanner.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"     * @param userInput The commands that user entered in console.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"     * @return Command The action item to be executed by Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        String command \u003d getCommand(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"        switch (command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"            return new AddCommand(","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"                    getDescription(userInput, \"todo\", \"ignore\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"                    \"todo\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"            return new AddCommand(","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"                    getDescription(userInput, \"deadline \", \"/by \"),","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"                    getDate(userInput, \"/by \"),","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"                    \"deadline\"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"            );","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"            return new AddCommand(","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"                    getDescription(userInput, \"event \", \"/at \"),","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"                    getDate(userInput, \"/at \"),","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"                    getTime(userInput),","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"                    \"event\"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"            );","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"        case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"            return new FindCommand(getSearchQuery(userInput));","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"            return new DoneCommand(getTaskNumber(userInput));","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"            return new DeleteCommand(getTaskNumber(userInput));","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"            return new InvalidCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"sebbycake"},"content":"    private static String getCommand(String userInput) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"sebbycake"},"content":"        return userInput.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"    private static String getDescription(String userInput, String splitText, String splitTime)","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"            throws DescriptionNotFoundException {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"sebbycake"},"content":"            String[] splitInput \u003d userInput.split(splitText)[1].split(splitTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"sebbycake"},"content":"            return splitInput[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"sebbycake"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"sebbycake"},"content":"            throw new DescriptionNotFoundException();","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"sebbycake"},"content":"    private static String getDate(String userInput, String splitTime) throws DateNotFoundException {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"sebbycake"},"content":"            String[] splitInput \u003d userInput.split(splitTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"sebbycake"},"content":"            String date \u003d splitInput[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"sebbycake"},"content":"            if (date.split(\" \").length \u003e 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"sebbycake"},"content":"                return date.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"sebbycake"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"sebbycake"},"content":"            return date;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"sebbycake"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"sebbycake"},"content":"            throw new DateNotFoundException();","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"sebbycake"},"content":"    private static String getTime(String userInput) throws TimeNotFoundException {","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"sebbycake"},"content":"            String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"sebbycake"},"content":"            String time \u003d splitInput[splitInput.length - 1];","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"sebbycake"},"content":"            return time.substring(0, 2) + \":\" + time.substring(2);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"sebbycake"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"sebbycake"},"content":"            throw new TimeNotFoundException();","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"sebbycake"},"content":"    private static int getTaskNumber(String userInput) throws TaskNotFoundException {","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"sebbycake"},"content":"            return Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"sebbycake"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"sebbycake"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"sebbycake"},"content":"    private static String getSearchQuery(String userInput) throws QueryNotFoundException {","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"sebbycake"},"content":"        String[] searchArr \u003d userInput.split(\"find \");","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"sebbycake"},"content":"        if (searchArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"sebbycake"},"content":"            throw new QueryNotFoundException();","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"sebbycake"},"content":"        return searchArr[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"sebbycake":118}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":" * Storage class that encapsulates file creation and writing.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    private String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    private final String DIRECTORY \u003d \"data/\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"    private final int TASK_STATUS_INDEX \u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"    private final int START_OF_DESC_INDEX \u003d 7;","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"     * @param filePath The file location that the data is stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"    private void createDirIfNotExists() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"        Path path \u003d Paths.get(DIRECTORY);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"        // check if data directory exists in the current working directory","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"        // if doesn\u0027t, create the directory","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"            new File(DIRECTORY).mkdir();","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"     * Iterates through list of task items and","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"     * store them in file in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"     * @param items List of Task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"    public void writeToFile(List\u003cTask\u003e items) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"        assert items !\u003d null : \"Task list is not initialized!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"sebbycake"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"sebbycake"},"content":"            String content \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"            for (Task item : items) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"                content +\u003d item.toString() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"sebbycake"},"content":"            myWriter.write(content);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"sebbycake"},"content":"            myWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"sebbycake"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"sebbycake"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"sebbycake"},"content":"     * Loads tasks from file to a list of Task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"sebbycake"},"content":"     * @return A list of Task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"sebbycake"},"content":"     * @throws IOException IOException","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"sebbycake"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"sebbycake"},"content":"        List\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"sebbycake"},"content":"        this.createDirIfNotExists();","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"sebbycake"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"sebbycake"},"content":"        // check if the duke.txt file is already created","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"sebbycake"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"sebbycake"},"content":"            return tasksList;","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"sebbycake"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"sebbycake"},"content":"        String taskText;","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"sebbycake"},"content":"        while ((taskText \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"sebbycake"},"content":"            Task currentTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"sebbycake"},"content":"            switch (taskText.charAt(1)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"sebbycake"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"sebbycake"},"content":"                currentTask \u003d this.addTodo(taskText.substring(7));","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"sebbycake"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"sebbycake"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"sebbycake"},"content":"                currentTask \u003d this.addDeadline(taskText);","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"sebbycake"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"sebbycake"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"sebbycake"},"content":"                currentTask \u003d this.addEvent(taskText);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"sebbycake"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"sebbycake"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"sebbycake"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"sebbycake"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"sebbycake"},"content":"            if (taskText.charAt(TASK_STATUS_INDEX) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"sebbycake"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"sebbycake"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"sebbycake"},"content":"            tasksList.add(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"sebbycake"},"content":"        reader.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"sebbycake"},"content":"        return tasksList;","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"sebbycake"},"content":"    private Todo addTodo(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"sebbycake"},"content":"        return new Todo(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"sebbycake"},"content":"    private Deadline addDeadline(String taskText) {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"sebbycake"},"content":"        // [D][X] return laptop (by: Aug 3 2021)","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"sebbycake"},"content":"        int lastIndexOfDesc \u003d taskText.lastIndexOf(\" (by: \");","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"sebbycake"},"content":"        String description \u003d taskText.substring(START_OF_DESC_INDEX, lastIndexOfDesc);","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"sebbycake"},"content":"        String date \u003d taskText.substring(lastIndexOfDesc + 6, taskText.length() - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"sebbycake"},"content":"        date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyy\")).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"sebbycake"},"content":"        return new Deadline(description, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"sebbycake"},"content":"    private Event addEvent(String taskText) {","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"sebbycake"},"content":"        // [E][ ] interview meeting (at: Aug 7 2021 9:00 PM)","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"sebbycake"},"content":"        int index \u003d taskText.lastIndexOf(\" (at: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"sebbycake"},"content":"        String description \u003d taskText.substring(START_OF_DESC_INDEX, index);","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"sebbycake"},"content":"        String dateAndTime \u003d taskText.substring(index + 6, taskText.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"sebbycake"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\");","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"sebbycake"},"content":"        String localDateTime \u003d LocalDateTime.parse(dateAndTime, format).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"sebbycake"},"content":"        String[] dateArr \u003d localDateTime.split(\"T\");","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"sebbycake"},"content":"        String date \u003d dateArr[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"sebbycake"},"content":"        String time \u003d dateArr[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"sebbycake"},"content":"        return new Event(description, date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"sebbycake":162}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":" * Ui class that encapsulates the interface which the user interacts with.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"     * Prints a standard formatted message.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"     * @param message Message to be printed in console.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    public String display(String message) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        return message + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"     * Prints exit message.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    public String exit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"        return display(\"Goodbye. See you again soon!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"     * Prints success message for adding task.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"     * @param task     The individual task which can be Todo, Deadline or Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"     * @param numTasks The number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    public String displaySuccessMessage(Task task, int numTasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"        String msg \u003d \"Got it. I\u0027ve added this task: \\n\" + \"      \" + task + \"\\n    Now you have \"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"                + numTasks + (numTasks \u003c\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"        return msg;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"sebbycake":39}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    private String date;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"    private String time;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    private String type;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"     * Constructs a AddCommand object for Todo items.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"     * @param type        Type of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    public AddCommand(String description, String type) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"     * Constructs a AddCommand object for Deadline items.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"     * @param type        Type of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"    public AddCommand(String description, String date, String type) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"     * Constructs a AddCommand object for Event items.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"     * @param type        Type of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"    public AddCommand(String description, String date, String time, String type) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"        assert tasks !\u003d null : \"Task list is not initialized\";","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"        switch (this.type) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"            Todo todo \u003d tasks.createTodo(this.description);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"            storage.writeToFile(tasks.getAllTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"            return ui.displaySuccessMessage(todo, tasks.length());","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"sebbycake"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"sebbycake"},"content":"            Deadline dl \u003d tasks.createDeadline(this.description, this.date);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"sebbycake"},"content":"            storage.writeToFile(tasks.getAllTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"sebbycake"},"content":"            return ui.displaySuccessMessage(dl, tasks.length());","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"            Event event \u003d tasks.createEvent(this.description, this.date, this.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"            storage.writeToFile(tasks.getAllTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"sebbycake"},"content":"            return ui.displaySuccessMessage(event, tasks.length());","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"sebbycake"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"sebbycake"},"content":"            return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":76}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.exception.TaskDoesNotExistException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":" * Command class that encapsulates a user command.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    private boolean isExit;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"     * Constructs a Command object.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"     * @param isExit True if the command terminates the app. Otherwise, false.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"     * Returns true if the command terminates the app. Otherwise, false.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"     * @return True if the command terminates the app. Otherwise, false.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"     * Executes the given user command.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"     * @param tasks   List of Task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"     * @param ui      Ui object that user interacts with.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"     * @param storage Storage object that stores and writes to file in hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws TaskDoesNotExistException;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":42}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.exception.TaskDoesNotExistException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"     * @param taskNumber Index of the task item.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"        assert tasks !\u003d null : \"Task list is not initialized\";","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        if (tasks.isTaskExists(this.taskNumber)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"            Task taskDel \u003d tasks.getTask(this.taskNumber - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"            tasks.deleteTask(this.taskNumber - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"            storage.writeToFile(tasks.getAllTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"            return ui.display(\"Gotchu mate. I\u0027ve removed this task: \\n\" + \"      \" + taskDel + \"\\n    Now you have \"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"                    + tasks.length() + (tasks.length() \u003c\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":37}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.exception.TaskDoesNotExistException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"     * Constructs a DoneCommand object.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"     * @param taskNumber Index of the task item.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"        assert tasks !\u003d null : \"Task list is not initialized\";","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        if (tasks.isTaskExists(this.taskNumber)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"            Task task \u003d tasks.getTask(this.taskNumber - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"            storage.writeToFile(tasks.getAllTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"            return ui.display(\"Nice! This task is marked as done: \\n\" + \"      \" + task);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":36}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"        super(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        return ui.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":18}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    private String searchQuery;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"     * @param searchQuery Keyword to search for in a task\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    public FindCommand(String searchQuery) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"        this.searchQuery \u003d searchQuery;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        assert tasks !\u003d null : \"Task list is not initialized\";","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        List\u003cTask\u003e filteredList \u003d tasks.filter(this.searchQuery);","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"        String msg;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"        if (filteredList.size() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"            msg \u003d \"About \" + filteredList.size() + \" results: \\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"            for (int i \u003d 0; i \u003c filteredList.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"                String item \u003d \"    \" + (i + 1) + \".\" + filteredList.get(i) + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"                msg +\u003d item;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"            msg \u003d \"Oops... There is no matching task in your list! Please try again.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"        return msg;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"sebbycake":42}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    public InvalidCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        return ui.display(\"OOPS! I do not understand what does that mean. Maybe you can try either one of \"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"                + \"[todo, deadline, event, done, list, delete]?\");","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":18}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"        super(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        assert tasks !\u003d null : \"Task list is not initialized\";","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        return tasks.displayAllItems();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":19}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.controller;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    private final String DIALOG_BOX_FXML_DIR \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    private DialogBox(String text, Image img, String backgroundColor) {","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(DIALOG_BOX_FXML_DIR));","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"        dialog.setStyle(\"-fx-background-color: \" + backgroundColor);","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"        return new DialogBox(text, img, \"#ff9c31\");","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"        var db \u003d new DialogBox(text, img, \"#f46262\");","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":63}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.controller;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"    private final String USER_IMG_DIR \u003d \"/images/carrot.png\";","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    private final String DUKE_IMG_DIR \u003d \"/images/apple.png\";","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMG_DIR));","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(DUKE_IMG_DIR));","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"     * Initialize main window with greeting message.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"        String greetingMsg \u003d \"Hi, I\u0027m Sync-Me Sebby.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"                + \"I\u0027m here to assist you with tracking and synchronizing of your personal tasks.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"                + \"Let me know how I can help?\";","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(greetingMsg, dukeImage));","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"sebbycake"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"sebbycake"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"sebbycake"},"content":"        // close the GUI window","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"                @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"sebbycake"},"content":"                public void run() {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"sebbycake"},"content":"                    System.exit(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"sebbycake"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"sebbycake"},"content":"            }, 1000);","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":78}},{"path":"src/main/java/duke/exception/DateNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class DateNotFoundException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"    public DateNotFoundException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"        super(\"Date not indicated! Please try again\");","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":7}},{"path":"src/main/java/duke/exception/DescriptionNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class DescriptionNotFoundException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"    public DescriptionNotFoundException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"        super(\"Description of task is missing! Please try again\");","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"        super(errorMsg);","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":8}},{"path":"src/main/java/duke/exception/QueryNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class QueryNotFoundException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"    public QueryNotFoundException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"        super(\"We are not sure what you are looking for. Please try again.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":7}},{"path":"src/main/java/duke/exception/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class TaskDoesNotExistException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"    public TaskDoesNotExistException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"        super(\"This task does not exist! Please try again.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":7}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"        super(\"Please specify a task number! Please try again.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":7}},{"path":"src/main/java/duke/exception/TimeNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class TimeNotFoundException extends DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"    public TimeNotFoundException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"        super(\"Duration not indicated! Please try again.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"     * @param by          Date of completion.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.formatDate() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    private String formatDate() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"sebbycake":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    protected LocalDate duration;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"     * @param duration    Duration of event.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"     * @param time        Time of event.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    public Event(String description, String duration, String time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"        this.duration \u003d LocalDate.parse(duration);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"        this.time \u003d LocalTime.parse(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.formatDate() + \" \" + this.formatTime() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    private String formatDate() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        return this.duration.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    private String formatTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"sebbycake":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":" * Task class that encapsulates an action item to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"     * Constructs a Task object.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"     * Returns the status icon, either \"X\" or \"\".","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"     * @return a String which represents the status of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"     * Updates status as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"        return this.description;","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"sebbycake":46}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":" * TaskList class that encapsulates the storing of all Task objects in the app.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    private List\u003cTask\u003e tasksList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"     * Constructs a list containing the elements of the specified ArrayList.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"     * @param tasks - ArrayList of Task objects retrieved from file in hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"        this.tasksList \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"     * Prints all items in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    public String displayAllItems() {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        String msg \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        for (int i \u003d 0; i \u003c this.tasksList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"            String item \u003d \"    \" + (i + 1) + \".\" + this.tasksList.get(i) + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"            msg +\u003d item;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        return msg;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"     * Returns the number of elements in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"     * @return Returns the number of elements in this list.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"    public int length() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"        return this.tasksList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"     * Retrieves an element from the list based on its position.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"     * @param index index of the element to return.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"     * @return Returns the element at the specified position in this list.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"        return this.tasksList.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"     * Appends the specified element to the end of this list.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"     * @param task The Task object to be appended to this list.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"        this.tasksList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"sebbycake"},"content":"     * Removes the element at the specified position in this list.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"sebbycake"},"content":"     * Shifts any subsequent elements to the left (subtracts one from their indices).","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"     * @param index Index of the element to be removed.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"sebbycake"},"content":"        this.tasksList.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"sebbycake"},"content":"     * Constructs a Todo object.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"sebbycake"},"content":"     * @param description String description of the action item to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"sebbycake"},"content":"     * @return A Todo object.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"sebbycake"},"content":"    public Todo createTodo(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"sebbycake"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"sebbycake"},"content":"        this.addTask(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"sebbycake"},"content":"        return todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"sebbycake"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"sebbycake"},"content":"     * @param description String description of the action item to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"sebbycake"},"content":"     * @param date        String representation of date of yyyy-mm-dd format.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"sebbycake"},"content":"     * @return A Deadline object.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"sebbycake"},"content":"    public Deadline createDeadline(String description, String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"sebbycake"},"content":"        Deadline dl \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"sebbycake"},"content":"        this.addTask(dl);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"sebbycake"},"content":"        return dl;","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"sebbycake"},"content":"     * Constructs an Event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"sebbycake"},"content":"     * @param description String description of the action item to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"sebbycake"},"content":"     * @param date        String representation of date of yyyy-mm-dd format.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"sebbycake"},"content":"     * @param time        String representation of time.","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"sebbycake"},"content":"     * @return An Event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"sebbycake"},"content":"    public Event createEvent(String description, String date, String time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"sebbycake"},"content":"        Event event \u003d new Event(description, date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"sebbycake"},"content":"        this.tasksList.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"sebbycake"},"content":"        return event;","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"sebbycake"},"content":"     * Checks if a task exists in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"sebbycake"},"content":"     * @param taskNumber Index of the element to be checked.","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"sebbycake"},"content":"     * @return True if the task exists. Otherwise, false.","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"sebbycake"},"content":"    public boolean isTaskExists(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"sebbycake"},"content":"        return taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d this.tasksList.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"sebbycake"},"content":"     * Returns a list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"sebbycake"},"content":"     * @return a List of Task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"sebbycake"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"sebbycake"},"content":"        return this.tasksList;","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"sebbycake"},"content":"     * Filters list of tasks by keyword matching in the description.","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"sebbycake"},"content":"     * @param keyword Keyword to be filtered.","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"sebbycake"},"content":"     * @return A filterd list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"sebbycake"},"content":"    public List\u003cTask\u003e filter(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"sebbycake"},"content":"        // String regex \u003d \".*\\\\b\" + keyword + \"\\\\b.*\";","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"sebbycake"},"content":"        return this.tasksList","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"sebbycake"},"content":"                .stream()","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"sebbycake"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"sebbycake"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"sebbycake":146}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"sebbycake":14}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" styleClass\u003d\"dialog\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        \u003cInsets bottom\u003d\"0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"4.0\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"        \u003cURL value\u003d\"@../css/index.css\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"            fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"input-text-field\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"send-btn\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"wallpaper\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        \u003cURL value\u003d\"@../css/index.css\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sebbycake":28}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    private Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    private TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"     * Tests AddCommand constructor for todo.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"    public void testAddTodoCommand() {","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        AddCommand cmd \u003d new AddCommand(\"Do homework\", \"todo\");","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"        cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"        Todo todo \u003d new Todo(\"Do homework\");","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"        assertEquals(1, taskList.length());","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        assertEquals(todo.toString(), taskList.getTask(0).toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"     * Tests AddCommand constructor for deadline.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"    public void testAddDeadlineCommand() {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"        AddCommand cmd \u003d new AddCommand(\"Essay submission\", \"2021-09-09\", \"deadline\");","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"        cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"        Deadline deadline \u003d new Deadline(\"Essay submission\", \"2021-09-09\");","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"        assertEquals(1, taskList.length());","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"        assertEquals(deadline.toString(), taskList.getTask(0).toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"     * Tests AddCommand constructor for event.","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"    public void testAddEventCommand() {","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"        AddCommand cmd \u003d new AddCommand(\"Hackathon kick-off\", \"2021-09-22\", \"19:00\", \"event\");","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"        cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"        Event event \u003d new Event(\"Hackathon kick-off\", \"2021-09-22\", \"19:00\");","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"        assertEquals(1, taskList.length());","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"        assertEquals(event.toString(), taskList.getTask(0).toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"sebbycake":58}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import duke.exception.TaskDoesNotExistException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    private Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    private TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"     * Tests DeleteCommmand.","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    public void testDeleteCommand() throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        Todo todo \u003d new Todo(\"Do homework\");","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"        assertEquals(1, taskList.length());","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"        DeleteCommand cmd \u003d new DeleteCommand(1);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"        cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        assertEquals(0, taskList.length());","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"sebbycake":34}},{"path":"src/test/java/duke/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import duke.exception.TaskDoesNotExistException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    private Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    private TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"     * Tests DoneCommmand.","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    public void testDoneCommand() throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        Todo todo \u003d new Todo(\"Do homework\");","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"        DoneCommand cmd \u003d new DoneCommand(1);","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"        cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"        assertEquals(\"X\", todo.getStatusIcon());","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"sebbycake":33}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"     * Tests Deadline constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    public void testDeadlineConstructor() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        Deadline dl \u003d new Deadline(\"essay submission\", \"2021-08-30\");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        String expected \u003d \"[D][ ] essay submission (by: Aug 30 2021)\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        assertEquals(expected, dl.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class EventTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"     * Tests Event constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    public void testEventConstructor() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        Event event \u003d new Event(\"Hackathon kick-off\", \"2021-09-22\", \"19:00\");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        String expected \u003d \"[E][ ] Hackathon kick-off (at: Sep 22 2021 7:00 PM)\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":19}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"     * Tests Task constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    public void testTaskConstructor() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        Task task \u003d new Task(\"My first task\");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        String expected \u003d \"[ ] My first task\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"     * Tests status icon when task is uncompleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    public void testIncompleteStatus() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"        Task task \u003d new Task(\"My first task\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"        String expected \u003d \" \";","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        assertEquals(expected, task.getStatusIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"     * Tests status icon when task is completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"    public void testCompleteStatus() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"        Task task \u003d new Task(\"My first task\");","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"        String expected \u003d \"X\";","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"        assertEquals(expected, task.getStatusIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":40}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"     * Tests Todo constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    public void testTodoConstructor() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        Todo todo \u003d new Todo(\"Send reminder emails\");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"        String expected \u003d \"[T][ ]\" + \" Send reminder emails\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"     * Tests functionality of marking task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    public void testMarkTodoAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"        Todo todo \u003d new Todo(\"Send reminder emails\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"        String expected \u003d \"[T][X]\" + \" Send reminder emails\";","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sebbycake":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"deadline return laptop /by 2021-08-03","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"todo buy battery","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"event interview meeting /at 2021-08-07 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"todo do tutorial","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"done 100","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"going for a run","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"deadline assignment /by 2021-08-10","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"deadline project presentation /by 2021-09-20","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"sebbycake":18}}]
