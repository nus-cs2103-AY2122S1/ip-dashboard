[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"# Welcome to Duke, your very own task manager!","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"**Things you can do with ~~Duck~~ Duke:**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"1. Add different kinds of tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"   * _Duke can keep track of tasks with specific deadlines._","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"   * _Having an event? Duke will keep track of your event periods as well._","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"   * _Just need a simple to-do list? Duke will do that too._","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"2. Show that tasks are done","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"   * _Once a task is done, mark it as so! Duke will keep track of the tasks you have completed._","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"3. Delete tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"   * _Done with a task? Get rid of it. Typo? Just delete it and do it again._","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"4. Find a specific task","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"   * _Need to know what to get done today? Find tasks by date!_","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"   * _You can also find tasks by keywords!_","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"**Why you need Duke:**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"- Why worry about forgetting tasks and deadlines?","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"- Why worry about whether you\u0027ve finished something?","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"- I needed to make a bullet list.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"All you need to do is: ","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"- [ ] Head over to this application\u0027s [GitHub page](https://github.com/ntwbruce/ip)!","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"- [ ] Download the JAR file of \"Duke v0.1\" under Releases","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"- [ ] Run the JAR file, and you\u0027re good to go! :thumbsup:","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"If you\u0027re curious to play around and customise this app for yourself, ","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"feel free to download the source code from the same [GitHub page](https://github.com/ntwbruce/ip)!","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"You will find the main function in `src/main/java/duke/Duke`, as shown below.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"````java","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"public class Duke {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    // ...","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"   public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"      new Duke(\"data\", \"duke.txt\").run(System.in);","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"   }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"````","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"\u003e See Mumei-ter!","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":":lemon:","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"ntwbruce":38,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ntwbruce":16,"-":45}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" * Represents the command that adds a task to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    private final Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"     * Constructor of an AddCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command of adding the task to the given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list to which the task is added.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being added to the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        return taskList.addTask(newTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":32}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" * Represents the command that closes the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a ByeCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"        super();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command of closing the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList TaskList not used in this execution.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the closing of the program.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        return ui.showBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":30}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Represents a command to be executed on the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    public Command() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The TaskList used in the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being executed.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    public abstract String execute(TaskList taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":20}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Represents the command that deletes a task from the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    private final int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a DeleteCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command of deleting the task from the given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list from which the task is deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        return taskList.deleteTask(index);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":31}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Represents the command that sets a task on the task list to done.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    private final int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a DoneCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     * @param index Index of the task to be set to done.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command of setting the given task to done.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list containing the task to be set to done.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the setting of the task to done.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        return taskList.setTaskDone(index);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":31}},{"path":"src/main/java/command/FindKeywordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Represents the command that finds tasks on the task list that contains a specific keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class FindKeywordCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a FindKeywordCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     * @param keyword The keyword with which to find tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public FindKeywordCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command of finding tasks containing the given keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The TaskList used in the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the list of tasks containing the given keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        return taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ntwbruce":31}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Represents the command that lists all the tasks on the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a ListCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command of displaying the given task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the given list.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        return taskList.showList();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":27}},{"path":"src/main/java/command/ShowScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":" * Represents the command that displays a schedule of tasks on a given date.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"public class ShowScheduleCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    private final LocalDate desiredDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a FindDateCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"     * @param desiredDate Find tasks that take place on this date.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    public ShowScheduleCommand(LocalDate desiredDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        this.desiredDate \u003d desiredDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * Executes the command of showing the schedule of tasks on the given date.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list from which tasks taking place on the given date are taken to be listed.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the list of tasks found.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        return taskList.showSchedule(desiredDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":33}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ntwbruce":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import exception.DukeExceptionType;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":" * Represents the main Duke program. Running this class\u0027s main function executes the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     * Default constructor for the Duke program.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"     * Uses filepath data/duke.txt by default.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        Storage storage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     * Runs Duke logic to return response to user input on GUI.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"     * @param input User input from the GUI.","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"     * @return Duke\u0027s response on the GUI.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"            Command c \u003d Parser.parse(input, taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"            return c.execute(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"            return ui.showException(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"            return ui.showException(new DukeException(DukeExceptionType.INVALID_TASK_INDEX));","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"            return ui.showException(new DukeException(DukeExceptionType.INVALID_DATETIME));","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"     * Returns Duke program closing message.","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"     * @return Duke program closing message string.","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"    String byeMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        return \"Bye! Program closing...\";","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ntwbruce":57}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ntwbruce":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ntwbruce":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chicken.jpeg\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duck.jpeg\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        String response \u003d duke.getResponse(userInput.getText());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.byeMessage(), dukeImage));","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ntwbruce":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import command.ByeCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import command.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import command.DoneCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import command.FindKeywordCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import command.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import command.ShowScheduleCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import exception.DukeExceptionType;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"import task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"import task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":" * Deals with making sense of the user command. Static method parse parses the user command and returns a Command","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":" * object.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     * Parses the given user input and returns the corresponding Command object for execution based on the input.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"     * @param fullCommand The full user input string for parsing.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The list of currently saved tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * @return A Command object based on the parsed user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException If the parser encounters an invalid command.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    public static Command parse(String fullCommand, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        // Find case based on first word of command","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        String[] parsedCommand \u003d fullCommand.split(\"\\\\s+\", 3);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        assert parsedCommand.length \u003c 4 : \"initial split is not done properly.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        switch (parsedCommand[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        // \"bye\" command given","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        // \"list\" command given","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        // \"done\" command given","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"            return parseDone(parsedCommand, taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        // \"delete\" command given","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"            return parseDelete(parsedCommand, taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        // \"find\" command given","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        case \"find\":","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"            return parseFind(parsedCommand);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        // \"schedule\" command given","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        case \"schedule\":","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"            return parseSchedule(parsedCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        // Task command given","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"            return parseAdd(fullCommand);","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"     * Further parses a \u0027done\u0027 instruction from the user and returns a DoneCommand.","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"     * @param parsedCommand Array of parsed instructions from the parse function.","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList Task list where task to set to done is located.","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"     * @return DoneCommand based on user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException if invalid command is given.","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"    public static DoneCommand parseDone(String[] parsedCommand, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        if (parsedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_TASK_INDEX);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"        String indexString \u003d parsedCommand[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"        int toSet \u003d Integer.parseInt(indexString);","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"        if (taskList.isInvalidIndex(toSet)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_TASK_INDEX);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"        int doneIndex \u003d toSet - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"        return new DoneCommand(doneIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"     * Further parses a \u0027delete\u0027 instruction from the user and returns a DeleteCommand.","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"     * @param parsedCommand Array of parsed instructions from the parse function.","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList Task list where task to delete is located.","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"     * @return DeleteCommand based on user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException if invalid command is given.","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"    public static DeleteCommand parseDelete(String[] parsedCommand, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"        if (parsedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_TASK_INDEX);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"        String indexString \u003d parsedCommand[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"        int toDelete \u003d Integer.parseInt(indexString);","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"        if (taskList.isInvalidIndex(toDelete)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_TASK_INDEX);","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"        int deleteIndex \u003d toDelete - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"        return new DeleteCommand(deleteIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"     * Further parses a \u0027find\u0027 instruction from the user and returns a FindKeywordCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"     * @param parsedCommand Array of parsed instructions from the parse function.","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"     * @return FindKeywordCommand based on user input.","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException if invalid command is given.","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"    public static Command parseFind(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"        if (parsedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_FIND);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"        String keyword \u003d parsedCommand[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"        return new FindKeywordCommand(keyword);","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"     * Further parses a \u0027schedule\u0027 instruction from the user and returns a ShowScheduleCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"     * @param parsedCommand Array of parsed instructions from the parse function.","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"     * @return ShowScheduleCommand based on user input.","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException if invalid command is given.","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"    public static Command parseSchedule(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"        if (parsedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_SCHEDULE);","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"        String desiredDateString \u003d parsedCommand[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"        LocalDate desiredDate \u003d LocalDate.parse(desiredDateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"        return new ShowScheduleCommand(desiredDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"     * Further parses an add instruction from the user and returns an AddCommand.","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"     * @param fullCommand User input string in its entirety.","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"     * @return AddCommand based on user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException if invalid command is given.","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"    public static Command parseAdd(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"        String[] parsedCommand \u003d fullCommand.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"        String taskName \u003d parsedCommand[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"ntwbruce"},"content":"        // Incomplete or invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"ntwbruce"},"content":"        if (parsedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"            switch (taskName) {","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"                throw new DukeException(DukeExceptionType.MISSING_DEADLINE_DESC);","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"ntwbruce"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"ntwbruce"},"content":"                throw new DukeException(DukeExceptionType.MISSING_EVENT_DESC);","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"ntwbruce"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"ntwbruce"},"content":"                throw new DukeException(DukeExceptionType.MISSING_TODO_DESC);","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"ntwbruce"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"ntwbruce"},"content":"                throw new DukeException(DukeExceptionType.INVALID_INPUT);","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"ntwbruce"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"ntwbruce"},"content":"        Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"ntwbruce"},"content":"        String taskDetails \u003d parsedCommand[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":183,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"ntwbruce"},"content":"        switch (taskName) {","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"ntwbruce"},"content":"        // \"deadline\" command given","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"ntwbruce"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"ntwbruce"},"content":"            newTask \u003d parseDeadline(taskDetails);","lastModifiedDate":"2021-09-06"},{"lineNumber":189,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"ntwbruce"},"content":"        // \"event\" command given","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"ntwbruce"},"content":"        case \"event\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"ntwbruce"},"content":"            newTask \u003d parseEvent(taskDetails);","lastModifiedDate":"2021-09-06"},{"lineNumber":195,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"ntwbruce"},"content":"        // \"todo\" command given","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"ntwbruce"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"ntwbruce"},"content":"            newTask \u003d new Todo(taskDetails);","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"ntwbruce"},"content":"        // Invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"ntwbruce"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_INPUT);","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"ntwbruce"},"content":"        return new AddCommand(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"ntwbruce"},"content":"     * Further parses a \u0027parseAdd\u0027 instruction from the user and returns a Deadline.","lastModifiedDate":"2021-09-06"},{"lineNumber":213,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":214,"author":{"gitId":"ntwbruce"},"content":"     * @param taskDetails String containing concatenated task details.","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"ntwbruce"},"content":"     * @return Deadline based on user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":216,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException if invalid taskDetails string is given.","lastModifiedDate":"2021-09-06"},{"lineNumber":217,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":218,"author":{"gitId":"ntwbruce"},"content":"    public static Deadline parseDeadline(String taskDetails) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":219,"author":{"gitId":"ntwbruce"},"content":"        String[] details \u003d taskDetails.split(\" /by \");","lastModifiedDate":"2021-09-06"},{"lineNumber":220,"author":{"gitId":"ntwbruce"},"content":"        String deadlineDescription \u003d details[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":221,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":222,"author":{"gitId":"ntwbruce"},"content":"        if (details.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":223,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.MISSING_DEADLINE_DATETIME);","lastModifiedDate":"2021-09-06"},{"lineNumber":224,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":225,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":226,"author":{"gitId":"ntwbruce"},"content":"        String[] deadline \u003d details[1].split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":227,"author":{"gitId":"ntwbruce"},"content":"        String deadlineDate \u003d deadline[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":228,"author":{"gitId":"ntwbruce"},"content":"        if (deadline.length \u003d\u003d 1) { // only date provided","lastModifiedDate":"2021-09-06"},{"lineNumber":229,"author":{"gitId":"ntwbruce"},"content":"            return new Deadline(deadlineDescription, LocalDate.parse(deadlineDate));","lastModifiedDate":"2021-09-06"},{"lineNumber":230,"author":{"gitId":"ntwbruce"},"content":"        } else if (deadline.length \u003d\u003d 2) { // date and time provided","lastModifiedDate":"2021-09-06"},{"lineNumber":231,"author":{"gitId":"ntwbruce"},"content":"            String deadlineTime \u003d deadline[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":232,"author":{"gitId":"ntwbruce"},"content":"            return new Deadline(deadlineDescription, LocalDate.parse(deadlineDate),","lastModifiedDate":"2021-09-06"},{"lineNumber":233,"author":{"gitId":"ntwbruce"},"content":"                    LocalTime.parse(deadlineTime));","lastModifiedDate":"2021-09-06"},{"lineNumber":234,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":235,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_DATETIME);","lastModifiedDate":"2021-09-06"},{"lineNumber":236,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":237,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":238,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":239,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":240,"author":{"gitId":"ntwbruce"},"content":"     * Further parses a \u0027parseAdd\u0027 instruction from the user and returns an Event.","lastModifiedDate":"2021-09-06"},{"lineNumber":241,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":242,"author":{"gitId":"ntwbruce"},"content":"     * @param taskDetails String containing concatenated task details.","lastModifiedDate":"2021-09-06"},{"lineNumber":243,"author":{"gitId":"ntwbruce"},"content":"     * @return Event based on user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":244,"author":{"gitId":"ntwbruce"},"content":"     * @throws DukeException if invalid taskDetails string is given.","lastModifiedDate":"2021-09-06"},{"lineNumber":245,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":246,"author":{"gitId":"ntwbruce"},"content":"    public static Event parseEvent(String taskDetails) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":247,"author":{"gitId":"ntwbruce"},"content":"        String[] details \u003d taskDetails.split(\" /at \");","lastModifiedDate":"2021-09-06"},{"lineNumber":248,"author":{"gitId":"ntwbruce"},"content":"        String eventDescription \u003d details[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":249,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":250,"author":{"gitId":"ntwbruce"},"content":"        if (details.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":251,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.MISSING_EVENT_PERIOD);","lastModifiedDate":"2021-09-06"},{"lineNumber":252,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":253,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":254,"author":{"gitId":"ntwbruce"},"content":"        String[] periodRange \u003d details[1].split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":255,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":256,"author":{"gitId":"ntwbruce"},"content":"        if (periodRange.length \u003d\u003d 2) { // start and end date provided","lastModifiedDate":"2021-09-06"},{"lineNumber":257,"author":{"gitId":"ntwbruce"},"content":"            String startDate \u003d periodRange[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":258,"author":{"gitId":"ntwbruce"},"content":"            String endDate \u003d periodRange[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":259,"author":{"gitId":"ntwbruce"},"content":"            return new Event(eventDescription, LocalDate.parse(startDate),","lastModifiedDate":"2021-09-06"},{"lineNumber":260,"author":{"gitId":"ntwbruce"},"content":"                    LocalDate.parse(endDate));","lastModifiedDate":"2021-09-06"},{"lineNumber":261,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":262,"author":{"gitId":"ntwbruce"},"content":"        } else if (periodRange.length \u003d\u003d 3) { // date, start and end time provided","lastModifiedDate":"2021-09-06"},{"lineNumber":263,"author":{"gitId":"ntwbruce"},"content":"            String eventDate \u003d periodRange[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":264,"author":{"gitId":"ntwbruce"},"content":"            String startTime \u003d periodRange[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":265,"author":{"gitId":"ntwbruce"},"content":"            String endTime \u003d periodRange[2];","lastModifiedDate":"2021-09-06"},{"lineNumber":266,"author":{"gitId":"ntwbruce"},"content":"            return new Event(eventDescription, LocalDate.parse(eventDate),","lastModifiedDate":"2021-09-06"},{"lineNumber":267,"author":{"gitId":"ntwbruce"},"content":"                    LocalTime.parse(startTime), LocalTime.parse(endTime));","lastModifiedDate":"2021-09-06"},{"lineNumber":268,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":269,"author":{"gitId":"ntwbruce"},"content":"        } else if (periodRange.length \u003d\u003d 4) { // start date and time, end date and time provided","lastModifiedDate":"2021-09-06"},{"lineNumber":270,"author":{"gitId":"ntwbruce"},"content":"            String startDate \u003d periodRange[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":271,"author":{"gitId":"ntwbruce"},"content":"            String startTime \u003d periodRange[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":272,"author":{"gitId":"ntwbruce"},"content":"            String endDate \u003d periodRange[2];","lastModifiedDate":"2021-09-06"},{"lineNumber":273,"author":{"gitId":"ntwbruce"},"content":"            String endTime \u003d periodRange[3];","lastModifiedDate":"2021-09-06"},{"lineNumber":274,"author":{"gitId":"ntwbruce"},"content":"            return new Event(eventDescription,","lastModifiedDate":"2021-09-06"},{"lineNumber":275,"author":{"gitId":"ntwbruce"},"content":"                    LocalDate.parse(startDate), LocalTime.parse(startTime),","lastModifiedDate":"2021-09-06"},{"lineNumber":276,"author":{"gitId":"ntwbruce"},"content":"                    LocalDate.parse(endDate), LocalTime.parse(endTime));","lastModifiedDate":"2021-09-06"},{"lineNumber":277,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":278,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":279,"author":{"gitId":"ntwbruce"},"content":"            throw new DukeException(DukeExceptionType.INVALID_PERIOD);","lastModifiedDate":"2021-09-06"},{"lineNumber":280,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":281,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":282,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":282}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import exception.DukeExceptionType;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":" * Deals with loading tasks from, saving tasks to and making changes to tasks on the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    private final File direc;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    private final File duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a Storage object.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * @param fileDirectory Directory containing the hard disk.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"     * @param fileName The hard disk.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    public Storage(String fileDirectory, String fileName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        filePath \u003d fileDirectory + \"/\" + fileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        direc \u003d new File(fileDirectory);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        duke \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"     * Loads the saved tasks from the hard disk to the Duke TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"     * @return An ArrayList of Tasks used to create the TaskList for the current instance of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        // Initialise task list","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"            // Display initialisation message","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"            direc.mkdirs();","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"            duke.createNewFile();","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"            // Initialise file reader","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(duke));","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"            String currLine \u003d reader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"            // Read through all saved tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"            while (currLine !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"                String[] taskString \u003d currLine.split(\" \\\\| \", 3);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"                Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"                // Current task is a Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"                if (taskString[0].equals(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"                    String[] deadlineDetails \u003d taskString[2].split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"                    if (deadlineDetails.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"                        newTask \u003d new Deadline(deadlineDetails[0], LocalDate.parse(deadlineDetails[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"                    } else if (deadlineDetails.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"                        newTask \u003d new Deadline(deadlineDetails[0],","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"                                LocalDate.parse(deadlineDetails[1]), LocalTime.parse(deadlineDetails[2]));","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"                        throw new DukeException(DukeExceptionType.DB_READ);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"                // Current task is an Event","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"                } else if (taskString[0].equals(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"                    String[] periodDetails \u003d taskString[2].split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"                    if (periodDetails.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"                        newTask \u003d new Event(periodDetails[0],","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"                                LocalDate.parse(periodDetails[1]), LocalDate.parse(periodDetails[2]));","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"                    } else if (periodDetails.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"                        newTask \u003d new Event(periodDetails[0], LocalDate.parse(periodDetails[1]),","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"                                LocalTime.parse(periodDetails[2]), LocalTime.parse(periodDetails[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"                    } else if (periodDetails.length \u003d\u003d 5) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"                        newTask \u003d new Event(periodDetails[0],","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"                                LocalDate.parse(periodDetails[1]), LocalTime.parse(periodDetails[2]),","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"                                LocalDate.parse(periodDetails[3]), LocalTime.parse(periodDetails[4]));","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"                        throw new DukeException(DukeExceptionType.DB_READ);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"                // Current task is a Todo","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"                } else if (taskString[0].equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"                    newTask \u003d new Todo(taskString[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"                // Current task is in invalid format","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"                    throw new DukeException(DukeExceptionType.DB_READ);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"                // Handles whether or not Task is done","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"                if (Integer.parseInt(taskString[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"                    newTask.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"                // Add Task to task list, continue with next Task","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"                savedTasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"            ui.showException(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"            ui.showException(new DukeException(DukeExceptionType.DB_LAUNCH));","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"        return savedTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"     * Adds the given entry to the database (hard disk).","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"     * @param s A string representation of the task to be added to the database.","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"    public void addDbEntry(String s) {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"            FileWriter writer \u003d new FileWriter(duke, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"            writer.write(s + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"            ui.showException(new DukeException(DukeExceptionType.DB_ADD));","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"     * Sets the given entry in the database to \u0027done\u0027.","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"     * @param s A string representation of the task in the database to be set to \u0027done\u0027.","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"    public void setDbEntryDone(String s) {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"            // Create updated file","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"            String updatedPath \u003d filePath.split(\"/\")[0] + \"/updated.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"            File updated \u003d new File(updatedPath);","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"            updated.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"            // Initialise file reader and writer","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"            FileWriter writer \u003d new FileWriter(updated, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(duke));","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"            String currLine \u003d reader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"            // Read through file, finds and sets specified task to done","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"ntwbruce"},"content":"            while (currLine !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"                if (currLine.equals(s)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"                    String[] toSetDone \u003d currLine.split(\" \\\\| \", 3);","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"                    writer.write(toSetDone[0] + \" | 1 | \" + toSetDone[2] + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"ntwbruce"},"content":"                    writer.write(currLine + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"ntwbruce"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"ntwbruce"},"content":"            // Close writer","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"ntwbruce"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"            // Replace duke with the updated file","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"ntwbruce"},"content":"            duke.delete();","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"ntwbruce"},"content":"            updated.renameTo(duke);","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"ntwbruce"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"ntwbruce"},"content":"            ui.showException(new DukeException(DukeExceptionType.DB_DONE));","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"ntwbruce"},"content":"     * Deletes the given entry from the database.","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"ntwbruce"},"content":"     * @param s A string representation of the task to be deleted from the database.","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"ntwbruce"},"content":"    public void deleteDbEntry(String s) {","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"ntwbruce"},"content":"            // Create updated file","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"ntwbruce"},"content":"            String updatedPath \u003d filePath.split(\"/\")[0] + \"/updated.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"ntwbruce"},"content":"            File updated \u003d new File(updatedPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"ntwbruce"},"content":"            updated.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"ntwbruce"},"content":"            // Initialise file reader and writer","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"ntwbruce"},"content":"            FileWriter writer \u003d new FileWriter(updated, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"ntwbruce"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(duke));","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"ntwbruce"},"content":"            String currLine \u003d reader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"ntwbruce"},"content":"            // Read through file, finds and excludes entry to delete","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"ntwbruce"},"content":"            while (currLine !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"ntwbruce"},"content":"                if (!currLine.equals(s)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"ntwbruce"},"content":"                    writer.write(currLine + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"ntwbruce"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"ntwbruce"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"ntwbruce"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"ntwbruce"},"content":"            // Close writer","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"ntwbruce"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"ntwbruce"},"content":"            // Replace duke with the updated file","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"ntwbruce"},"content":"            duke.delete();","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"ntwbruce"},"content":"            updated.renameTo(duke);","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"ntwbruce"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"ntwbruce"},"content":"            ui.showException(new DukeException(DukeExceptionType.DB_DELETE));","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ntwbruce":217}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":" * Contains the task list and handles logic related to the task list, eg. adding, deleting, setting tasks to done.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"     * @param storage Storage object used to store the task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        list \u003d storage.load();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     * Checks if the given index is a valid task index.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"     * @param index The task index to be checked for validity.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"     * @return True if the given index is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    public boolean isInvalidIndex(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        return index \u003e list.size() || index \u003c 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"     * Instructs the Ui to display the current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the displayed list.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    public String showList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        return ui.displayList(list);","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"     * Sets the task with the given index to done.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"     * @param index The index of the task to be set to done.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the setting of the task to done.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"    public String setTaskDone(int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        Task toSetDone \u003d list.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        storage.setDbEntryDone(toSetDone.databaseEntry());","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        toSetDone.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        return ui.showDone(toSetDone);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"     * Deletes the task with the given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        int initialSize \u003d list.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        Task deleted \u003d list.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        storage.deleteDbEntry(deleted.databaseEntry());","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"        assert initialSize - 1 \u003d\u003d list.size() : \"deleteTask failed\";","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"        return ui.showDelete(deleted, list.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"     * Instructs the Ui to display a list of tasks that take place on the given date.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"     * @param desiredDate The date used to find tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the displayed list.","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"    public String showSchedule(LocalDate desiredDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        return ui.displaySchedule(list, desiredDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"     * Instructs the Ui to display a list of tasks that contain the given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"     * @param keyword The keyword to look for in task names.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the displayed list.","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"    public String findTasksByKeyword(String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        return ui.showKeywordFind(list, keyword);","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"     * @param newTask The task to be added to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being added to the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"        int initialSize \u003d list.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"        list.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"        storage.addDbEntry(newTask.databaseEntry());","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"        assert initialSize + 1 \u003d\u003d list.size() : \"addTask failed\";","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"        return ui.showAdd(newTask, list.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ntwbruce":106}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":" * Deals with user interactions, mostly printing messages to the console following user commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     * Displays the program closing message.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"     * @return The program closing message.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    public String showBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        return \"See you next time!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     * Displays the current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     * @return The task list in string representation.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    public String displayList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        return \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"                + IntStream.range(0, taskList.size())","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"                .mapToObj(i -\u003e (i + 1) + \".\" + taskList.get(i).listEntry() + \"\\n\")","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"     * Displays a message to show that the given task has been set to done.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"     * @param toSetDone The task that has been set to done.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being done.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    public String showDone(Task toSetDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"                + toSetDone.listEntry() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"     * Displays a message to show that the given task has been deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"     * @param deleted The task that has been deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"     * @param listLength The new length of the task list after the deletion.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    public String showDelete(Task deleted, int listLength) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"                + deleted.listEntry() + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"                + \"Now you have \" + listLength + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"     * Displays a schedule of tasks for the given date.","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"     * @param desiredDate The date for which the schedule is found.","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"     * @return A schedule of tasks taking place/to be done on the given date.","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    public String displaySchedule(ArrayList\u003cTask\u003e taskList, LocalDate desiredDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"        Stream\u003cTask\u003e timedTasksStream \u003d taskList.stream()","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"                .filter(t -\u003e t.isTodayTask(desiredDate))","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"                .filter(t -\u003e !t.isWholeDay());","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        Stream\u003cTask\u003e wholeDayTasksStream \u003d taskList.stream()","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"                .filter(t -\u003e t.isTodayTask(desiredDate))","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"                .filter(Task::isWholeDay);","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"        return String.format(\"Here is the schedule for %s:\\n\", desiredDate.toString())","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"                + timedTasksStream","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"                .sorted(Task::compareTo)","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"                .map(t -\u003e t.listEntry() + \"\\n\")","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"                .collect(Collectors.joining())","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"                + \"Here are tasks without specific timing:\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"                + wholeDayTasksStream","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"                .map(t -\u003e t.listEntry() + \"\\n\")","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"     * Displays a list of tasks in the current task list that contain the given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"     * @param taskList The task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"     * @param keyword The keyword to look for in the task names.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"     * @return A list of tasks containing the given keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"    public String showKeywordFind(ArrayList\u003cTask\u003e taskList, String keyword) {","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"        return \"Here are the tasks with that keyword:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"                + IntStream.range(0, taskList.size())","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"                .filter(i -\u003e taskList.get(i).containsKeyword(keyword))","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"                .mapToObj(i -\u003e (i + 1) + \".\" + taskList.get(i).listEntry() + \"\\n\")","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"     * Displays a message to show that the given task has been added to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"     * @param newTask The task that has been added to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"     * @param listLength The new length of the task list after the addition.","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"     * @return String representing the task being added.","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"    public String showAdd(Task newTask, int listLength) {","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"                + newTask.listEntry() + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"                + \"Now you have \" + listLength + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"     * Displays the error message of the given DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"     * @param e The DukeException whose error message is to be displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"     * @return The DukeException error message.","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"    public String showException(DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"        return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ntwbruce":126}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":" * Handles error messages whenever the Duke program throws an exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"    private final String customMessage;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a DukeException object.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"     * @param err The type of DukeException thrown.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    public DukeException(DukeExceptionType err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"        switch (err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"        case CLOSE_INTERRUPT:","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! There was a problem closing the program!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        case DB_ADD:","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! There was a problem adding the task to the hard disk!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        case DB_DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! There was a problem deleting the task from the hard disk!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        case DB_DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! There was a problem setting the task to done in the hard disk!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        case DB_LAUNCH:","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! There was a problem setting up the hard disk!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        case DB_READ:","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! There was a problem with reading tasks in the hard disk!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"                    + \"Check out duke.txt for any erroneous entries or incorrect formatting.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        case INVALID_DATETIME:","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! The date you provided is not in a correct format!\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"                    + \"The required format is yyyy-mm-dd or yyyy-mm-dd hh:mm.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        case INVALID_FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! You need to specify a keyword!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        case INVALID_INPUT:","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! I don\u0027t recognise the command you\u0027ve given me.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        case INVALID_PERIOD:","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! The event period you provided is not in a correct format!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"                    + \"  You can provide:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"                    + \"    1. start and end dates\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"                    + \"    2. one date, start and end times\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"                    + \"    3. start date and time, end date and time\";","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        case INVALID_SCHEDULE:","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! You need to specify a date!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        case INVALID_TASK_INDEX:","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! That is not a valid task index!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        case MISSING_DEADLINE_DATETIME:","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! The time of a deadline cannot be empty!\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"                    + \"Remember to use the /by keyword.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        case MISSING_DEADLINE_DESC:","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! The description of a deadline cannot be empty!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        case MISSING_EVENT_DESC:","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! The description of an event cannot be empty!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        case MISSING_EVENT_PERIOD:","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! The period of an event cannot be empty!\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"                    + \"Remember to use the /at keyword.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"        case MISSING_FIND_DATE:","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! You need to specify a date!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"        case MISSING_FIND_KEYWORD:","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! You need to specify a keyword!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        case MISSING_TODO_DESC:","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! The description of a todo cannot be empty!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        default:","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"            customMessage \u003d \"OOPS!!! Duke has run into an unspecified error!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"     * Returns a string representation of the DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"     * @return a string representing the exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"        return customMessage;","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ntwbruce":96}},{"path":"src/main/java/exception/DukeExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":" * An enumeration of all possible DukeExceptions.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"public enum DukeExceptionType {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"    CLOSE_INTERRUPT, DB_ADD, DB_DELETE, DB_DONE, DB_LAUNCH, DB_READ, INVALID_DATETIME, INVALID_FIND, INVALID_INPUT,","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"    INVALID_PERIOD, INVALID_SCHEDULE, INVALID_TASK_INDEX, MISSING_DEADLINE_DATETIME, MISSING_DEADLINE_DESC,","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    MISSING_EVENT_DESC, MISSING_EVENT_PERIOD, MISSING_FIND_DATE, MISSING_FIND_KEYWORD, MISSING_TODO_DESC","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ntwbruce":10}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":" * Represents a task with a user-given deadline. The deadline can be a date, or a date and time.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    private final LocalDate deadlineDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    private final boolean isTimeGiven;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a deadline on a given day.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     * @param taskName The task name/description.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"     * @param deadlineDate The deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    public Deadline(String taskName, LocalDate deadlineDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        isTimeGiven \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a deadline on a given day at a given time.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"     * @param taskName The task name/description.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"     * @param deadlineDate The date of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     * @param deadlineTime The time of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    public Deadline(String taskName, LocalDate deadlineDate, LocalTime deadlineTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        isTimeGiven \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Deadline\u0027s list entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Deadline\u0027s list entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        if (isTimeGiven) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"            return \"[D]\" + super.listEntry()","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"                    + \" (by \" + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"                    + \" at \" + deadlineTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"            return \"[D]\" + super.listEntry()","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"                    + \" (by \" + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Deadline\u0027s database entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Deadline\u0027s database entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"    public String databaseEntry() {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        if (isTimeGiven) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"            return \"D\" + super.databaseEntry() + \" \" + deadlineDate + \" \" + deadlineTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"            return \"D\" + super.databaseEntry() + \" \" + deadlineDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"     * Checks if this Deadline object\u0027s deadline is on the given date.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"     * @param l The date against which to check this Deadline object\u0027s deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"     * @return true if the deadline is on the given date.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"    public boolean isTodayTask(LocalDate l) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        return l.isEqual(deadlineDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"    public int deadlineCompare(Deadline otherDeadline) {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"        return this.deadlineTime.compareTo(otherDeadline.deadlineTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"    public int eventCompare(Event otherEvent) {","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        return otherEvent.timeCompare(deadlineTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"    public int timeCompare(LocalTime time) {","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"        return time.compareTo(deadlineTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"    public boolean isWholeDay() {","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"        return !isTimeGiven;","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":100}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":" * Represents a task that takes place over a period of time. The event can take place between dates, on one date","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":" * between two times, or date-time to date-time.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    private LocalDate endDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    private final boolean hasTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    private final boolean hasEndDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for an event taking place on one day, with a start and end time.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"     * @param taskName The task\u0027s name/description.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * @param startDate The date of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     * @param startTime The time at which the event starts.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     * @param endTime The time at which the event ends.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    public Event(String taskName, LocalDate startDate, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        hasTime \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        hasEndDate \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for an event taking place over multiple days, with start and end times.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"     * @param taskName The task\u0027s name/description.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"     * @param startTime The time at which the event starts on the start date.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"     * @param endTime The time at which the event ends on the end date.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    public Event(String taskName, LocalDate startDate, LocalTime startTime, LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        hasTime \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        hasEndDate \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for an event taking place over multiple days.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"     * @param taskName The task\u0027s name/description.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    public Event(String taskName, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        hasTime \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        hasEndDate \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Event\u0027s list entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Event\u0027s list entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        if (hasTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"            if (hasEndDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"                return \"[E]\" + super.listEntry()","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"                        + \" (from \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"                        + \" at \" + startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"                        + \" to \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"                        + \" at \" + endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"                return \"[E]\" + super.listEntry()","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"                        + \" (on \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"                        + \" from \" + startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"                        + \" to \" + endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"            return \"[E]\" + super.listEntry()","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"                    + \" (from \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"                    + \" to \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Event\u0027s database entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Event\u0027s database entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"    public String databaseEntry() {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"        if (hasTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"            if (hasEndDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"                return \"E\" + super.databaseEntry() + \" \" + startDate + \" \" + startTime + \" \" + endDate + \" \" + endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"                return \"E\" + super.databaseEntry() + \" \" + startDate + \" \" + startTime + \" \" + endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"            return \"E\" + super.databaseEntry() + \" \" + startDate + \" \" + endDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"     * Checks if this Event object\u0027s period contains the given date.","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"     * @param l The date against which to check this Event object\u0027s period.","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"     * @return true if the event is ongoing on the given date.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"    public boolean isTodayTask(LocalDate l) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"        return l.isEqual(startDate) || l.isEqual(endDate) || (l.isAfter(startDate) \u0026\u0026 l.isBefore(endDate));","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"    public int deadlineCompare(Deadline otherDeadline) {","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"        return otherDeadline.timeCompare(startTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"    public int eventCompare(Event otherEvent) {","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"        return this.startTime.compareTo(otherEvent.startTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"    public int timeCompare(LocalTime time) {","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"        return time.compareTo(startTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"    public boolean isWholeDay() {","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"        return !hasTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":144}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Represents a task that a user can add to, delete from, find, or set to done in a task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    private boolean done;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     * @param taskName The task\u0027s name/description.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        done \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"     * Sets the task to done.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        done \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Task\u0027s list entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Task\u0027s list entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        if (done) {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Task\u0027s database entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Task\u0027s database entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    public String databaseEntry() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        if (done) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"            return \" | 1 | \" + taskName;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"            return \" | 0 | \" + taskName;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"     * Checks if the Task\u0027s name contains the given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"     * @param keyword The keyword to look for in the Task\u0027s name.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"     * @return true if the Task name contains the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        return taskName.contains(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"     * Checks if the given date takes place during this Task\u0027s deadline or period.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"     * This method is only relevant to Deadline and Event child classes.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"     * @param l The date against which to check this Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"     * @return true if the task is ongoing or takes place on the given date.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    public abstract boolean isTodayTask(LocalDate l);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"        if (otherTask instanceof Deadline) {","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"            return deadlineCompare((Deadline) otherTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        } else if (otherTask instanceof Event) {","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"            return eventCompare((Event) otherTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"            return 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"    public abstract int deadlineCompare(Deadline otherDeadline);","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    public abstract int eventCompare(Event otherEvent);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"    public abstract boolean isWholeDay();","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ntwbruce":90}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Represents a general task to be done. Does not have a deadline or event period.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Todo\u0027s list entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Todo\u0027s list entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"        return \"[T]\" + super.listEntry();","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     * Returns this Todo\u0027s database entry string.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"     * @return A string representation of this Todo\u0027s database entry.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    public String databaseEntry() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        return \"T\" + super.databaseEntry();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"     * Returns false since Todo objects do not have date/time attributes.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"     * @param l The date against which to check this Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"     * @return False.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    public boolean isTodayTask(LocalDate l) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    public int deadlineCompare(Deadline otherDeadline) {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        return 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"    public int eventCompare(Event otherEvent) {","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        return 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    public boolean isWholeDay() {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ntwbruce":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" minHeight\u003d\"552.0\" maxWidth\u003d\"Infinity\" minWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ntwbruce":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":" * Tests the functionality of the Duke class.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     * Tests Duke\u0027s \u0027bye\u0027 function.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    public void testBye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        ByteArrayInputStream newIn \u003d new ByteArrayInputStream(\"bye\".getBytes());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        ByteArrayOutputStream newOut \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        System.setIn(newIn);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        System.setOut(new PrintStream(newOut));","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        String expected \u003d \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"                + \"  Loading Duke...\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"                + \"  Hello! I\u0027m Duke.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"                + \"  What\u0027s up?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"                + \"\u003e   __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"                + \"  See you next time!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expected, newOut.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"     * Tests Duke\u0027s \u0027list\u0027 function with an empty list.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    public void testEmptyList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        ByteArrayInputStream newIn \u003d new ByteArrayInputStream(\"list\\nbye\".getBytes());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        ByteArrayOutputStream newOut \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        System.setIn(newIn);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        System.setOut(new PrintStream(newOut));","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        String expected \u003d \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"                + \"  Loading Duke...\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"                + \"  Hello! I\u0027m Duke.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"                + \"  What\u0027s up?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"                + \"\u003e   __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"                + \"  Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"                + \"\u003e   __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"                + \"  See you next time!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expected, newOut.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"     * Tests Duke\u0027s handling of a missing deadline description.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"    public void testAddDeadline_invalidDesc_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"        ByteArrayInputStream newIn \u003d new ByteArrayInputStream(\"deadline\\nbye\".getBytes());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"        ByteArrayOutputStream newOut \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"        System.setIn(newIn);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"        System.setOut(new PrintStream(newOut));","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        String expected \u003d \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"                + \"  Loading Duke...\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"                + \"  Hello! I\u0027m Duke.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"                + \"  What\u0027s up?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"                + \"\u003e   __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"                + \"  OOPS!!! The description of a deadline cannot be empty!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"                + \"\u003e   __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"                + \"  See you next time!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expected, newOut.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":110}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import java.io.File;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":" * Tests the functionality of the Storage class.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    private final Storage testStorage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * Tests the Storage load function with an empty list.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    public void testEmptyLoad() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(new ArrayList\u003cTask\u003e(100), testStorage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     * Tests the handling of finding an entry in the hard disk that is in the incorrect format.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * @throws IOException If the hard disk is not properly set up and the file cannot be written to.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    public void testLoad_faultyEntry() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        File duke \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        FileWriter writer \u003d new FileWriter(duke, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        writer.write(\"bruh\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        ByteArrayOutputStream newOut \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        System.setOut(new PrintStream(newOut));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        testStorage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        FileWriter rewriter \u003d new FileWriter(duke);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        String expected \u003d \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"                + \"  Loading Duke...\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"                + \"  __________________________________________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"                + \"  OOPS!!! There was a problem with reading tasks in the hard disk!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"                + \"  Check out duke.txt for any erroneous entries or incorrect formatting.\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expected, newOut.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ntwbruce":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ntwbruce":1,"-":20}}]
