[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"    private final String deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        return \"[D]\" + super.listEntry() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"        boolean bye \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"        int listLength \u003d 0;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        System.out.println(\"  ____________________________________________________________\");","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"        System.out.print(\"  Hello! I\u0027m Duck.\\n  What\u0027s up?\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"        System.out.println(\"  ____________________________________________________________\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"        ","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"        while (!bye) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"                System.out.print(\"\u003e \");","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"                String text \u003d input.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"                System.out.println(\"  ____________________________________________________________\");","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"                if (text.equals(\"bye\")) { // bye function: exits the loop, ends process","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"                    System.out.println(\"  See you next time!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"                    bye \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"                    ","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"                } else if (text.equals(\"list\")) { // list function: iterates through taskList, prints Tasks\u0027 listEntry","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"                    System.out.println(\"  Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"                    for (int i \u003d 0; i \u003c listLength; ++i) {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"                        System.out.println(\"  \" + (i + 1) + \".\" + taskList.get(i).listEntry());","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"                    ","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"                } else if (text.split(\" \")[0].equals(\"done\")) { // done function: sets a task to done","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"                    if (text.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"                        throw new DukeException(DukeExceptionType.INVALIDDONE);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"                        int toSet \u003d Integer.parseInt(text.split(\" \")[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"                        if (toSet \u003e listLength || toSet \u003c 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"                            throw new DukeException(DukeExceptionType.INVALIDDONE);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"                        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"                            taskList.get(toSet - 1).setDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"                            System.out.print(\"  Nice! I\u0027ve marked this task as done:\\n    \" + ","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"                                    taskList.get(toSet - 1).listEntry() + \"\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"                } else if (text.split(\" \")[0].equals(\"delete\")) { // delete function: delete a task","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"                    if (text.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"                        throw new DukeException(DukeExceptionType.INVALIDDELETE);","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"                        int toDelete \u003d Integer.parseInt(text.split(\" \")[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"                        if (toDelete \u003e listLength || toDelete \u003c 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"                            throw new DukeException(DukeExceptionType.INVALIDDELETE);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"                        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"                            Task deleted \u003d taskList.remove(toDelete - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"                            System.out.print(\"  Noted. I\u0027ve removed this task:\\n    \" + deleted.listEntry() +","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"                                    \"\\n  Now you have \" + --listLength + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"                    ","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"                } else { // task function: add tasks","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"                    if (text.split(\" \").length \u003d\u003d 1) { // task details not given or not valid task","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"                        switch (text) {","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"                            case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"                                throw new DukeException(DukeExceptionType.DEADLINEDESC);","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"                            case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"                                throw new DukeException(DukeExceptionType.EVENTDESC);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"                            case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"                                throw new DukeException(DukeExceptionType.TODODESC);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"                            default:","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"                                throw new DukeException(DukeExceptionType.INVALIDINPUT);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"                        Task newTask;","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"                        // split text string, first string will be the task type and second string will be task details","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"                        String[] taskString \u003d text.split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"                        String taskType \u003d taskString[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"                        String taskDetails \u003d taskString[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"                        // determine type of task, create new task","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"                        switch (taskType) {","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"                            case \"deadline\": {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"                                String[] details \u003d taskDetails.split(\" /by \");","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"                                ","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"                                if (details.length \u003d\u003d 1) { // time of deadline not given","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"                                    throw new DukeException(DukeExceptionType.DEADLINETIME);","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"                                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"                                    newTask \u003d new Deadline(details[0], details[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"                                }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"                                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"                            }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"                            ","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"                            case \"event\": {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"                                String[] details \u003d taskDetails.split(\" /at \");","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"                                ","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"                                if (details.length \u003d\u003d 1) { // period of event not given","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"                                    throw new DukeException(DukeExceptionType.EVENTPERIOD);","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"                                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"                                    newTask \u003d new Event(details[0], details[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"                                }","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"                                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"                            }","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"                            ","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"                            case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"                                newTask \u003d new Todo(taskDetails);","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"                                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"                                ","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"                            default:  // taskName is invalid","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"                                throw new DukeException(DukeExceptionType.INVALIDINPUT);","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"                        // add task to taskList","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"                        taskList.add(listLength++, newTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"                        System.out.print(\"  Got it. I\u0027ve added this task:\\n    \" + newTask.listEntry() + ","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"                                \"\\n  Now you have \" + listLength + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"                ","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"            } catch (NumberFormatException e) { // NFE throws if the index given in the done function is not an integer","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"                System.out.println(new DukeException(DukeExceptionType.INVALIDDONE).getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"                ","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"            } finally {","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"                System.out.println(\"  ____________________________________________________________\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"        input.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ntwbruce":129,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"    private final String customMessage;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"    ","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"    public DukeException(DukeExceptionType err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"        switch (err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"            case DEADLINEDESC:","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! The description of a deadline cannot be empty!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"            case DEADLINETIME:","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! The time of a deadline cannot be empty!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"            case EVENTDESC:","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! The description of an event cannot be empty!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"            case EVENTPERIOD:","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! The period of an event cannot be empty!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"            case TODODESC:","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! The description of a todo cannot be empty!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"            case INVALIDDONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! That is not a valid task index for completion!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"            case INVALIDDELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! That is not a valid task index for deletion!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"            case INVALIDINPUT:","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  OOPS!!! I don\u0027t recognise the command you\u0027ve given me.\";","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"            default:","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"                this.customMessage \u003d \"  Duck has run into an unspecified error!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        return this.customMessage;","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ntwbruce":40}},{"path":"src/main/java/DukeExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"public enum DukeExceptionType {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"    DEADLINEDESC, DEADLINETIME, EVENTDESC, EVENTPERIOD, TODODESC, INVALIDDONE, INVALIDDELETE, INVALIDINPUT","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ntwbruce":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"    private final String period;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"    public Event(String taskName, String period) {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        return \"[E]\" + super.listEntry() + \" (at: \" + this.period + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"    private boolean done;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"        if (done) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ntwbruce":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"    public String listEntry() {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"        return \"[T]\" + super.listEntry();","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ntwbruce":8}}]
