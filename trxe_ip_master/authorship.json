[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"## duke.tasks.Todo","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"- Separate out the Date/Time parser from `duke.tasks.Task` and its subclasses","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"trxe":5,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"jar {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"    manifest {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"javafx {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"    version \u003d \"8.0.171\"","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"trxe":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.utils.Record;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"    private Parser inputH;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"            sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"            inputH \u003d new Parser(true);","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"            Ui.reply(\"Loading Duke...\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"            Ui.reply(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"    public String getQuery() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"        if (sc.hasNext()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"            return sc.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"            return new String();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"    public Record getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"            Record r \u003d inputH.query(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"            return r;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"            return new Record(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"    public void mainLoop() {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"        while (true) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"            String input \u003d getQuery();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"            Record r \u003d getResponse(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"            Ui.reply(r.msg());","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"            if (r.bye()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"        String logo \u003d \" ____        _        \\n\" ","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\" ","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\" ","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\" ","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"        Ui.reply(duke.getResponse(\"greet\").msg());","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"        duke.mainLoop();","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"trxe":59,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":" * A GUI for gui.Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"ui/MainWindow2.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"            assert fxmlLoader !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDukeAndMain(duke, this);","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"    ","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"    public void stop() throws Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"        super.stop();","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":41}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import duke.utils.CheckedFunction;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"import duke.utils.Record;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"    private final TaskList database;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    private final HashMap\u003cString, CheckedFunction\u003cString, Record\u003e\u003e commandList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"     * Creates a Parser which initializes a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"     * @param loadFromStorage Inform the TaskList whether to load tasks from storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"    public Parser(boolean loadFromStorage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"        this(new TaskList(loadFromStorage));","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"     * Creates a Parser with TaskList db and with the recognized commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"     * @param database TaskList to be added.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"    public Parser(TaskList database) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"        this.database \u003d database;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"        commandList.put(\"greet\", this::greet);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"        commandList.put(\"bye\", this::bye);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"        commandList.put(\"list\", this::list);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"        commandList.put(\"done\", this::done);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"        commandList.put(\"delete\", this::delete);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"        commandList.put(\"todo\", this::todo);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"        commandList.put(\"deadline\", this::deadline);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"        commandList.put(\"event\", this::event);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"        commandList.put(\"help\", this::help);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"        commandList.put(\"clear\", this::clear);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"        commandList.put(\"find\", this::find);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"     * Takes in a command, and if command is found, passes to it the remaining arguments.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"     * @param input","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"    public Record query(String input) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"            Scanner sc \u003d new Scanner(input);","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"            String cmd \u003d sc.next();","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"            String raw \u003d sc.hasNext() ? sc.nextLine().substring(1) : \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"            if (commandList.containsKey(cmd)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"                return commandList.get(cmd).apply(raw);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"Please enter a command.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"    private String getSizeMsg() {","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"        return \"\\n\\t Now you have \" + database.size() + String.format(\" task%sin the list.\", database.size() !\u003d 1 ? \"s \" : \" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"    private Record greet(String args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"        return new Record(\"Hello! I\u0027m Duke\\n\\t What can I do for you?\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"                \"\\n\\t (Tip: type help [COMMAND] to get help with my functions!)\");","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"trxe"},"content":"    private boolean verify() {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"trxe"},"content":"        System.out.println(\"WARNING: This procedure is irreversible.\" + \"\\n\\t Are you sure about proceeding? [y/n]\");","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"trxe"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"trxe"},"content":"        char response \u003d sc.hasNext() ? sc.next().charAt(0) : \u0027x\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"trxe"},"content":"        while (response !\u003d \u0027y\u0027 || response !\u003d \u0027n\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"trxe"},"content":"            System.out.println(\"Are you sure about proceeding? [y/n]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"trxe"},"content":"            response \u003d sc.hasNext() ? sc.next().charAt(0) : \u0027x\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"trxe"},"content":"        return response \u003d\u003d \u0027y\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"trxe"},"content":"    private Record bye(String args) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"trxe"},"content":"        database.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"trxe"},"content":"        return new Record(\"Bye. Hope to see you again soon!\", true);","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"trxe"},"content":"    private Record list(String args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"trxe"},"content":"        if (database.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"trxe"},"content":"            return new Record(\"You have no tasks!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"trxe"},"content":"        return new Record(\"Here are the tasks in your list:\\n \" + database.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"trxe"},"content":"    private Record done(String args) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"trxe"},"content":"        if (database.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"You have no tasks.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"trxe"},"content":"            Task t \u003d database.markAsDone(Integer.parseInt(args) - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"trxe"},"content":"            return new Record(\"Nice! I\u0027ve marked this task as done:\\n\\t   \" + t);","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"trxe"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"trxe"},"content":"            throw new DukeException(String.format(\"Enter a valid index (from 1 to %d).\", database.size()));","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"trxe"},"content":"    private Record delete(String args) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"trxe"},"content":"            Task t \u003d database.delete(Integer.parseInt(args) - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"trxe"},"content":"            return new Record(\"Noted. I\u0027ve removed this task:\\n\\t   \" + t + getSizeMsg());","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"trxe"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"trxe"},"content":"            if (database.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"trxe"},"content":"                throw new DukeException(\"You have no tasks.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"trxe"},"content":"            throw new DukeException(String.format(\"Enter a valid index (from 1 to %d).\", database.size()));","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":127,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":128,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":129,"author":{"gitId":"trxe"},"content":"    private Record todo(String args) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"trxe"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":132,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"trxe"},"content":"        Task t \u003d new Todo(args);","lastModifiedDate":"2021-08-14"},{"lineNumber":134,"author":{"gitId":"trxe"},"content":"        database.add(t);","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"trxe"},"content":"        return new Record(\"Got it. I\u0027ve added this task:\\n\\t   \" + t + getSizeMsg());","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":137,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":138,"author":{"gitId":"trxe"},"content":"    private Record deadline(String raw) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":139,"author":{"gitId":"trxe"},"content":"        String[] args \u003d raw.split(\"( /by )\");","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"trxe"},"content":"        Deadline t \u003d new Deadline();","lastModifiedDate":"2021-08-14"},{"lineNumber":141,"author":{"gitId":"trxe"},"content":"        if (args.length \u003d\u003d 0 || args[0].equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":143,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"trxe"},"content":"        if (args.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"trxe"},"content":"            t.addDesc(args[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"trxe"},"content":"            t.addTime(args[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"trxe"},"content":"            database.add(t);","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"trxe"},"content":"        } else if (args.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"trxe"},"content":"            throw Task.FORMAT_EXCEPTION;","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"trxe"},"content":"        return new Record(\"Got it. I\u0027ve added this task:\\n\\t   \" + t + getSizeMsg());","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":153,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":154,"author":{"gitId":"trxe"},"content":"    private Record event(String raw) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"trxe"},"content":"        String[] args \u003d raw.split(\"( /at )\");","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"trxe"},"content":"        Event t \u003d new Event();","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"trxe"},"content":"        if (args.length \u003d\u003d 0 || args[0].trim().equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"trxe"},"content":"        if (args.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"trxe"},"content":"            t.addDesc(args[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"trxe"},"content":"            t.addTime(args[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"trxe"},"content":"            database.add(t);","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"trxe"},"content":"        } else if (args.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"trxe"},"content":"            throw Task.FORMAT_EXCEPTION;","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"trxe"},"content":"        return new Record(\"Got it. I\u0027ve added this task:\\n\\t   \" + t + getSizeMsg());","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":169,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"trxe"},"content":"    private Record help(String raw) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"trxe"},"content":"        if (raw.equals(new String())) {","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"trxe"},"content":"            return new Record(Ui.help());","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"trxe"},"content":"        } else if (commandList.containsKey(raw)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"trxe"},"content":"            return new Record(Ui.help(raw));","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"trxe"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"This command isn\u0027t in my books!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"trxe"},"content":"    private Record clear(String raw) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"trxe"},"content":"        database.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"trxe"},"content":"        return new Record(\"Task list was cleared.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"trxe"},"content":"        /*","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"trxe"},"content":"        if (verify()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"trxe"},"content":"            db.clear();","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"trxe"},"content":"            return new Record(\"Task list was cleared.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"trxe"},"content":"        else return new Record(\"No worries! No changes were made.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"trxe"},"content":"         */","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"trxe"},"content":"    private Record find(String raw) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"trxe"},"content":"        TaskList filtered \u003d database.find(raw);","lastModifiedDate":"2021-09-01"},{"lineNumber":194,"author":{"gitId":"trxe"},"content":"        if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"trxe"},"content":"            return new Record(\"No matching tasks found.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"trxe"},"content":"        return new Record(\"Here are the matching tasks in your list:\\n \" + filtered);","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":199}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"import java.io.RandomAccessFile;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"    public final static String TASK \u003d \"T\";","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    public final static String DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"    public final static String EVENT \u003d \"E\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    public final static DukeException ERROR_DB \u003d new DukeException(\"Error loading database.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"    private final RandomAccessFile raf;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"    private final File txt;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"    public Storage(TaskList db) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"            // String filename \u003d Main.class.getResource(\"bin/duke.txt\").getPath();","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"            String filename \u003d \"build/resources/main/duke/bin/duke.txt\";","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"            txt \u003d new File(filename);","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"            raf \u003d new RandomAccessFile(txt, \"rwd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"            assert txt !\u003d null \u0026\u0026 raf !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"            while (raf.getFilePointer() \u003c raf.length()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"                Task t \u003d parse(raf.readLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"                if (t !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"                    db.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"            update(db);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"            throw ERROR_DB;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"    public Task parse(String line) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"            String[] args \u003d line.split(\"( \\\\| )\", 3);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"            if (args.length \u003c 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"                return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"            boolean done \u003d Integer.parseInt(args[1]) \u003d\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"            switch (args[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"            case TASK:","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"                return new Todo(args[2], done);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"                return new Deadline(args[2], done);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"            case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"                return new Event(args[2], done);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"                throw ERROR_DB;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"        } catch (IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"            throw ERROR_DB;","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"    public void update(TaskList database) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"            raf.seek(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"            raf.setLength(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"            List\u003cTask\u003e databaseList \u003d database.getList();","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"            for (Task a : databaseList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"                raf.writeBytes(a.toDatabaseFormat());","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"                raf.writeBytes(System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"Error in writing to duke.txt.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"    public void update(Task task) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"trxe"},"content":"            raf.writeBytes(task.toDatabaseFormat());","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"trxe"},"content":"            raf.writeBytes(System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"trxe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"trxe"},"content":"            throw ERROR_DB;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"trxe"},"content":"    public void close() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"trxe"},"content":"            raf.writeBytes(System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"trxe"},"content":"            raf.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"trxe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"trxe"},"content":"            throw ERROR_DB;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"trxe"},"content":"    public void purge() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"trxe"},"content":"            raf.setLength(0);","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"trxe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"trxe"},"content":"            throw ERROR_DB;","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"trxe"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"trxe"},"content":"            Scanner sc \u003d new Scanner(txt);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"trxe"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"trxe"},"content":"                sb.append(sc.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"trxe"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"trxe"},"content":"            return sb.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"trxe"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"trxe"},"content":"            return \"Error: duke.txt not found\";","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"trxe":119}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"    private final static DukeException ERROR_DB \u003d new DukeException(\"Error loading database.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"    private List\u003cTask\u003e database \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"     * Creates empty task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"     * If loadFromStorage \u003d\u003d true, initializes database and loads any stored tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"     * @param loadFromStorage Inform the TaskList whether to load tasks from storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"    public TaskList(boolean loadFromStorage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"        if (loadFromStorage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"            this.storage \u003d new Storage(this);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"     * @param task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"    public void add(Task task) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"        database.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"            storage.update(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"     * Marks the task at index as complete.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"     * @param index of task to be marked as complete.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"    public Task markAsDone(int index) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"        Task t \u003d database.get(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"        t.markComplete();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"            storage.update(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"        return t;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"     * @param index of task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"     * @return The deleted task.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"    public Task delete(int index) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"        Task t \u003d database.get(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"        database.remove(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"            storage.update(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"        return t;","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"     * Returns if the task is in this task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"     * @param task to be checked.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"     * @return if task list contains task.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"trxe"},"content":"        return database.contains(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"trxe"},"content":"     * Returns the number of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"trxe"},"content":"     * @return number of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"trxe"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"trxe"},"content":"        return database.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"trxe"},"content":"    public void close() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"trxe"},"content":"        storage.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"trxe"},"content":"     * Clears the task list and the database.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"trxe"},"content":"    public void clear() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"trxe"},"content":"        database \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"trxe"},"content":"        storage.purge();","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"trxe"},"content":"     * Getter for the enclosed List\u003cTask\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"trxe"},"content":"     * @return The raw task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"trxe"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"trxe"},"content":"        return database;","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"trxe"},"content":"    public TaskList find(String word) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"trxe"},"content":"        TaskList filtered \u003d new TaskList(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"trxe"},"content":"        filtered.database \u003d database.stream().filter(x -\u003e x.matchWord(word)).collect(Collectors.toList());","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"trxe"},"content":"        return filtered;","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"trxe"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"trxe"},"content":"        if (database.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"trxe"},"content":"            return \"You have no tasks!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"trxe"},"content":"        ","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"trxe"},"content":"        IntStream.range(0, database.size())","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"trxe"},"content":"                .forEach(x -\u003e sb.append(String.format(\"\\n\\t %d. %s\", x + 1, database.get(x))));","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"trxe"},"content":"        return sb.substring(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"trxe":132}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"    private static File HELP;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"    private final static String BORDERS \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"     * Prints reply to the user, enclosed above and below by borders.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"     * @param reply Reply to user.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    public static void reply(String reply) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"        System.out.print(BORDERS);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"        System.out.print(\"\\n\\t \");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"        System.out.println(reply);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"        System.out.println(BORDERS);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"     * Returns the Duke help manual as a formatted string.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"     * @return Duke help manual.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"    public static String help() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"            if (HELP \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"                String filename \u003d Main.class.getResource(\"bin/help.txt\").getPath();","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"                HELP \u003d new File(filename);","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"            Scanner sc \u003d new Scanner(HELP);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"                sb.append(sc.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"                sb.append(\"\\n\\t \");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"            return sb.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"help.txt not found @ \" + HELP);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"    ","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"     * Returns manual segment containing the information for a certain command.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"     * @param cmd A command in Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"     * @return Duke help manual.","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"    public static String help(String cmd) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"            if (HELP \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"                String filename \u003d Main.class.getResource(\"bin/help.txt\").getPath();","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"                HELP \u003d new File(filename);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"            Scanner sc \u003d new Scanner(HELP);","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"            boolean found \u003d false;","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"                if (line.contains(\"\u003e \" + cmd)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"                    found \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"                    sb.append(line);","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"                    break;","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"            String sep \u003d BORDERS.substring(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"            while (found \u0026\u0026 sc.hasNext()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"                if (line.contains(sep)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"                    break;","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"                sb.append(\"\\n\\t \");","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"trxe"},"content":"                sb.append(line);","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"trxe"},"content":"            if (!found) {","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"trxe"},"content":"                return String.format(\"I don\u0027t have a manual entry for ` %s `!\", cmd);","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"trxe"},"content":"            return sb.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"trxe"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"help.txt not found at file location: \" + HELP);","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"trxe":91}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"     * Instantiates a blank Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"    public Deadline() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"     * Instantiates a Deadline based on a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"    public Deadline(String entry, boolean done) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"            String[] args \u003d entry.split(\"( \\\\| )\", 3);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"            if (args.length \u003c 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"                throw new DukeException(\"Error reading DB\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"            super.desc \u003d args[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"            super.done \u003d done;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"            super.dateTime \u003d DukeDateTime.parse(args[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"            if (args.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"                super.details \u003d args[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"Error reading DB\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"     * Adds a time to the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"     * @param rawArgs Argument of the format \"DATE_TIME / ADDITIONAL_INFO\".","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"    public void addTime(String rawArgs) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"        String[] args \u003d rawArgs.split(\" / \");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"        if (args.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"            dateTime \u003d DukeDateTime.parse(args[0].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"            if (args.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"                details \u003d args[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"            details \u003d rawArgs;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"     * Returns this deadline formatted as a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"     * @return String representing this deadline in database format.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"    public String toDatabaseFormat() {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"        // return String.format(\"D | %d | %s | %s\", super.done ? 1 : 0, super.desc, dl);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"        return String.format(\"D | %d | %s | %s | %s\", super.done ? 1 : 0, super.desc,","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"                dateTime.format(DukeDateTime.Format.DATE_LONG, DukeDateTime.Format.PRINT_TIME), details);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"        String timeSeq \u003d dateTime.format();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"        String desc \u003d (details.equals(\"\") ? details : \", \" + details);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"        return \"[D]\" + super.toString() + (timeSeq !\u003d null ? String.format(\" (by: %s)\", timeSeq) : \"\") + desc;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":74}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"    private DukeDateTime end \u003d new DukeDateTime();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"     * Instantiates a blank Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"    public Event() {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"     * Instantiates an Event based on a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"    public Event(String entry, boolean done) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"            String[] args \u003d entry.split(\"( \\\\| )\", 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"            if (args.length \u003c 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"                throw new DukeException(\"Error reading DB\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"            super.desc \u003d args[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"            super.done \u003d done;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"            super.dateTime \u003d DukeDateTime.parse(args[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"            end \u003d DukeDateTime.parse(args[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"            if (args.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"                super.details \u003d args[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"            throw new DukeException(\"Error reading DB\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"     * Adds a start and end time to the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"     * @param rawArgs Argument of the format \"START_DATE_TIME ~ END_DATE_TIME / ADDITIONAL_INFO\".","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"    public void addTime(String rawArgs) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"        String[] args \u003d rawArgs.split(\" / \");","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"        if (args.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"            String[] parts \u003d args[0].split(\"~\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"            dateTime \u003d DukeDateTime.parse(parts[0].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"                end \u003d DukeDateTime.parse(parts[1].trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"            if (args.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"                details \u003d args[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"            details \u003d rawArgs;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"     * Returns this event formatted as a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"     * @return String representing this event in database format.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"    public String toDatabaseFormat() {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"        DateTimeFormatter d \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"        // return String.format(\"E | %d | %s | %s\", super.done ? 1 : 0, super.desc, time);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"        return String.format(\"E | %d | %s | %s | %s | %s\", super.done ? 1 : 0, super.desc,","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"                dateTime.format(DukeDateTime.Format.DATE_LONG, DukeDateTime.Format.PRINT_TIME),","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"                end.format(DukeDateTime.Format.DATE_LONG, DukeDateTime.Format.TIME), details);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"        if (super.equals(obj)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"trxe"},"content":"            if (obj instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"trxe"},"content":"                Event that \u003d (Event) obj;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"trxe"},"content":"                return end.equals(that.end);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"trxe"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"trxe"},"content":"        String timeSeq \u003d dateTime.format() + \" to \" + end.format();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"trxe"},"content":"        String detailsAdd \u003d (details.equals(\"\") ? details : \" -- \" + details);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"trxe"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s%s)\", timeSeq, detailsAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":94}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"    public final static DukeException FORMAT_EXCEPTION \u003d new DukeException(\"I don\u0027t understand this entry, enter \" + ","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"            \"help (cmd) for assistance.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"    protected String desc \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"    protected String details \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"    protected DukeDateTime dateTime \u003d new DukeDateTime();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"     * Instantiates an empty task.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"    public Task() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    protected Task(String desc) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"     * Instantiates an Event based on a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"    public Task(String desc, boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"     * Adds a description to this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"     * @param desc","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"    public void addDesc(String desc) {","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"     * Marks this task as complete.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"        done \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"    abstract void addTime(String time) throws DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"     * Returns this task formatted as a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"     * @return String representing this event in database format.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"    public boolean matchWord(String word) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"        return desc.contains(word) || details.contains(word);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"    public abstract String toDatabaseFormat();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"            return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"            Task that \u003d (Task) obj;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"            return (desc.equals(that.desc) \u0026\u0026 done \u003d\u003d that.done \u0026\u0026 details.equals((that.details)) \u0026\u0026 dateTime.equals(that.dateTime));","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"        return (done ? \"[X] \" : \"[ ] \") + desc;","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":79}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"     * Instantiates a blank Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"    public Todo(String desc) {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"        super(desc);","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"     * Instantiates a Todo based on a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"    public Todo(String entry, boolean done) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"        super(entry, done);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"    void addTime(String rawArgs) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"     * Returns this todo formatted as a database entry.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"     * @return String representing this event in database format.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"    public String toDatabaseFormat() {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"        return String.format(\"T | %d | %s \", super.done ? 1 : 0, super.desc);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"        return \"[T]\" + (done ? \"[X] \" : \"[ ] \") + desc;","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":35}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/duke/ui/DialogBox.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"            assert fxmlLoader !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"        db.setMaxHeight(100000.0);","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":63}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.Main;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import duke.utils.Record;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"    private Main main;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"    private Image userImage;","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"    private Image dukeImage;","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"        userImage \u003d new Image(this.getClass().getResourceAsStream(\"/duke/images/MyLeftBall.gif\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"        dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/duke/images/MyRightBall.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"        assert userImage !\u003d null \u0026\u0026 dukeImage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"    public void setDukeAndMain(Duke duke, Main main) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"        this.main \u003d main;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"        Record r \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"        String response \u003d r.msg();","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"        if (r.bye()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"                main.stop();","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"                Ui.reply(\"Error in quitting Duke.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":67}},{"path":"src/main/java/duke/utils/CheckedFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.utils;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"public interface CheckedFunction\u003cT, R\u003e {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"    R apply(T t) throws DukeException;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":5}},{"path":"src/main/java/duke/utils/DukeDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.utils;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"public class DukeDateTime implements Comparable\u003cDukeDateTime\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"    private enum Level {TIME, DATE, DATETIME}","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"    public enum Format {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"        DT_FULL(\"yyyy-MM-dd HH:mm\", Level.DATETIME), // DT_SHORT(\"MM-dd HH:mm\", Level.DATETIME),","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"        TIME(\"HH:mm\", Level.TIME), // DATE_SHORT(\"MM-dd\", Level.DATE),","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"        DATE_LONG(\"yyyy-MM-dd\", Level.DATE),","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"        PRINT_TIME(\"HH:mm\", Level.TIME), // PRINT_DATE_SHORT(\"dd MMM\", Level.DATE),","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"        PRINT_DATE_LONG(\"dd MMM yyyy\", Level.DATE);","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"        protected final DateTimeFormatter format;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"        protected final String pattern;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"        protected String regex;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"        protected Level lvl;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"        Format(String pattern, Level lvl) {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"            this.pattern \u003d pattern;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"            this.regex \u003d pattern;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"            this.lvl \u003d lvl;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"            String[] rep \u003d {\"d\", \"y\", \"M\", \"m\", \"H\"};","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"            for (String c : rep) {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"                this.regex \u003d regex.replace(c, \"\\\\d\");","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"            this.format \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"    private LocalDateTime dateTime \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"    private LocalDate date \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"    private LocalTime time \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"     * Instantiates an empty DukeDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"    public DukeDateTime() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"     * Instantiates a new DukeDateTime based on a LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"     * @param dateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"    public DukeDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"     * Returns a DukeDateTime as parsed from arg.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"     * @param arg Formatted date/time string.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"     * @return DukeDateTime as parsed from arg.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"    public static DukeDateTime parse(String arg) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"        DukeDateTime out \u003d new DukeDateTime();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"        String[] args \u003d arg.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"        if (args.length \u003e 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"            throw new DukeException(String.format(\"Incorrect date and time formatting:\" + \"\\n\\t\\t \\\"%s\\\"\" ","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"                    + \"\\n\\t \" + \"Enter `help` to check the correct formatting.\", arg));","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"        if (args.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"            out.dateTime \u003d LocalDateTime.parse(arg, Format.DT_FULL.format);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"            if (args[0].matches(Format.DATE_LONG.regex)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"                out.date \u003d LocalDate.parse(args[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"            } else if (args[0].matches(Format.TIME.regex)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"                out.time \u003d LocalTime.parse(args[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"        return out;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"trxe"},"content":"     * Default formatting of this DukeDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"trxe"},"content":"     * @return String formatting of this DukeDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"trxe"},"content":"    public String format() {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"trxe"},"content":"        Format f1 \u003d Format.PRINT_DATE_LONG, f2 \u003d Format.PRINT_TIME;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"trxe"},"content":"        return format(f1, f2);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"trxe"},"content":"     * Formatting of this DukeDateTime according to f.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"trxe"},"content":"     * @param f Format desired.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"trxe"},"content":"     * @return String formatting of this DukeDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"trxe"},"content":"    public String format(Format f) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"trxe"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"trxe"},"content":"            return dateTime.format(f.format);","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"trxe"},"content":"        if (date !\u003d null \u0026\u0026 f.lvl \u003d\u003d Level.DATE) {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"trxe"},"content":"            return date.format(f.format);","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"trxe"},"content":"        if (time !\u003d null \u0026\u0026 f.lvl \u003d\u003d Level.TIME) {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"trxe"},"content":"            return time.format(f.format);","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"trxe"},"content":"        return \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"trxe"},"content":"     * Formatting of this DukeDateTime according to f1, f2.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"trxe"},"content":"     * Separated by a single blank space.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"trxe"},"content":"     * @param f1 Format desired.","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"trxe"},"content":"     * @param f2 Format desired.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"trxe"},"content":"     * @return String formatting of this DukeDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"trxe"},"content":"    public String format(Format f1, Format f2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"trxe"},"content":"        String s1 \u003d format(f1);","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"trxe"},"content":"        String s2 \u003d format(f2);","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"trxe"},"content":"        if (s1.equals(\"\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"trxe"},"content":"            return s2;","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"trxe"},"content":"        if (s2.equals(\"\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"trxe"},"content":"            return s1;","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"trxe"},"content":"        return s1 + \" \" + s2;","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"trxe"},"content":"    public int compareTo(DukeDateTime that) {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"trxe"},"content":"        if (this.dateTime !\u003d null \u0026\u0026 that.dateTime !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"trxe"},"content":"            return this.dateTime.compareTo(that.dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"trxe"},"content":"        if (this.time !\u003d null \u0026\u0026 that.time !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"trxe"},"content":"            return this.time.compareTo(that.time);","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"trxe"},"content":"        if (this.date !\u003d null \u0026\u0026 that.date !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"trxe"},"content":"            return this.date.compareTo(that.date);","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"trxe"},"content":"        int thisNum \u003d (dateTime !\u003d null ? 0 : date !\u003d null ? 1 : time !\u003d null ? 2 : 3);","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"trxe"},"content":"        int thatNum \u003d (that.dateTime !\u003d null ? 0 : that.date !\u003d null ? 1 : that.time !\u003d null ? 2 : 3);","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"trxe"},"content":"        return thisNum - thatNum;","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"trxe"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"trxe"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"trxe"},"content":"            return true;","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"trxe"},"content":"        if (obj instanceof DukeDateTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"trxe"},"content":"            DukeDateTime that \u003d (DukeDateTime) obj;","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"trxe"},"content":"            return this.compareTo(that) \u003d\u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"trxe"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"trxe"},"content":"            return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"trxe"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"trxe"},"content":"            return dateTime.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"trxe"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"trxe"},"content":"            return date.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"trxe"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"trxe"},"content":"            return time.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"trxe"},"content":"        return \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"trxe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"trxe"},"content":"        System.out.println(\"Driver testing duke.utils.DukeDateTime\");","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"trxe"},"content":"        String date \u003d \"2021-08-22\";","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"trxe"},"content":"        String startTime \u003d \"04:20\";","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"trxe"},"content":"        String endTime \u003d \"06:09\";","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"trxe"},"content":"        String desc \u003d \"memes\";","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"trxe"},"content":"        String eventArgs \u003d date + \" \" + startTime + \" ~ \" + endTime;","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"trxe"},"content":"        String deadlineArgs \u003d date + \" \" + startTime;","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"trxe"},"content":"            System.out.println(DukeDateTime.parse(startTime).format());","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"trxe"},"content":"            System.out.println(DukeDateTime.parse(eventArgs.split(\" \")[0]).format());","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"trxe"},"content":"            System.out.println(DukeDateTime.parse(eventArgs.split(\" \")[1]).format());","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"trxe"},"content":"            System.out.println(DukeDateTime.parse(eventArgs).format());","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"trxe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"trxe"},"content":"            System.err.println(e);","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"trxe":188}},{"path":"src/main/java/duke/utils/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.utils;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"    public DukeException(String e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"        super(\"☹ OOPS!!! \" + e);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":7}},{"path":"src/main/java/duke/utils/Record.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"package duke.utils;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"public class Record {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"    private final String message;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"    private final boolean terminate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"     * Creates a new record.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"     * @param message Message Duke returns.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"     * @param terminate Is Duke supposed to terminate after this?","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"    public Record(String message, boolean terminate) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"        this.terminate \u003d terminate;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"     * Creates a non-terminating record.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"     * @param message Message Duke returns.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"    public Record(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"        this(message, false);","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"     * Getter for message.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"     * @return message.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"    public String msg() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"        return message;","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"     * Getter for terminate.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"     * @return Is Duke supposed to terminate after this?","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"    public boolean bye() {","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"        return terminate;","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"            return true;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"        if (obj instanceof Record) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"            Record that \u003d (Record) obj;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"            return this.message.equals(that.message) \u0026\u0026 this.terminate \u003d\u003d that.terminate;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"            return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"        return message;","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":62}},{"path":"src/main/resources/duke/ui/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"550.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":19}},{"path":"src/main/resources/duke/ui/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"700.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"      \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"341.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"45.0\" prefWidth\u003d\"616.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"641.0\" layoutY\u003d\"341.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"45.0\" prefWidth\u003d\"45.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" prefHeight\u003d\"323.0\" prefWidth\u003d\"700.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"320.0\" prefWidth\u003d\"690.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":27}},{"path":"src/main/resources/duke/ui/MainWindow2.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"      \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"341.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"45.0\" prefWidth\u003d\"517.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"541.0\" layoutY\u003d\"341.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"45.0\" prefWidth\u003d\"45.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" prefHeight\u003d\"323.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"320.0\" prefWidth\u003d\"581.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":27}},{"path":"src/main/resources/duke/ui/TEST.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"      \u003cText layoutX\u003d\"253.0\" layoutY\u003d\"204.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"BLUESDFHJKSFHL\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"trxe":11}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"     * A single Todo is added to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"trxe"},"content":"    void todo_single() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"trxe"},"content":"            TaskList taskList \u003d new TaskList(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"trxe"},"content":"            Parser inputH \u003d new Parser(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"trxe"},"content":"            inputH.query(\"todo test1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"trxe"},"content":"            assertEquals(taskList.contains(new Todo(\"test1\")), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"trxe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"trxe"},"content":"            if (e.equals(Storage.ERROR_DB)) fail(\"Failed to delete residual files.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"trxe"},"content":"            fail(\"Single todo not added.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"trxe"},"content":"     * A single Deadline is added to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"trxe"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"trxe"},"content":"    void deadline_single() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"trxe"},"content":"            TaskList taskList \u003d new TaskList(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"trxe"},"content":"            Parser inputH \u003d new Parser(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"trxe"},"content":"            inputH.query(\"deadline dl one /by 2021-08-24 18:00 / yeah\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"trxe"},"content":"            Deadline d \u003d new Deadline(\"dl one | 2021-08-24 18:00 | yeah\", false);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"trxe"},"content":"            assertEquals(taskList.contains(d), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"trxe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"trxe"},"content":"            if (e.equals(Storage.ERROR_DB)) fail(\"Failed to delete residual files.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"trxe"},"content":"            fail(\"Single deadline not added.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"trxe"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"trxe"},"content":"     * The task list is cleared.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"trxe"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"trxe"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"trxe"},"content":"    void clear() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"trxe"},"content":"            TaskList taskList \u003d new TaskList(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"trxe"},"content":"            Parser inputH \u003d new Parser(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"trxe"},"content":"            inputH.query(\"todo test1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"trxe"},"content":"            assertEquals(true, taskList.contains(new Todo(\"test1\")));","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"trxe"},"content":"            inputH.query(\"clear\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"trxe"},"content":"            assertEquals(0, taskList.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"trxe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"trxe"},"content":"            if (e.equals(Storage.ERROR_DB)) fail(\"Failed to delete residual files.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"trxe"},"content":"            fail(\"Failed to clear task list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"trxe"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"trxe"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"trxe"},"content":"    void find() {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"trxe"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"trxe"},"content":"            TaskList taskListH \u003d new TaskList(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"trxe"},"content":"            Parser inputH \u003d new Parser(taskListH);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"trxe"},"content":"            inputH.query(\"todo test1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"trxe"},"content":"            inputH.query(\"deadline Report /by 2021-11-21 15:20 / finalize bibliography\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"trxe"},"content":"            inputH.query(\"deadline Another report /by 2021-06-09 04:20 / test2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"trxe"},"content":"            inputH.query(\"event dummy /at 08:00 ~ 18:00 / stock\");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"trxe"},"content":"            assertEquals(4, taskListH.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"trxe"},"content":"            String msgH \u003d inputH.query(\"find test\").msg();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"trxe"},"content":"            msgH \u003d msgH.replace(\" matching \", \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"trxe"},"content":"            TaskList taskListI \u003d new TaskList(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"trxe"},"content":"            Parser inputI \u003d new Parser(taskListI);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"trxe"},"content":"            inputI.query(\"todo test1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"trxe"},"content":"            inputI.query(\"deadline Another report /by 2021-06-09 04:20 / test2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"trxe"},"content":"            assertEquals(2, taskListI.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"trxe"},"content":"            String msgI \u003d inputI.query(\"list\").msg();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"trxe"},"content":"            assertEquals(msgH, msgI);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"trxe"},"content":"            ","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"trxe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"trxe"},"content":"            if (e.equals(Storage.ERROR_DB)) fail(\"Failed to delete residual files.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"trxe"},"content":"            fail(\"Failed to clear tasklist\");","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"trxe"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"trxe"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"trxe"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"trxe":95}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"todo join sports club","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"fml","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":"delete 5","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"delete 8","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"trxe":17}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"todo testing","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"event help me /at 2021-12-12 12:00 ~ 23:59 / test","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"bye","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"trxe":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"java -classpath ..\\bin duke.Duke \u003c input1.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"trxe":1}},{"path":"text-ui-test/runtest1.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"trxe"},"content":"@ECHO OFF","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"trxe"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"trxe"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"trxe"},"content":"REM delete output from previous run","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"trxe"},"content":"if exist ACTUAL1.TXT del ACTUAL1.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"trxe"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"trxe"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"trxe"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"trxe"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"trxe"},"content":"    exit /b 1","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"trxe"},"content":")","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"trxe"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"trxe"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"trxe"},"content":"java -classpath ..\\bin duke.Duke \u003c input1.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"trxe"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"trxe"},"content":"REM compare the output to the expected output","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"trxe"},"content":"REM FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"trxe":21}}]
