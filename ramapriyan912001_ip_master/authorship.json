[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"T,1,read book","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"D,1,something,5pm","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":2}},{"path":"src/main/java/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"public class CommandNotFoundException extends DukeException{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandNotFoundException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandNotFoundException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    public TaskManager generateTaskManager() {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"        return new TaskManager();","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * Enum class for types of events.","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    enum Type {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        TODO,","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"        public static String typeString(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            if(type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"                return \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"            } else if(type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"                return \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            } else if(type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"                return \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        public static String getConnector(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"            if(type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"                return \"at\";","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"            } else if(type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"                return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            } else if(type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"                return \"by\";","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        /** The task itself, in String form */","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        private String task;","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        /** The done status of the task */","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        private Boolean done;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        /** The type of the task, defined by the enum Type */","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        private Type type;","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"         * Constructor to initialise the task","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"         * @param task The task itself.","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"         * @param type The type of the task defined by the enum Type.","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        public Task(String task, Type type) {","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"            this.done \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"            this.type \u003d type;","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        public Task() {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"            this.task \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"            this.done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"            this.type \u003d Type.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"         * Getter to see if the task is done.","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"         * @return Boolean about whether the task is done.","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        public Boolean isDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"            return this.done;","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"         * Setter to set the task as done or not done.","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"         * @param done Boolean about whether the task is done.","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        public void setDone(Boolean done) {","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            this.done \u003d done;","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        public void setTask(String task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"        public void setType(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"            this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"         * String representation of the done status of task","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"         * @return String representation of the done status of task.","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        public String checkBox() {","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"            if(this.isDone()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"                return \"[X]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"                return \"[ ]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"        public Type getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"            return this.type;","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        public String getTask() {","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"            return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"         * String representation of the type of task.","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"         * @return String representation of the type of task.","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"        public String typeString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"            if(this.type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"                return \"[T]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (this.type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"                return \"[D]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"                return \"[E]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"        public String taskString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"            if(this.type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"                return this.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"                String[] tokens \u003d task.split(\",\");","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"                return String.format(\"%s (%s: %s)\", tokens[0], Type.getConnector(this.type), tokens[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"        public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"            return String.format(\"%s%s %s\", typeString(), checkBox(), taskString());","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"    public class TaskManager {","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"        /** Initialising an empty array into which tasks can be added/manipulated/deleted */","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"        private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"         * This method provides a string that is the visual representation of the tasks seen by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"         * @return The visual representation of task list.","lastModifiedDate":"2021-08-16"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"        public String taskListString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"            StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"ramapriyan912001"},"content":"            ans.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"            for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"                if(i !\u003d tasks.size()-1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"                    ans.append(String.format(\"%d. %s\\n\", i + 1, task.toString()));","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"                    ans.append(String.format(\"%d. %s\", i + 1, task.toString()));","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"            return ans.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"ramapriyan912001"},"content":"         * Method to add a task to our list.","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"ramapriyan912001"},"content":"         * @param task The string of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"         * @param type The type of the task: event, deadline, or other type.","lastModifiedDate":"2021-08-16"},{"lineNumber":178,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"        public void addTask(String task, Type type) {","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"ramapriyan912001"},"content":"            Task taskObj \u003d new Task(task, type);","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"ramapriyan912001"},"content":"            tasks.add(taskObj);","lastModifiedDate":"2021-08-15"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(String.format(\"Got it. I\u0027ve added this task:\\n\" + taskObj.toString()));","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2021-08-15"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"         * Method to check the task off as done in the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"         * @param taskNumber The number of the task in our list.","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"        public void doneTask(int taskNumber) {","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"            taskNumber--;","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"            Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"            task.setDone(true);","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"            tasks.set(taskNumber, task);","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"         * Method to delete the task from the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"         * @param taskNumber The number of the task in our list.","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"        public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-08-15"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"            taskNumber--;","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"            Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"            tasks.remove(taskNumber);","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2021-08-15"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"         * The string that is outputted when the user terminates the chatbot.","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"ramapriyan912001"},"content":"         * @return Message to say bye to user.","lastModifiedDate":"2021-08-16"},{"lineNumber":213,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"ramapriyan912001"},"content":"        public String byeString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"ramapriyan912001"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"ramapriyan912001"},"content":"         * Assesses the input and activates the necessary response.","lastModifiedDate":"2021-08-16"},{"lineNumber":220,"author":{"gitId":"ramapriyan912001"},"content":"         * @param input The string of input command.","lastModifiedDate":"2021-08-16"},{"lineNumber":221,"author":{"gitId":"ramapriyan912001"},"content":"         * @throws DukeException Exceptions specific to this chatbot.","lastModifiedDate":"2021-08-16"},{"lineNumber":222,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"ramapriyan912001"},"content":"        public void interpretInput(String input) throws DukeException{","lastModifiedDate":"2021-08-15"},{"lineNumber":224,"author":{"gitId":"ramapriyan912001"},"content":"            String task;","lastModifiedDate":"2021-08-15"},{"lineNumber":225,"author":{"gitId":"ramapriyan912001"},"content":"            Type type;","lastModifiedDate":"2021-08-15"},{"lineNumber":226,"author":{"gitId":"ramapriyan912001"},"content":"            if(input.equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":227,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(byeString());","lastModifiedDate":"2021-08-15"},{"lineNumber":228,"author":{"gitId":"ramapriyan912001"},"content":"            } else if(input.equals(\"list\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":229,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(taskListString());","lastModifiedDate":"2021-08-15"},{"lineNumber":230,"author":{"gitId":"ramapriyan912001"},"content":"            } else if(input.equals(\"hello\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":231,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(\"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":232,"author":{"gitId":"ramapriyan912001"},"content":"                        \"What can I do for you?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":233,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":234,"author":{"gitId":"ramapriyan912001"},"content":"                doneTask(Integer.parseInt(input.substring(5)));","lastModifiedDate":"2021-08-15"},{"lineNumber":235,"author":{"gitId":"ramapriyan912001"},"content":"            } else if(input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":236,"author":{"gitId":"ramapriyan912001"},"content":"                // Remove all whitespaces to test if it is empty","lastModifiedDate":"2021-08-15"},{"lineNumber":237,"author":{"gitId":"ramapriyan912001"},"content":"                String testInput \u003d input.replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2021-08-15"},{"lineNumber":238,"author":{"gitId":"ramapriyan912001"},"content":"                if(testInput.equals(\"todo\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":239,"author":{"gitId":"ramapriyan912001"},"content":"                    throw new EmptyTodoException();","lastModifiedDate":"2021-08-15"},{"lineNumber":240,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":241,"author":{"gitId":"ramapriyan912001"},"content":"                task \u003d input.substring(5);","lastModifiedDate":"2021-08-15"},{"lineNumber":242,"author":{"gitId":"ramapriyan912001"},"content":"                type \u003d Type.TODO;","lastModifiedDate":"2021-08-15"},{"lineNumber":243,"author":{"gitId":"ramapriyan912001"},"content":"                addTask(task, type);","lastModifiedDate":"2021-08-15"},{"lineNumber":244,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":245,"author":{"gitId":"ramapriyan912001"},"content":"                task \u003d input.substring(9);","lastModifiedDate":"2021-08-15"},{"lineNumber":246,"author":{"gitId":"ramapriyan912001"},"content":"                type \u003d Type.DEADLINE;","lastModifiedDate":"2021-08-15"},{"lineNumber":247,"author":{"gitId":"ramapriyan912001"},"content":"                task \u003d task.replace(\" /by \", \",\");","lastModifiedDate":"2021-08-21"},{"lineNumber":248,"author":{"gitId":"ramapriyan912001"},"content":"                addTask(task, type);","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":250,"author":{"gitId":"ramapriyan912001"},"content":"                task \u003d input.substring(6);","lastModifiedDate":"2021-08-15"},{"lineNumber":251,"author":{"gitId":"ramapriyan912001"},"content":"                type \u003d Type.EVENT;","lastModifiedDate":"2021-08-15"},{"lineNumber":252,"author":{"gitId":"ramapriyan912001"},"content":"                task \u003d task.replace(\" /at \", \",\");","lastModifiedDate":"2021-08-21"},{"lineNumber":253,"author":{"gitId":"ramapriyan912001"},"content":"                addTask(task, type);","lastModifiedDate":"2021-08-15"},{"lineNumber":254,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":255,"author":{"gitId":"ramapriyan912001"},"content":"                deleteTask(Integer.parseInt(input.substring(7)));","lastModifiedDate":"2021-08-15"},{"lineNumber":256,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":257,"author":{"gitId":"ramapriyan912001"},"content":"                throw new CommandNotFoundException();","lastModifiedDate":"2021-08-15"},{"lineNumber":258,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":259,"author":{"gitId":"ramapriyan912001"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":260,"author":{"gitId":"ramapriyan912001"},"content":"                writeToFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":261,"author":{"gitId":"ramapriyan912001"},"content":"            } catch(IOException err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":262,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":263,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":264,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":265,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":266,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":267,"author":{"gitId":"ramapriyan912001"},"content":"        public void writeToFile() throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":268,"author":{"gitId":"ramapriyan912001"},"content":"            List\u003cTask\u003e tasks \u003d this.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":269,"author":{"gitId":"ramapriyan912001"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":270,"author":{"gitId":"ramapriyan912001"},"content":"            String lines \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":271,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":272,"author":{"gitId":"ramapriyan912001"},"content":"            for(Task task: tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":273,"author":{"gitId":"ramapriyan912001"},"content":"                String line \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":274,"author":{"gitId":"ramapriyan912001"},"content":"                line \u003d line + Type.typeString(task.getType()) + \",\";","lastModifiedDate":"2021-08-21"},{"lineNumber":275,"author":{"gitId":"ramapriyan912001"},"content":"                line \u003d task.isDone() ? line + String.format(\"%d,\", 1) : line + String.format(\"%d,\", 0);","lastModifiedDate":"2021-08-21"},{"lineNumber":276,"author":{"gitId":"ramapriyan912001"},"content":"                String taskString \u003d task.getTask();","lastModifiedDate":"2021-08-21"},{"lineNumber":277,"author":{"gitId":"ramapriyan912001"},"content":"                line +\u003d taskString;","lastModifiedDate":"2021-08-21"},{"lineNumber":278,"author":{"gitId":"ramapriyan912001"},"content":"                if(i !\u003d tasks.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":279,"author":{"gitId":"ramapriyan912001"},"content":"                    line +\u003d \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":280,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":281,"author":{"gitId":"ramapriyan912001"},"content":"                i++;","lastModifiedDate":"2021-08-21"},{"lineNumber":282,"author":{"gitId":"ramapriyan912001"},"content":"                lines +\u003d line;","lastModifiedDate":"2021-08-21"},{"lineNumber":283,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":284,"author":{"gitId":"ramapriyan912001"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":285,"author":{"gitId":"ramapriyan912001"},"content":"            fileWriter.write(lines);","lastModifiedDate":"2021-08-21"},{"lineNumber":286,"author":{"gitId":"ramapriyan912001"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":287,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":288,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":289,"author":{"gitId":"ramapriyan912001"},"content":"        public List\u003cString\u003e parseFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":290,"author":{"gitId":"ramapriyan912001"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":291,"author":{"gitId":"ramapriyan912001"},"content":"            List\u003cString\u003e tasks \u003d new ArrayList();","lastModifiedDate":"2021-08-21"},{"lineNumber":292,"author":{"gitId":"ramapriyan912001"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":293,"author":{"gitId":"ramapriyan912001"},"content":"                Scanner readFile \u003d new Scanner(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":294,"author":{"gitId":"ramapriyan912001"},"content":"                while(readFile.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":295,"author":{"gitId":"ramapriyan912001"},"content":"                    String task \u003d readFile.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":296,"author":{"gitId":"ramapriyan912001"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":297,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":298,"author":{"gitId":"ramapriyan912001"},"content":"            } catch(Exception err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":299,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":300,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":301,"author":{"gitId":"ramapriyan912001"},"content":"            return tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":302,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":303,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":304,"author":{"gitId":"ramapriyan912001"},"content":"        public void loadTasks(List\u003cString\u003e tasks) throws FileParseErrorException {","lastModifiedDate":"2021-08-21"},{"lineNumber":305,"author":{"gitId":"ramapriyan912001"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":306,"author":{"gitId":"ramapriyan912001"},"content":"            for(int i \u003d 0; i\u003ctasks.size();i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":307,"author":{"gitId":"ramapriyan912001"},"content":"                String taskString \u003d tasks.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":308,"author":{"gitId":"ramapriyan912001"},"content":"                String[] tokens \u003d taskString.split(\",\");","lastModifiedDate":"2021-08-21"},{"lineNumber":309,"author":{"gitId":"ramapriyan912001"},"content":"                Task task \u003d new Task();","lastModifiedDate":"2021-08-21"},{"lineNumber":310,"author":{"gitId":"ramapriyan912001"},"content":"                if(tokens.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":311,"author":{"gitId":"ramapriyan912001"},"content":"                    throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":312,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":313,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":314,"author":{"gitId":"ramapriyan912001"},"content":"                Type type;","lastModifiedDate":"2021-08-21"},{"lineNumber":315,"author":{"gitId":"ramapriyan912001"},"content":"                String interpretedString \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":316,"author":{"gitId":"ramapriyan912001"},"content":"                int done \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":317,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":318,"author":{"gitId":"ramapriyan912001"},"content":"                if(tokens[1].equals(\"0\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":319,"author":{"gitId":"ramapriyan912001"},"content":"                    done \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":320,"author":{"gitId":"ramapriyan912001"},"content":"                } else if (tokens[1].equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":321,"author":{"gitId":"ramapriyan912001"},"content":"                    done \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":322,"author":{"gitId":"ramapriyan912001"},"content":"                    task.setDone(true);","lastModifiedDate":"2021-08-21"},{"lineNumber":323,"author":{"gitId":"ramapriyan912001"},"content":"                } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":324,"author":{"gitId":"ramapriyan912001"},"content":"                    throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":325,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":326,"author":{"gitId":"ramapriyan912001"},"content":"                if(tokens[0].equals(\"D\") \u0026\u0026 tokens.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":327,"author":{"gitId":"ramapriyan912001"},"content":"                    type \u003d Type.DEADLINE;","lastModifiedDate":"2021-08-21"},{"lineNumber":328,"author":{"gitId":"ramapriyan912001"},"content":"                    interpretedString \u003d tokens[2] + \",\" + tokens[3];","lastModifiedDate":"2021-08-21"},{"lineNumber":329,"author":{"gitId":"ramapriyan912001"},"content":"                } else if (tokens[0].equals(\"E\") \u0026\u0026 tokens.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":330,"author":{"gitId":"ramapriyan912001"},"content":"                    type \u003d Type.EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":331,"author":{"gitId":"ramapriyan912001"},"content":"                    interpretedString \u003d tokens[2] + \",\" + tokens[3];","lastModifiedDate":"2021-08-21"},{"lineNumber":332,"author":{"gitId":"ramapriyan912001"},"content":"                } else if (tokens[0].equals(\"T\") \u0026\u0026 tokens.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":333,"author":{"gitId":"ramapriyan912001"},"content":"                    type \u003d Type.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":334,"author":{"gitId":"ramapriyan912001"},"content":"                    interpretedString \u003d tokens[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":335,"author":{"gitId":"ramapriyan912001"},"content":"                } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":336,"author":{"gitId":"ramapriyan912001"},"content":"                    throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":337,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":338,"author":{"gitId":"ramapriyan912001"},"content":"                task.setType(type);","lastModifiedDate":"2021-08-21"},{"lineNumber":339,"author":{"gitId":"ramapriyan912001"},"content":"                task.setTask(interpretedString);","lastModifiedDate":"2021-08-21"},{"lineNumber":340,"author":{"gitId":"ramapriyan912001"},"content":"                this.tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":341,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":342,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":343,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":344,"author":{"gitId":"ramapriyan912001"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":345,"author":{"gitId":"ramapriyan912001"},"content":"         * Method call to activate the chatbot.","lastModifiedDate":"2021-08-16"},{"lineNumber":346,"author":{"gitId":"ramapriyan912001"},"content":"         * If command bye is given, the chatbot terminates.","lastModifiedDate":"2021-08-16"},{"lineNumber":347,"author":{"gitId":"ramapriyan912001"},"content":"         * @param scanner Scanner that takes in the input.","lastModifiedDate":"2021-08-16"},{"lineNumber":348,"author":{"gitId":"ramapriyan912001"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":349,"author":{"gitId":"ramapriyan912001"},"content":"        public void run(Scanner scanner) {","lastModifiedDate":"2021-08-15"},{"lineNumber":350,"author":{"gitId":"ramapriyan912001"},"content":"            List\u003cString\u003e tasks \u003d parseFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":351,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":352,"author":{"gitId":"ramapriyan912001"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":353,"author":{"gitId":"ramapriyan912001"},"content":"                loadTasks(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":354,"author":{"gitId":"ramapriyan912001"},"content":"            } catch (FileParseErrorException err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":355,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":356,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":357,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":358,"author":{"gitId":"ramapriyan912001"},"content":"            if(scanner.hasNext()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":359,"author":{"gitId":"ramapriyan912001"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":360,"author":{"gitId":"ramapriyan912001"},"content":"                try {","lastModifiedDate":"2021-08-15"},{"lineNumber":361,"author":{"gitId":"ramapriyan912001"},"content":"                    interpretInput(input);","lastModifiedDate":"2021-08-15"},{"lineNumber":362,"author":{"gitId":"ramapriyan912001"},"content":"                } catch(DukeException dukeException) {","lastModifiedDate":"2021-08-15"},{"lineNumber":363,"author":{"gitId":"ramapriyan912001"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":364,"author":{"gitId":"ramapriyan912001"},"content":"                    run(scanner);","lastModifiedDate":"2021-08-15"},{"lineNumber":365,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":366,"author":{"gitId":"ramapriyan912001"},"content":"                if(input.equals(\"bye\"))  {","lastModifiedDate":"2021-08-15"},{"lineNumber":367,"author":{"gitId":"ramapriyan912001"},"content":"                    scanner.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":368,"author":{"gitId":"ramapriyan912001"},"content":"                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":369,"author":{"gitId":"ramapriyan912001"},"content":"                    run(scanner);","lastModifiedDate":"2021-08-15"},{"lineNumber":370,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":371,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":372,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":373,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":374,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":376,"author":{"gitId":"ramapriyan912001"},"content":"        TaskManager taskManager \u003d new Duke().generateTaskManager();","lastModifiedDate":"2021-08-15"},{"lineNumber":377,"author":{"gitId":"ramapriyan912001"},"content":"        String hello \u003d \"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":378,"author":{"gitId":"ramapriyan912001"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":379,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(hello);","lastModifiedDate":"2021-08-15"},{"lineNumber":380,"author":{"gitId":"ramapriyan912001"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":381,"author":{"gitId":"ramapriyan912001"},"content":"        taskManager.run(scanner);","lastModifiedDate":"2021-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ramapriyan912001":379,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"        super();","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":8}},{"path":"src/main/java/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"public class EmptyTodoException extends DukeException{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyTodoException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":9}},{"path":"src/main/java/FileParseErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"public class FileParseErrorException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"    public FileParseErrorException(String err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"    public FileParseErrorException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"â˜¹ OOPS!!! The file contained tasks that were not readable. File may have been tampered.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"deadline submit assignment /by 29th August 9pm","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"event go birthday party /at 9th January 9pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"todo study for ma2104 everyday","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":11}}]
