[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ramapriyan912001":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ramapriyan912001":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"T,1,some task","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"D,1,some task,2022-01-01 08:00","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"T,0,grey","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"T,0,jee","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"T,1,lolo","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ramapriyan912001":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"### Feature List","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"View all your tasks-to-do, deadlines, and events.","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"### Feature Todo","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"Add a task that you have to do in the future.","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"### Feature Deadlines","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"Add deadlines that you have to meet in the future.","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"### Feature Events","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"Add events that you have to attend in the future.","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"### Feature Delete","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"Delete items from your task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"### Feature Done","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"Mark items from your task list as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"### Feature Find","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"Filter your list and only see tasks with a certain string of","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"characters within them.","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"### Feature Sort","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"Sort deadlines and events based on the time attached to them.","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"### `list` - List your tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027list\u0027 command to see your tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"in a list format.","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"Lists your tasks in the order that they were added.","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"`list`","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"1. [T][ ] some task","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"### `todo` - Add a to-do task","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027todo\u0027 command to add a task to-do to your list.","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"`todo some task`","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"The todo is added to your list.","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"[T][ ] some task","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"Now you have \u003cN\u003e tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027deadline\u0027 command to add a task with a time deadline to your list.","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"`deadline some task /by YYYY-MM-DD`","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"`deadline some other task /by YYYY-MM-DD HH:MM`","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"If time is not specified, the task is set to a default time of","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"0000 hours.","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"The deadline is added to your list.","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"[D][ ] some task (by: 2022-01-01 08:00)","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"### `event` - Add an event task","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027event\u0027 command to add an event with a time to your list.","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"`event some event /at YYYY-MM-DD`","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"`event some other event /at YYYY-MM-DD HH:MM`","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"If time is not specified, the task is set to a default time of","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"0000 hours.","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"The event is added to your list.","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"[E][ ] some event (at: 2022-01-01 00:00)","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"### `done` - Mark a task as done","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027done\u0027 command to mark a task as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"`done \u003cindex in list\u003e`","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"Marks a task as done in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"[T][X] some task","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"### `delete` - Delete a task","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027delete\u0027 command to delete a task.","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"`delete \u003cindex in list\u003e`","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"Deletes task from list.","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"[T][ ] some task","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"### `find` - Find tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027find\u0027 command to filter tasks.","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"`find \u003cregex\u003e`","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"`find some`","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"Shows a sub-list with only tasks containing the regex.","lastModifiedDate":"2021-09-10"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-10"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"1. [T][X] some task","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"ramapriyan912001"},"content":"### `sort` - Sort tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":174,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027sort\u0027 command to sort events and deadlines.","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"ramapriyan912001"},"content":"Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":178,"author":{"gitId":"ramapriyan912001"},"content":"`sort deadlines and events`","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"`sort events and deadlines`","lastModifiedDate":"2021-09-10"},{"lineNumber":180,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":181,"author":{"gitId":"ramapriyan912001"},"content":"Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"Shows a list that contains the sorted sub-list of","lastModifiedDate":"2021-09-10"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"the events and deadlines in the list based on time.","lastModifiedDate":"2021-09-10"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"1. [E][ ] some event (at: 2022-01-01 00:00)","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"2. [D][ ] some task (by: 2022-01-01 08:00)","lastModifiedDate":"2021-09-10"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"### `bye` - Terminate chat session","lastModifiedDate":"2021-09-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"Enter the \u0027bye\u0027 command to close the bot.","lastModifiedDate":"2021-09-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"`bye`","lastModifiedDate":"2021-09-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"Kills the chatbot.","lastModifiedDate":"2021-09-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"### Screenshot of ChatBot","lastModifiedDate":"2021-09-12"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"![alt text](https://github.com/ramapriyan912001/ip/blob/master/docs/Ui.png?raw\u003dtrue)","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"ramapriyan912001":181,"-":29}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"include \u0027test\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"ramapriyan912001":2}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"public class Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * Method to add a task to our list.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The string of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task: event, deadline, or other type.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    public static String addTask(String task, Type type, LocalDateTime localDateTime, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        Task taskObj \u003d TaskList.initialiseByType(task, type, false, localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.add(taskObj);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        String addTaskString \u003d String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"                        + \"%s\"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"                        + \"\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"                taskObj.toString(), tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"        return addTaskString;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"     * Method to check the task off as done in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     * @param taskNumber The number of the task in our list.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public static String doneTask(int taskNumber, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        taskNumber--;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        task.setDone(true);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.set(taskNumber, task);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        String doneTaskString \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"                + task.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        return doneTaskString;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"     * Method to delete the task from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"     * @param taskNumber The number of the task in our list.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    public static String deleteTask(int taskNumber, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        taskNumber--;","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        String deleteTaskString \u003d String.format(\"Noted. I\u0027ve removed this task:\\n%s\"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"                        + \"\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"                task.toString(), tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        return deleteTaskString;","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"     * Filter tasks out based on regex string.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"     * @param regex String based on which to filter.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tasks duke.Task list from which to filter.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Filtered tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cTask\u003e findTasks(String regex, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"            if (task.getTask().contains(regex)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        return filteredTasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"     * Sort events and deadlines by time","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tasks List of all tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Sorted task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cTask\u003e sortTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cTask\u003e sortedTasks \u003d tasks","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"                .stream()","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"                .filter(task -\u003e task.getDatetime() !\u003d null)","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"                .sorted(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"                    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"                    public int compare(Task task1, Task task2) {","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"                        if (task1.getDatetime().isAfter(task2.getDatetime())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"                            return 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"                        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"                            return -1;","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"                        }","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"                    }","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"                }).collect(Collectors.toList());","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        return sortedTasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":91}},{"path":"src/main/java/duke/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class CommandNotFoundException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandNotFoundException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandNotFoundException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":11}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done The status of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * @param datetime The time for task.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public Deadline(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done, datetime);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        this.setDatetime(datetime);","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    public String taskString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"%s (%s: %s)\", getTask(), Type.getConnector(getType()), getDatetimeString());","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":34}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"ramapriyan912001":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    private TaskList taskManager \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * @param input String entered by user.","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Response from chatbot.","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        return taskManager.runWithGraphicUI(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * The main function that starts off the chatbot.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * @param args Standard.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        String hello \u003d \"Hello! I\u0027m duke.Duke\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(hello);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        duke.taskManager.run(scanner);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ramapriyan912001":28,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":" * Class of Duke Exceptions.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        super();","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":16}},{"path":"src/main/java/duke/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class EmptyDeadlineException extends DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"ramapriyan912001":8}},{"path":"src/main/java/duke/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class EmptyEventException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyEventException() {","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"ramapriyan912001":9}},{"path":"src/main/java/duke/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class EmptyTodoException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done The status of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * @param datetime The time for task.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public Event(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done, datetime);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        this.setDatetime(datetime);","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    public String taskString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"%s (%s: %s)\", getTask(), Type.getConnector(getType()), getDatetimeString());","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":34}},{"path":"src/main/java/duke/FileParseErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class FileParseErrorException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"    public FileParseErrorException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"☹ OOPS!!! The file contained tasks that were not readable. File may have been tampered.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":8}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"ramapriyan912001":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ramapriyan912001":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/rama1.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/rama2.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     * Initialises the mainWindow to display welcome message and handle userInput.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        String logo \u003d \"Hello from \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"                + \" ____           _        \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"                + \"|   _  \\\\ __   _| |  _____ \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"                + \"|  |  |  |  | |  |  |/  / _ \\\\\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"                + \"|  |_|  |  |_|  |    \u003c  __/\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"                + \"|____/ \\\\__,_ |_|\\\\_\\\\___|\\n\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"                + \"What can I do for you today?\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"                DialogBox.getDukeDialog(logo, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ramapriyan912001":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String BYE_STRING \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String DEADLINE_STRING \u003d \"deadline\";","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String TODO_STRING \u003d \"todo\";","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String EVENT_STRING \u003d \"event\";","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"     * Loads task once files contents are read raw.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tasks File contents raw.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Processed file contents.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws FileParseErrorException","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    public static ArrayList\u003cTask\u003e loadTasks(List\u003cString\u003e tasks) throws FileParseErrorException {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        ArrayList\u003cTask\u003e finalTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"            String taskString \u003d tasks.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            String[] tokens \u003d taskString.split(\",\");","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"            if (tokens.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"                throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            Boolean done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"            if (tokens[1].equals(\"0\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"                done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (tokens[1].equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"                done \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"                throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"            if (tokens[0].equals(\"D\") \u0026\u0026 tokens.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"                loadDeadlineTask(tokens, finalTasks, done);","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (tokens[0].equals(\"E\") \u0026\u0026 tokens.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"                loadEventTask(tokens, finalTasks, done);","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (tokens[0].equals(\"T\") \u0026\u0026 tokens.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"                loadTodoTask(tokens, finalTasks, done);","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"                throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        return finalTasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"    private static void loadTodoTask(String[] tokens, List\u003cTask\u003e tasks, Boolean done) {","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        Type type \u003d Type.TODO;","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        String interpretedString \u003d tokens[2];","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d null;","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        Task task \u003d TaskList.initialiseByType(interpretedString, type, done, localDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    private static void loadDeadlineTask(String[] tokens, List\u003cTask\u003e tasks, Boolean done) {","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        Type type \u003d Type.DEADLINE;","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        String interpretedString \u003d tokens[2];","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d parseDate(tokens[3]);","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        Task task \u003d TaskList.initialiseByType(interpretedString, type, done, localDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    private static void loadEventTask(String[] tokens, List\u003cTask\u003e tasks, Boolean done) {","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        Type type \u003d Type.EVENT;","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        String interpretedString \u003d tokens[2];","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d parseDate(tokens[3]);","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        Task task \u003d TaskList.initialiseByType(interpretedString, type, done, localDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"     * Parses date and returns datetime object.","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"     * @param datetime Datetime string to parse.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Datetime object.","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"    public static LocalDateTime parseDate (String datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"        if (datetime.length() \u003d\u003d 10) {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"            datetime +\u003d \" 00:00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(datetime, formatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        return localDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"     * Assesses the input and activates the necessary response.","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"     * @param input The string of input command.","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws DukeException Exceptions specific to this chatbot.","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"    public static String interpretInput(String input, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        // Use Java Assertions to check for unacceptable commands","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"        Boolean valid \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        Storage.createFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d BYE_STRING;","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d listResponse(tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.equals(\"hello\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d helloResponse();","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d doneResponse(input, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(addWhiteSpace(TODO_STRING))","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"                    || (input.startsWith(TODO_STRING))) {","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d todoResponse(input, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(addWhiteSpace(DEADLINE_STRING))","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"                    || (input.startsWith(DEADLINE_STRING))) {","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d deadlineResponse(input, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(addWhiteSpace(EVENT_STRING))","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"                    || input.startsWith(EVENT_STRING)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d eventResponse(input, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d deleteResponse(input, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d findResponse(input, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (input.startsWith(\"sort events and deadlines\")","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"                    || input.startsWith(\"sort deadlines and events\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"                response \u003d sortResponse(tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"                valid \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"            assert valid : \"COMMAND NOT FOUND\";","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"            writeToStorage(tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(response);","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"            return response;","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (Exception err) {","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"            return err.getMessage();","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (AssertionError err) {","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"            return err.getMessage();","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"    private static String addWhiteSpace(String string) {","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"        return string + \" \";","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"    private static void writeToStorage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"            Storage.writeToFile(tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err);","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"    private static String sortResponse(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"        return duke.TaskList.taskListString(Command.sortTasks(tasks));","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"    private static String findResponse(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cTask\u003e filteredTasks \u003d Command.findTasks(input.substring(5), tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"        return duke.TaskList.taskListString(filteredTasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"    private static String deleteResponse(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"        return Command.deleteTask(Integer.parseInt(input.substring(7)), tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"    private static String eventResponse(String input, List\u003cTask\u003e tasks) throws EmptyEventException {","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"        String testInput \u003d input.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"ramapriyan912001"},"content":"        if (testInput.equals(\"event\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"ramapriyan912001"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"ramapriyan912001"},"content":"        String task \u003d input.substring(6);","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"ramapriyan912001"},"content":"        Type type \u003d Type.EVENT;","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"        String[] tokens \u003d task.split(\" /at \");","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d Parser.parseDate(tokens[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"        task \u003d tokens[0];","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"ramapriyan912001"},"content":"        return Command.addTask(task, type, localDateTime, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"    private static String deadlineResponse(String input, List\u003cTask\u003e tasks) throws EmptyDeadlineException {","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"        String testInput \u003d input.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"        if (testInput.equals(\"deadline\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"            throw new EmptyDeadlineException();","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"        String task \u003d input.substring(9);","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"        Type type \u003d Type.DEADLINE;","lastModifiedDate":"2021-09-11"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"        String[] tokens \u003d task.split(\" /by \");","lastModifiedDate":"2021-09-11"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d Parser.parseDate(tokens[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"        task \u003d tokens[0];","lastModifiedDate":"2021-09-11"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"        return Command.addTask(task, type, localDateTime, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"    private static String todoResponse(String input, List\u003cTask\u003e tasks) throws EmptyTodoException {","lastModifiedDate":"2021-09-11"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"        String testInput \u003d input.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2021-09-11"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(testInput);","lastModifiedDate":"2021-09-12"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"        if (testInput.equals(\"todo\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"            throw new EmptyTodoException();","lastModifiedDate":"2021-09-11"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"        String task \u003d input.substring(5);","lastModifiedDate":"2021-09-11"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"        Type type \u003d Type.TODO;","lastModifiedDate":"2021-09-11"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"        return Command.addTask(task, type, localDateTime, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":206,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"    private static String doneResponse(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"        return Command.doneTask(Integer.parseInt(input.substring(5)), tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":212,"author":{"gitId":"ramapriyan912001"},"content":"    private static String listResponse(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":213,"author":{"gitId":"ramapriyan912001"},"content":"        return duke.TaskList.taskListString(tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":214,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":215,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":216,"author":{"gitId":"ramapriyan912001"},"content":"    private static String helloResponse() {","lastModifiedDate":"2021-09-11"},{"lineNumber":217,"author":{"gitId":"ramapriyan912001"},"content":"        return \"Hello! I\u0027m duke.Duke\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":218,"author":{"gitId":"ramapriyan912001"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-09-11"},{"lineNumber":219,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":220,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":220}},{"path":"src/main/java/duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import duke.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     * Creates storage file if file does not exist","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    public static void createFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        File directory \u003d new File(\"data/\");","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        File tasks \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"            directory.mkdir();","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"            if (tasks.createNewFile()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(tasks.getName() + \" created\");","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     * Write to file with processed data.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tasks Tasks to write to file.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    public static void writeToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        String lines \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"            lines +\u003d task.fileWriteString();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            if (i !\u003d tasks.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"                lines +\u003d \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"            i++;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        fileWriter.write(lines);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"     * Read file content raw.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"     * @return List of strings.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cString\u003e readFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cString\u003e tasks \u003d new ArrayList();","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"            Scanner readFile \u003d new Scanner(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"            while (readFile.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"                String task \u003d readFile.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (Exception err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        return tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":69}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    /** The task itself, in String form */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    private String task;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    /** The done status of the task */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    private Boolean done;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    /** The type of the task, defined by the enum duke.Type */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    private Type type;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    /** The datetime object for the event */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    private LocalDateTime datetime;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public Task(String task, Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor with 3 params","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task Task string.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type Type enum.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done Boolean done.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    public Task(String task, Type type, Boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor with 3 params","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task Task string.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type Type enum.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done Boolean done.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     * @param datetime Datetime datetime.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    public Task(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"     * Empty default constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    public Task() {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d Type.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"     * Getter to see if the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Boolean about whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    public Boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        return this.done;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"     * Setter to set the task as done or not done.","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done Boolean about whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"    public void setDone(Boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"     * String representation of the done status of task","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String representation of the done status of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"    public String checkBox() {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"    public Type getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"        return this.type;","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"     * String to write to file.","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"     * @return File write string.","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"    public String fileWriteString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d Type.typeString(getType()) + \",\";","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"        res \u003d isDone() ? res + \"1,\" : res + \"0,\";","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d task + \",\";","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d getDatetimeString();","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"        return res;","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"     * String representation of the type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String representation of the type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"    public abstract String typeString();","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"    public abstract String taskString();","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"    public LocalDateTime getDatetime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"        return this.datetime;","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"    public void setDatetime(LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"    public String getDatetimeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"        return this.datetime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"%s%s %s\", typeString(), checkBox(), taskString());","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":141}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    /** Initialising an empty array into which tasks can be added/manipulated/deleted */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * This method provides a string that is the visual representation of the tasks seen by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     * @return The visual representation of task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    public static String taskListString(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        ans.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"                ans.append(String.format(\"%d. %s\\n\", i + 1, task.toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"                ans.append(String.format(\"%d. %s\", i + 1, task.toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        return ans.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * Initialise event subclass by type.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task duke.Task string.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type duke.Type enum.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done Whether task is done or not Bool.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"     * @param localDateTime Datetime object.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"     * @return duke.Task of requisite type.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public static Task initialiseByType(String task, Type type, Boolean done, LocalDateTime localDateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        if (type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"            return new Todo(task, type, done);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"            return new Event(task, type, done, localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"            return new Deadline(task, type, done, localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"     * The string that is outputted when user terminates bot.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Message to say bye to user.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"    public String byeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"     * Method call to activate the chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"     * If command bye is given, the chatbot terminates.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"     * @param scanner Scanner that takes in the input.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    public void run(Scanner scanner) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cString\u003e tasks \u003d Storage.readFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"            this.tasks \u003d Parser.loadTasks(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (FileParseErrorException err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        if (scanner.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"                Parser.interpretInput(input, this.tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"            } catch (Exception err) {","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"                run(scanner);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"                scanner.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"                run(scanner);","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"    * Method to run chatbot with javafx UI.","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"    public String runWithGraphicUI(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cString\u003e tasks \u003d Storage.readFile();","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"            this.tasks \u003d Parser.loadTasks(tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (FileParseErrorException err) {","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err);","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"            response \u003d Parser.interpretInput(input, this.tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (Exception err) {","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err.getMessage() + \"THIS IS THE ERROR\");","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":108}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo(String task, Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo(String task, Type type, Boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done, datetime);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        super();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"     * String to be written to file.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String to be written to file.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public String fileWriteString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d Type.typeString(getType()) + \",\";","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        res \u003d isDone() ? res + \"1,\" : res + \"0,\";","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d getTask();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        return res;","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting datetime of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting datetime of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    public String getDatetimeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    public String taskString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        return getTask();","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":66}},{"path":"src/main/java/duke/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":" * Enum class for types of events.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"public enum Type {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    TODO,","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * String to denote type.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type Type enum.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String representation of type.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    public static String typeString(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        if (type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"            return \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"            return \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"            return \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            throw new NullPointerException();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    public static String getConnector(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        if (type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"            return \"at\";","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"            return \"by\";","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"            throw new NullPointerException();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #ADD8E3; -fx-border-radius: 5; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);\" text\u003d\"Label\" translateY\u003d\"10.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"                \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ramapriyan912001":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ramapriyan912001":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseDateTest1() {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        String datetimeString \u003d \"2009-01-01 10:00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(LocalDateTime.of(2009, 01, 01, 10, 00), Parser.parseDate(datetimeString));","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseDatTest2() {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        String datetimeString \u003d \"2009-01-01 23:00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(LocalDateTime.of(2009, 01, 01, 23, 00), Parser.parseDate(datetimeString));","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"deadline submit assignment /by 29th August 9pm","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"event go birthday party /at 9th January 9pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"todo study for ma2104 everyday","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ramapriyan912001":1,"-":20}}]
