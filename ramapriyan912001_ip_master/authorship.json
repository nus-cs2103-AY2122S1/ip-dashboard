[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ramapriyan912001":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"T,1,something else","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"E,1,something else,2001-09-09 20:30","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"T,1,something","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":3}},{"path":"src/main/java/duke/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class CommandNotFoundException extends DukeException{","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandNotFoundException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandNotFoundException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":11}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done The status of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * @param datetime The time for task.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public Deadline(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done, datetime);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public String taskString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"%s (%s: %s)\", getTask(), Type.getConnector(getType()), getDatetimeString());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    public TaskList generateTaskList() {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"        return new TaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"        TaskList taskManager \u003d new Duke().generateTaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"        String hello \u003d \"Hello! I\u0027m duke.Duke\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(hello);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        taskManager.run(scanner);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ramapriyan912001":15,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"        super();","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":10}},{"path":"src/main/java/duke/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class EmptyTodoException extends DukeException{","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyTodoException(String err) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done The status of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * @param datetime The time for task.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public Event(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done, datetime);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public String taskString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"%s (%s: %s)\", getTask(), Type.getConnector(getType()), getDatetimeString());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":33}},{"path":"src/main/java/duke/FileParseErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class FileParseErrorException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    public FileParseErrorException(String err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"        super(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    public FileParseErrorException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"â˜¹ OOPS!!! The file contained tasks that were not readable. File may have been tampered.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * Loads task once files contents are read raw.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tasks File contents raw.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Processed file contents.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws FileParseErrorException","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    public static ArrayList\u003cTask\u003e loadTasks(List\u003cString\u003e tasks) throws FileParseErrorException {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        ArrayList\u003cTask\u003e finalTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        for(int i \u003d 0; i\u003ctasks.size();i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"            String taskString \u003d tasks.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"            String[] tokens \u003d taskString.split(\",\");","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"            if(tokens.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(\"damn\");","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"                throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"            Type type;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"            String interpretedString \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            Boolean done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"            if(tokens[1].equals(\"0\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"                done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (tokens[1].equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"                done \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"                throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"            LocalDateTime localDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"            if(tokens[0].equals(\"D\") \u0026\u0026 tokens.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"                type \u003d Type.DEADLINE;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"                interpretedString \u003d tokens[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"                localDateTime \u003d parseDate(tokens[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (tokens[0].equals(\"E\") \u0026\u0026 tokens.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"                type \u003d Type.EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"                interpretedString \u003d tokens[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"                localDateTime \u003d parseDate(tokens[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (tokens[0].equals(\"T\") \u0026\u0026 tokens.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"                type \u003d Type.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"                interpretedString \u003d tokens[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"                localDateTime \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"                throw new FileParseErrorException();","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"            Task task \u003d TaskList.initialiseByType(interpretedString, type, done, localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"            finalTasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        return finalTasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"     * Parses date and returns datetime object.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"     * @param datetime Datetime string to parse.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Datetime object.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    public static LocalDateTime parseDate (String datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        if(datetime.length() \u003d\u003d 10) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"            datetime +\u003d \" 00:00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(datetime, formatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        return localDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":73}},{"path":"src/main/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseDateTest1() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"        String datetimeString \u003d \"2009-01-01 10:00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(LocalDateTime.of(2009, 01, 01, 10, 00),Parser.parseDate(datetimeString));","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseDatTest2() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        String datetimeString \u003d \"2009-01-01 23:00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(LocalDateTime.of(2009, 01, 01, 23, 00),Parser.parseDate(datetimeString));","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":22}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     * Write to file with processed data.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tasks Tasks to write to file.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    public static void writeToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        String lines \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        for(Task task: tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"            lines +\u003d task.fileWriteString();","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"            if(i !\u003d tasks.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"                lines +\u003d \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"            i++;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        fileWriter.write(lines);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * Read file content raw.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * @return List of strings.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cString\u003e readFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cString\u003e tasks \u003d new ArrayList();","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            Scanner readFile \u003d new Scanner(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"            while(readFile.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"                String task \u003d readFile.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        } catch(Exception err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        return tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":51}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    /** The task itself, in String form */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    private String task;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    /** The done status of the task */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    private Boolean done;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    /** The type of the task, defined by the enum duke.Type */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    private Type type;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    /** The datetime object for the event */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    private LocalDateTime datetime;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public Task(String task, Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    public Task(String task, Type type, Boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public Task(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    public Task() {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d Type.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"     * Getter to see if the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Boolean about whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    public Boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        return this.done;","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"     * Setter to set the task as done or not done.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done Boolean about whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    public void setDone(Boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    public void setTask(String task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    public void setType(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"     * String representation of the done status of task","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String representation of the done status of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"    public String checkBox() {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        if(this.isDone()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"    public Type getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        return this.type;","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"    public String fileWriteString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d Type.typeString(getType()) + \",\";","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        res \u003d isDone() ? res + \"1,\" : res + \"0,\";","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d task + \",\";","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d getDatetimeString();","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"        return res;","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"     * String representation of the type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String representation of the type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"    public abstract String typeString();","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"    public abstract String taskString();","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"    public LocalDateTime getDatetime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"        return this.datetime;","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"    public void setDatetime(LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"    public String getDatetimeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"        return this.datetime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"%s%s %s\", typeString(), checkBox(), taskString());","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":129}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    /** Initialising an empty array into which tasks can be added/manipulated/deleted */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     * This method provides a string that is the visual representation of the tasks seen by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * @return The visual representation of task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    public static String taskListString(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        ans.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"            if(i !\u003d tasks.size()-1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"                ans.append(String.format(\"%d. %s\\n\", i + 1, task.toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"                ans.append(String.format(\"%d. %s\", i + 1, task.toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        return ans.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * Initialise event subclass by type.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task duke.Task string.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type duke.Type enum.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     * @param done Whether task is done or not Bool.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"     * @param localDateTime Datetime object.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"     * @return duke.Task of requisite type.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    public static Task initialiseByType(String task, Type type, Boolean done, LocalDateTime localDateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        if(type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"            return new Todo(task, type, done);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"            return new Event(task, type, done, localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"            return new Deadline(task, type, done, localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"     * The string that is outputted when user terminates bot.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Message to say bye to user.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    public String byeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"     * Assesses the input and activates the necessary response.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"     * @param input The string of input command.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws DukeException Exceptions specific to this chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    public void interpretInput(String input) throws DukeException{","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        String task;","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        Type type;","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        if(input.equals(\"bye\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(byeString());","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(input.equals(\"list\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(taskListString(tasks));","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(input.equals(\"hello\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(\"Hello! I\u0027m duke.Duke\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"                    \"What can I do for you?\");","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"            Ui.doneTask(Integer.parseInt(input.substring(5)), tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"            // Remove all whitespaces to test if it is empty","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"            String testInput \u003d input.replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"            if(testInput.equals(\"todo\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"                throw new EmptyTodoException();","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"            task \u003d input.substring(5);","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"            type \u003d Type.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"            localDateTime \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"            Ui.addTask(task, type, localDateTime, tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"            task \u003d input.substring(9);","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"            type \u003d Type.DEADLINE;","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"            String[] tokens \u003d task.split(\" /by \");","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"            localDateTime \u003d Parser.parseDate(tokens[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            task \u003d tokens[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"            Ui.addTask(task, type, localDateTime, tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"            task \u003d input.substring(6);","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"            type \u003d Type.EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"            String[] tokens \u003d task.split(\" /at \");","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"            localDateTime \u003d Parser.parseDate(tokens[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"            task \u003d tokens[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"            Ui.addTask(task, type, localDateTime, tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"            Ui.deleteTask(Integer.parseInt(input.substring(7)), tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"            List\u003cTask\u003e filteredTasks \u003d Ui.findTasks(input.substring(5), tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(taskListString(filteredTasks));","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"            Storage.writeToFile(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"        } catch(IOException err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"     * Method call to activate the chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"     * If command bye is given, the chatbot terminates.","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"     * @param scanner Scanner that takes in the input.","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"    public void run(Scanner scanner) {","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cString\u003e tasks \u003d Storage.readFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"            this.tasks \u003d Parser.loadTasks(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (FileParseErrorException err) {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"            System.out.println(err);","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"        if(scanner.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"                interpretInput(input);","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"            } catch(DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"                System.out.println(dukeException.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"                run(scanner);","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"            if(input.equals(\"bye\"))  {","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"                scanner.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"                run(scanner);","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":144}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor to initialise the task","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task defined by the enum duke.Type.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo(String task, Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo(String task, Type type, Boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo(String task, Type type, Boolean done, LocalDateTime datetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"        super(task, type, done, datetime);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public Todo() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        super();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"     * String to be written to file.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String to be written to file.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public String fileWriteString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d Type.typeString(getType()) + \",\";","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        res \u003d isDone() ? res + \"1,\" : res + \"0,\";","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        res +\u003d getTask();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        return res;","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting datetime of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting datetime of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    public String getDatetimeString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"     * String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String reflecting task itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    public String taskString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        return getTask();","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":66}},{"path":"src/main/java/duke/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":" * Enum class for types of events.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"public enum Type {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    TODO,","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    public static String typeString(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"        if(type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"            return \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"            return \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"            return \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"            throw new NullPointerException();","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public static String getConnector(Type type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        if(type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"            return \"at\";","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"            return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        } else if(type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"            return \"by\";","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"            throw new NullPointerException();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":34}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"     * Method to add a task to our list.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"     * @param task The string of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * @param type The type of the task: event, deadline, or other type.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public static void addTask(String task, Type type, LocalDateTime localDateTime, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        Task taskObj \u003d TaskList.initialiseByType(task, type, false, localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.add(taskObj);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(String.format(\"Got it. I\u0027ve added this task:\\n\" + taskObj.toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     * Method to check the task off as done in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"     * @param taskNumber The number of the task in our list.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public static void doneTask(int taskNumber, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        taskNumber--;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        task.setDone(true);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.set(taskNumber, task);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * Method to delete the task from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * @param taskNumber The number of the task in our list.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public static void deleteTask(int taskNumber, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        taskNumber--;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"     * Filter tasks out based on regex string.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"     * @param regex String based on which to filter.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tasks duke.Task list from which to filter.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Filtered tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cTask\u003e findTasks(String regex, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        for(Task task: tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"            if(task.getTask().contains(regex)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        return filteredTasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ramapriyan912001":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"deadline submit assignment /by 29th August 9pm","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"event go birthday party /at 9th January 9pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"todo study for ma2104 everyday","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ramapriyan912001":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ramapriyan912001":1,"-":20}}]
