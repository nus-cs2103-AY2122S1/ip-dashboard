[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    String javaFxVersion \u003d \"11.0.2\"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"mainClassName \u003d \u0027Duke\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"auhc99":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"Duke is a desktop application to help manage your tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"![Ui](Ui.png)","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"### View list of commands","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"Displays a message containing the list of commands","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"Usage: `help`","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"### View list of tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"Shows all of your tasks in the list","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"Usage: `list`","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"### Add todo task","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"Adds a todo to your list of tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"Usage: `todo \u003cName\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"### Add event task","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"Adds an event to your list of tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"Usage: `event \u003cName\u003e /at \u003cd/M/yyyy\u003e \u003cHHmm\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"### Add deadline task","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"Adds a deadline to your list of tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"Usage: `deadline \u003cName\u003e /by \u003cd/M/yyyy\u003e \u003cHHmm\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"### Mark task as done","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"Marks a task in the list as done","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"Usage: `done \u003cNumber\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"### Delete task","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"Deletes a task from the list","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"Usage: `delete \u003cNumber\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"### Find tasks with matching keywords","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"Find tasks in the list with matching keywords","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"Usage: `find \u003ckeywords\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"### Exit Duke","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"Exit Duke","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"Usage: `bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"auhc99":36,"-":25}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"    private Circle displayPicture;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"            initialiseLoader(fxmlLoader);","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"        setDisplay(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"    private void initialiseLoader(FXMLLoader fxmlLoader) throws IOException {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"        fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"    private void setDisplay(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"auhc99":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.CorruptedFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":" * Main class of duke package.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    protected DukeList list;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a Duke Object.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"        list \u003d new DukeList();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"            Storage.load(list);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"        } catch (CorruptedFileException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"            list \u003d new DukeList();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"        assert list !\u003d null : \"List should be created\";","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"        DukeCommand command \u003d Parser.parseInput(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"            response \u003d command.run(list);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"        assert !response.equals(\"\") : \"Response should not be empty\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"        return response;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"auhc99":36,"-":2}},{"path":"src/main/java/duke/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":" * A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"public class DukeList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    /** ArrayList used to store tasks. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an empty DukeList.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    public DukeList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"     * Public constructor that takes in an","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"     * ArrayList to create a DukeList.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"     * @param list ArrayList to copy tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"    public DukeList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"     * Returns the task at a specific index.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     * @param i Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"     * @return Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"        return list.get(i);","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * @return Size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"    public int size() {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"        return list.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"     * Adds a new task.","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"        list.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"     * Deletes a task.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"     * @param i Index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"        list.remove(i);","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"    public String getMatches(String keyWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"auhc99"},"content":"        StringBuilder matchesString \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"auhc99"},"content":"        int matches \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"auhc99"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"auhc99"},"content":"            if (task.getDescription().contains(keyWord)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"auhc99"},"content":"                matchesString.append(matches++ + 1).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"auhc99"},"content":"        if (matches \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"auhc99"},"content":"            return \"No matches found\";","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"auhc99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"auhc99"},"content":"            assert matches \u003e 0 : \"Matches must be more then 0\";","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"auhc99"},"content":"            return matchesString.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"auhc99"},"content":"        StringBuilder listString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"auhc99"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"auhc99"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"auhc99"},"content":"            String line \u003d (i + 1) + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"auhc99"},"content":"            listString.append(line);","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"auhc99"},"content":"        return listString.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"auhc99"},"content":"     * Iterator.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"auhc99"},"content":"     * @return Iterator.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"auhc99"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"auhc99"},"content":"        return list.iterator();","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":111}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"auhc99":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"auhc99":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    private static final String START_MESSAGE \u003d \"Hi, what can I do for you?\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"            + \"Type \\\"help\\\" for the list of commands.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Sana.jpg\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Winter.jpg\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     * Initialises the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"                DialogBox.getDukeDialog(START_MESSAGE, dukeImage)","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"        );","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"auhc99":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"import duke.exception.CorruptedFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidArgumentsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":" * Class to deal with making sense of the user command","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    /** Types of tasks. */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"        TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"        EVENT,","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"     * Returns the DukeCommand parsed from input.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     * @return DukeCommand parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"    public static DukeCommand parseInput(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"            } else if (input.equals(\"help\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"                return checkDoneCommand(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"                return checkDeleteCommand(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"                return checkFindCommand(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"                return new TodoCommand((ToDo) parseTask(input, TaskType.TODO));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"                return new DeadlineCommand((Deadline) parseTask(input, TaskType.DEADLINE));","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"                return new EventCommand((Event) parseTask(input, TaskType.EVENT));","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"auhc99"},"content":"            return new InvalidCommand(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"auhc99"},"content":"     * Returns the Task parsed from file line.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"auhc99"},"content":"     * @param line File line to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"auhc99"},"content":"     * @return Task parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"auhc99"},"content":"     * @throws CorruptedFileException If file line is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"auhc99"},"content":"    public static Task parseFileLine(String line) throws CorruptedFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"auhc99"},"content":"        String[] splitLine \u003d line.split(\"%,\", 4);","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"auhc99"},"content":"        String input;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"auhc99"},"content":"        TaskType type;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"auhc99"},"content":"        boolean isDone \u003d Boolean.parseBoolean(splitLine[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"auhc99"},"content":"        switch (splitLine[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"auhc99"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"auhc99"},"content":"            input \u003d \"todo \" + splitLine[2];","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"auhc99"},"content":"            type \u003d TaskType.TODO;","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"auhc99"},"content":"        case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"auhc99"},"content":"            input \u003d \"deadline \" + splitLine[2] + \" /by \" + splitLine[3];","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"auhc99"},"content":"            type \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"auhc99"},"content":"        case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"auhc99"},"content":"            input \u003d \"event \" + splitLine[2] + \" /at \" + splitLine[3];","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"auhc99"},"content":"            type \u003d TaskType.EVENT;","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"auhc99"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"auhc99"},"content":"            assert false : \"Invalid task type\";","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"auhc99"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"auhc99"},"content":"            Task task \u003d parseTask(input, type);","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"auhc99"},"content":"            if (isDone) {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"auhc99"},"content":"                task.markDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"auhc99"},"content":"            return task;","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"auhc99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"auhc99"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"auhc99"},"content":"    private static DukeCommand checkDoneCommand(String input) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"auhc99"},"content":"            if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"auhc99"},"content":"            int taskNum \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"auhc99"},"content":"            return new DoneCommand(taskNum);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"auhc99"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"auhc99"},"content":"    private static DukeCommand checkDeleteCommand(String input) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"auhc99"},"content":"            if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"auhc99"},"content":"            int taskNum \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"auhc99"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"auhc99"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"auhc99"},"content":"    private static DukeCommand checkFindCommand(String input) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"auhc99"},"content":"            if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"auhc99"},"content":"            if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"auhc99"},"content":"            String keyWord \u003d input.substring(5);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"auhc99"},"content":"            return new FindCommand(keyWord);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"auhc99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"auhc99"},"content":"     * Returns the Task parsed from input.","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"auhc99"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"auhc99"},"content":"     * @param type Type of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"auhc99"},"content":"     * @return Task parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"auhc99"},"content":"     * @throws DukeException If arguments are missing or invalid or if input contains unknown commands.","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"auhc99"},"content":"    private static Task parseTask(String input, TaskType type) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"auhc99"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"auhc99"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"auhc99"},"content":"            return parseTodoTask(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"auhc99"},"content":"        case DEADLINE:","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"auhc99"},"content":"            return parseDeadlineTask(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"auhc99"},"content":"        case EVENT:","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"auhc99"},"content":"            return parseEventTask(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"auhc99"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"auhc99"},"content":"            assert false : \"Invalid task type\";","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"auhc99"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"auhc99"},"content":"    private static Task parseTodoTask(String input) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"auhc99"},"content":"        String description;","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"auhc99"},"content":"        Task task;","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"auhc99"},"content":"            if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"auhc99"},"content":"            description \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"auhc99"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"auhc99"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"auhc99"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"auhc99"},"content":"        return task;","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"auhc99"},"content":"    private static Task parseDeadlineTask(String input) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"auhc99"},"content":"        int descriptionEnd;","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"auhc99"},"content":"        String description;","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"auhc99"},"content":"        String dateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"auhc99"},"content":"        Task task;","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"auhc99"},"content":"            if (input.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"auhc99"},"content":"            descriptionEnd \u003d input.indexOf(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"auhc99"},"content":"            description \u003d input.substring(9, descriptionEnd);","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"auhc99"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"auhc99"},"content":"            dateTime \u003d input.substring(descriptionEnd + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"auhc99"},"content":"            if (dateTime.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"auhc99"},"content":"            task \u003d new Deadline(description, LocalDateTime.parse(dateTime, DATE_TIME_FORMATTER));","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"auhc99"},"content":"        } catch (StringIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"auhc99"},"content":"        return task;","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"auhc99"},"content":"    private static Task parseEventTask(String input) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"auhc99"},"content":"        int descriptionEnd;","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"auhc99"},"content":"        String description;","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"auhc99"},"content":"        String dateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"auhc99"},"content":"        Task task;","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"auhc99"},"content":"            if (input.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"auhc99"},"content":"            descriptionEnd \u003d input.indexOf(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"auhc99"},"content":"            description \u003d input.substring(6, descriptionEnd);","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"auhc99"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"auhc99"},"content":"            dateTime \u003d input.substring(descriptionEnd + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"auhc99"},"content":"            if (dateTime.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"auhc99"},"content":"            task \u003d new Event(description, LocalDateTime.parse(dateTime, DATE_TIME_FORMATTER));","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"auhc99"},"content":"        } catch (StringIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":240,"author":{"gitId":"auhc99"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":241,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":242,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":242}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"import duke.exception.CorruptedFileException;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":" * Class to loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    /** Save file path. */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    private static final String SAVE_FILE \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    /** Save file location. */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    private static final String SAVE_DIR \u003d \"data/\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     * Returns the Success/Error message after loading save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"     * @param list DukeList to be populated.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"     * @throws CorruptedFileException If error occurs while writing into save file.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"    public static void load(DukeList list) throws CorruptedFileException {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"        File file \u003d new File(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"                Task task \u003d Parser.parseFileLine(line);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"                list.addTask(task);","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"            scanner.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"        } catch (DukeException | FileNotFoundException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     * Saves DukeList into save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"     * @param list DukeList to be saved.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"     * @throws CorruptedFileException If error occurs while writing into save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"    public static void saveFile(DukeList list) throws CorruptedFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"        File dir \u003d new File(SAVE_DIR);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"        if (!Files.exists(Paths.get(SAVE_DIR))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"            dir.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"        File file \u003d new File(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"            FileWriter fw \u003d new FileWriter(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"            for (Task t : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"                fw.write(t.formatSave() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":71}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class DeadlineCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final Deadline task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a DoneCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     * @param task Deadline to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    public DeadlineCommand(Deadline task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"        list.addTask(task);","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"        return stringifyMessage(list.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    private String stringifyMessage(int listSize) {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidArgumentsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"public class DeleteCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    private final int id;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a DeleteCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"     * @param id Id of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws InvalidArgumentsException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"            Task task \u003d list.getTask(id);","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"            list.deleteTask(id);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"            return stringifyMessage(task.toString(), list.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    private String stringifyMessage(String taskString, int listSize) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"                + taskString + \"\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":36}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidArgumentsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"public class DoneCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    private final int id;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a DoneCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"     * @param id Id of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    public DoneCommand(int id) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws InvalidArgumentsException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"            Task task \u003d list.getTask(id);","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"            task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"            return stringifyMessage(task.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    private String stringifyMessage(String taskString) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"                + taskString;","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":35}},{"path":"src/main/java/duke/command/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public abstract class DukeCommand {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    public DukeCommand() {}","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    public abstract String run(DukeList list) throws DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":11}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class EventCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final Event task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an EventCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     * @param task Event to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    public EventCommand(Event task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"        list.addTask(task);","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"        return stringifyMessage(list.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    private String stringifyMessage(int listSize) {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":30}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.exception.CorruptedFileException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"public class ExitCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws CorruptedFileException {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        Storage.saveFile(list);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"        return \"Exiting\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":21}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"public class FindCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"    private final String keyWord;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    public FindCommand(String keyWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        return list.getMatches(keyWord);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":16}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"public class HelpCommand extends DukeCommand {","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"    private static final String HELP_MESSAGE \u003d \"Here are the available commands:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"help\\\" to display the list of commands.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"list\\\" to display the list of tasks.\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"todo {description}\\\" to add a todo with a description.\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"event {description} /at {d/M/yyyy HHmm}\\\" to add an event with description and dateTime.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"dateline {description} /by {d/M/yyyy HHmm}\\\" to add a deadline with description and dateTime.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"done {n}\\\" to mark task number n done.\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"delete {n}\\\" to delete task number n.\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"find {keyWord}\\\" to find tasks with matching keywords.\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"            + \"- Use \\\"bye\\\" to exit the program.\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"auhc99":24}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class InvalidCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final DukeException e;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a InvalidCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     * @param e Exception thrown.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    public InvalidCommand(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        this.e \u003d e;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"        throw e;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"public class ListCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        return list.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":15}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class TodoCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final ToDo task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a TodoCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    public TodoCommand(ToDo task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"        list.addTask(task);","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"        return stringifyMessage(list.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    private String stringifyMessage(int listSize) {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"                + \"Now you have \" + listSize + \" tasks in the list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":30}},{"path":"src/main/java/duke/exception/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A DukeException that occurs during save file reading and writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class CorruptedFileException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a CorruptedFileException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    public CorruptedFileException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        super(\"Corrupted File\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"auhc99":14}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * An exception specific to Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     * @param message Error message to be shown.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":16}},{"path":"src/main/java/duke/exception/InvalidArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A DukeException that occurs when a command","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" * contains invalid or missing arguments.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"public class InvalidArgumentsException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an InvalidArgumentsException.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    public InvalidArgumentsException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        super(\"Invalid or Missing Arguments\");","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":15}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A DukeException that occurs when an unknown command is given.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an InvalidTaskException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        super(\"Invalid Command\");","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":" * A task that needs to be completed by a certain DateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for display. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for save file. */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    /** DateTime of the deadline. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"     * @param by DateTime of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"     * of the deadline to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * @return Formatted String representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    public String formatSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"        return \"D%,\" + isDone + \"%,\" + description + \"%,\" + by.format(saveFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"auhc99":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":" * A task that occurs at a certain DateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for display. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for save file. */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    /** DateTime of the event. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"     * @param at DateTime of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"     * of the event to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * @return Formatted String representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    public String formatSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"        return \"E%,\" + isDone + \"%,\" + description + \"%,\" + at.format(saveFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"auhc99":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A task added by the user containing a description.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /** The description of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    /** The status of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of its status.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"     * @return String representation of its status.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"     * of the task to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"     * @return Formatted String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"    public abstract String formatSave();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"auhc99":60}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A task that needs to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a ToDo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"     * of the task to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"     * @return Formatted String representation.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"    public String formatSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"        return \"T%,\" + isDone + \"%,\" + description;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"auhc99":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        \u003cHBox fx:id\u003d\"textBox\" maxHeight\u003d\"-Infinity\" styleClass\u003d\"text-box\" stylesheets\u003d\"@duke.css\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"                        \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" bottom\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"                        \u003cFont size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"                \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" pickOnBounds\u003d\"true\" radius\u003d\"48.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"                \u003cInsets /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"            \u003c/HBox.margin\u003e\u003c/Circle\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" bottom\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"auhc99":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"            \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"auhc99":22}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    public void exception_message_correct() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        DukeException e \u003d new DukeException(\"Test Test\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        assertEquals(\"Test Test\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":16}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    public void toDo_toString_correct() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        ToDo t \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        assertEquals(\"[T][ ] Test ToDo\", t.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    public void toDo_formatSave_correct() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"        ToDo t \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"        assertEquals(\"T%,false%,Test ToDo\", t.formatSave());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":23}}]
