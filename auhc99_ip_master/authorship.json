[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.exception.CorruptedFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":" * Main class of duke package.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"     * Static method to start the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    private static void runDuke() {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        DukeList list \u003d new DukeList();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        Ui.greet();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"        Ui.display(Storage.load(list));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"        Ui.begin();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"        while (true) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"            String input \u003d Ui.readLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"            DukeCommand command \u003d Parser.parseInput(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"                Ui.display(command.run(list));","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"                Ui.display(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"            Storage.saveFile(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"            Ui.display(\"File saved\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"        } catch(CorruptedFileException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"            Ui.display(\"Error saving file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"        Ui.bye();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"        runDuke();","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"auhc99":43,"-":2}},{"path":"src/main/java/duke/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":" * A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"public class DukeList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    /** ArrayList used to store tasks. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an empty DukeList.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    public DukeList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"     * Public constructor that takes in an","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"     * ArrayList to create a DukeList.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"     * @param list ArrayList to copy tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"    public DukeList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"     * Returns the task at a specific index.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     * @param i Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"     * @return Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"        return list.get(i);","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * @return Size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"    public int size() {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"        return list.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"     * Add a new task.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"        list.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"     * Delete a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"     * @param i Index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"    public void delete(int i) {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"        list.remove(i);","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"    public String getMatches(String keyWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"auhc99"},"content":"        StringBuilder listString \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"auhc99"},"content":"        int matches \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"auhc99"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"auhc99"},"content":"            if (task.getDescription().contains(keyWord)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"auhc99"},"content":"                listString.append(\"  \").append(matches++ + 1).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"auhc99"},"content":"        if (matches \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"auhc99"},"content":"            return \"No matches found\";","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"auhc99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"auhc99"},"content":"            return listString.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"auhc99"},"content":"        StringBuilder listString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"auhc99"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"auhc99"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"auhc99"},"content":"            String line \u003d \"  \" + (i + 1) + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"auhc99"},"content":"            listString.append(line);","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"auhc99"},"content":"        return listString.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"auhc99"},"content":"     * Iterator.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"auhc99"},"content":"     * @return Iterator.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"auhc99"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"auhc99"},"content":"        return list.iterator();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":110}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.CorruptedFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidArgumentsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":" * Class to deal with making sense of the user command","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    /** Types of tasks. */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"        TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"        EVENT,","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"     * Returns the DukeCommand parsed from input.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"     * @return DukeCommand parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"    public static DukeCommand parseInput(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"                    // filter out doneXXXX","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"                    // StringIndexOutOfBoundsException thrown here if input \u003d \"done\",","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"                    // which is caught by IndexOutOfBoundsException","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"                    if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"                    // NumberFormatException thrown here if substring is a invalid integer string","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"                    int taskNum \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"                    return new DoneCommand(taskNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"                    // filter out deleteXXXX","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"                    // StringIndexOutOfBoundsException thrown here if input \u003d \"delete\",","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"                    // which is caught by IndexOutOfBoundsException","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"                    if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"                    // NumberFormatException thrown here if substring is a invalid integer string","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"                    int taskNum \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"                    return new DeleteCommand(taskNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"auhc99"},"content":"                    // filter out findXXXX","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"auhc99"},"content":"                    // StringIndexOutOfBoundsException thrown here if input \u003d \"find\",","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"auhc99"},"content":"                    // which is caught by IndexOutOfBoundsException","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"auhc99"},"content":"                    if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"auhc99"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"auhc99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"auhc99"},"content":"                    // filter out \"find \"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"auhc99"},"content":"                    if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"auhc99"},"content":"                        throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"auhc99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"auhc99"},"content":"                    String keyWord \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"auhc99"},"content":"                    return new FindCommand(keyWord);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"auhc99"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"auhc99"},"content":"                return new TodoCommand((ToDo) parseTask(input, TaskType.TODO));","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"auhc99"},"content":"                return new DeadlineCommand((Deadline) parseTask(input, TaskType.DEADLINE));","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"auhc99"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"auhc99"},"content":"                return new EventCommand((Event) parseTask(input, TaskType.EVENT));","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"auhc99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"auhc99"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"auhc99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"auhc99"},"content":"            return new InvalidCommand(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"auhc99"},"content":"     * Returns the Task parsed from file line.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"auhc99"},"content":"     * @param line File line to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"auhc99"},"content":"     * @return Task parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"auhc99"},"content":"     * @throws CorruptedFileException If file line is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"auhc99"},"content":"    public static Task parseFileLine(String line) throws CorruptedFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"auhc99"},"content":"        String[] splitted \u003d line.split(\"%,\", 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"auhc99"},"content":"        String input;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"auhc99"},"content":"        TaskType type;","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"auhc99"},"content":"        boolean isDone \u003d Boolean.parseBoolean(splitted[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"auhc99"},"content":"        switch (splitted[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"auhc99"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"auhc99"},"content":"            input \u003d \"todo \" + splitted[2];","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"auhc99"},"content":"            type \u003d TaskType.TODO;","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"auhc99"},"content":"        case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"auhc99"},"content":"            input \u003d \"deadline \" + splitted[2] + \" /by \" + splitted[3];","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"auhc99"},"content":"            type \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"auhc99"},"content":"        case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"auhc99"},"content":"            input \u003d \"event \" + splitted[2] + \" /at \" + splitted[3];","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"auhc99"},"content":"            type \u003d TaskType.EVENT;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"auhc99"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"auhc99"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"auhc99"},"content":"            return parseTask(input, type);","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"auhc99"},"content":"        } catch (InvalidArgumentsException | InvalidTaskException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"auhc99"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"auhc99"},"content":"     * Returns the Task parsed from input.","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"auhc99"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"auhc99"},"content":"     * @param type Type of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"auhc99"},"content":"     * @return Task parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"auhc99"},"content":"     * @throws InvalidArgumentsException If arguments are missing or invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"auhc99"},"content":"     * @throws InvalidTaskException If input contains unknown commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"auhc99"},"content":"    private static Task parseTask(String input, TaskType type) throws InvalidArgumentsException, InvalidTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"auhc99"},"content":"        int descriptionEnd;","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"auhc99"},"content":"        String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"auhc99"},"content":"        String dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"auhc99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"auhc99"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"auhc99"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"auhc99"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"auhc99"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"auhc99"},"content":"                // filter out todoXXXX","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"todo\"","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"auhc99"},"content":"                if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"todo \"","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"auhc99"},"content":"                description \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"auhc99"},"content":"                // Checks if description is all whitespace","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"auhc99"},"content":"                if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"auhc99"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"auhc99"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"auhc99"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"auhc99"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"auhc99"},"content":"                // filter out deadlineXXXX","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"deadline\"","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"auhc99"},"content":"                if (input.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"auhc99"},"content":"                descriptionEnd \u003d input.indexOf(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"deadline /by \"","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"auhc99"},"content":"                // or if \" /by \" is not present in input","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"auhc99"},"content":"                description \u003d input.substring(9, descriptionEnd);","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"auhc99"},"content":"                // Checks if description is all whitespace","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"auhc99"},"content":"                if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"deadline $String /by \"","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"auhc99"},"content":"                dateTime \u003d input.substring(descriptionEnd + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"auhc99"},"content":"                // Checks if dateTime is all whitespace","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"auhc99"},"content":"                if (dateTime.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"auhc99"},"content":"                task \u003d new Deadline(description, LocalDateTime.parse(dateTime, formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"auhc99"},"content":"            } catch (StringIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"auhc99"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"auhc99"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"auhc99"},"content":"                // filter out eventXXXX","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"event\"","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"auhc99"},"content":"                if (input.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"auhc99"},"content":"                descriptionEnd \u003d input.indexOf(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"event /at\"","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"auhc99"},"content":"                // or if \" /at \" is not present in input","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"auhc99"},"content":"                description \u003d input.substring(6, descriptionEnd);","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"auhc99"},"content":"                // Checks if description is all whitespace","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"auhc99"},"content":"                if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"auhc99"},"content":"                // StringIndexOutOfBoundsException thrown here if input \u003d \"event $String /at \"","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"auhc99"},"content":"                dateTime \u003d input.substring(descriptionEnd + 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"auhc99"},"content":"                // Checks if dateTime is all whitespace","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"auhc99"},"content":"                if (dateTime.trim().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"auhc99"},"content":"                    throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"auhc99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"auhc99"},"content":"                task \u003d new Event(description, LocalDateTime.parse(dateTime, formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"auhc99"},"content":"            } catch (StringIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"auhc99"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"auhc99"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"auhc99"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":222,"author":{"gitId":"auhc99"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"auhc99"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":226}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.exception.CorruptedFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":" * Class to loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    /** Save file path. */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    private final static String SAVE_FILE \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    /** Save file location. */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    private final static String SAVE_DIR \u003d \"data/\";","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     * Returns the Success/Error message after loading save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"     * @param list DukeList to be populated.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"     * @return Success/Error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"    public static String load(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"        File file \u003d new File(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"                Task task \u003d Parser.parseFileLine(line);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"                list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"            scanner.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"            return \"Save file successfully loaded\";","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"            return \"Error loading save file, list might be messed up\";","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"            return \"No save file found, making a new one\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"     * Saves DukeList into save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"     * @param list DukeList to be saved.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"     * @throws CorruptedFileException If error occurs while writing into save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"    public static void saveFile(DukeList list) throws CorruptedFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"        File dir \u003d new File(SAVE_DIR);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"        if (!Files.exists(Paths.get(SAVE_DIR))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"            dir.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"        File file \u003d new File(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"            FileWriter fw \u003d new FileWriter(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"            for (Task t : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"                fw.write(t.formatSave() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"auhc99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"auhc99"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":74}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":" * Class to handle user interaction.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    private final static String LOGO \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"            \"                 |`._         |\\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"                    \"                 `   `.  .    | `.    |`.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"                    \"                  .    `.|`-. |   `-..\u0027  \\\\           _,.-\u0027\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"                    \"                  \u0027      `-. `.           \\\\ /|   _,-\u0027   /\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"                    \"              .--..\u0027        `._`           ` |.-\u0027      /\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"                    \"               \\\\   |                                  /\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"                    \"            ,..\u0027   \u0027                                 /\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"                    \"            `.                                      /\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"                    \"            _`.---                                 /\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"                    \"        _,-\u0027               `.                 ,-  /\\\"-._\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"                    \"      ,\\\"                   | `.             ,\u0027|   `    `.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"                    \"    .\u0027                     |   `.         .\u0027  |    .     `.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"                    \"  ,\u0027                       \u0027   ()`.     ,\u0027()  \u0027    |       `.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"                    \"\u0027-.                    |`.  `.....-\u0027    -----\u0027 _   |         .\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"                    \" / ,   ________..\u0027     \u0027  `-._              _.\u0027/   |         :\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"                    \" ` \u0027-\\\"\\\" _,.--\\\"\u0027         \\\\   | `\\\"+--......-+\u0027 //   j `\\\"--.. , \u0027\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"                    \"    `.\u0027\\\"    .\u0027           `. |   |     |   / //    .       ` \u0027\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"                    \"      `.   /               `\u0027   |    j   /,.\u0027     \u0027\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"                    \"        \\\\ /                  `-.|_   |_.-\u0027       /\\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"                    \"         /                        `\\\"\\\"          .\u0027  \\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"                    \"        j                                           .\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"                    \"        |                                 _,        |\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"                    \"        |             ,^._            _.-\\\"          \u0027\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"                    \"        |          _.\u0027    `\u0027\\\"\\\"`----`\\\"\u0027   `._       \u0027\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"                    \"        j__     _,\u0027                         `-.\u0027-.\\\"`\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"                    \"          \u0027,-.,\u0027 mh\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    private final static String BOOT_MESSAGE \u003d \"Whats\u0027up ma dawg?\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    private final static String LOAD_MESSAGE \u003d \"Finding previous save file...\";","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"    private final static String BEGIN_MESSAGE \u003d \"What can I do for you ma dawg?\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"    private final static String BYE_MESSAGE \u003d \"Cya next time ma dawg\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     * Prints out content with borders.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     * @param content Content of message.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    public static void display(String content) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"        System.out.println(","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"                \"69696969696969696969696969696969696969696969696969696969696966969696969696969696969696969696969\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"                        + content","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"                        + \"\\n696969696969696969696969696969696969696969696969\"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"                        + \"69696969669696969696969696969696969696969696969\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"     * Displays message when starting bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"auhc99"},"content":"        display(LOGO);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"auhc99"},"content":"        display(BOOT_MESSAGE);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"auhc99"},"content":"        display(LOAD_MESSAGE);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"auhc99"},"content":"     * Displays message when save file loaded.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"auhc99"},"content":"    public static void begin() {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"auhc99"},"content":"        display(BEGIN_MESSAGE);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"auhc99"},"content":"     * Displays message when exiting bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"auhc99"},"content":"    public static void bye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"auhc99"},"content":"        display(BYE_MESSAGE);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"auhc99"},"content":"     * Reads user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"auhc99"},"content":"    public static String readLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"auhc99"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":86}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class DeadlineCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final Deadline task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    public DeadlineCommand(Deadline task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"                + \"  \"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidArgumentsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"public class DeleteCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    private final int id;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws InvalidArgumentsException {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"            Task task \u003d list.get(id);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"            list.delete(id);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"                    + \"  \"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"                    + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"                    + \"Now you have \" + list.size() + \" tasks in the list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":28}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.InvalidArgumentsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"public class DoneCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    private final int id;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    public DoneCommand(int id) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws InvalidArgumentsException {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"            Task task \u003d list.get(id);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"            task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"                    + \"  \"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"                    + task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":27}},{"path":"src/main/java/duke/command/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    public DukeCommand() {}","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":13}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class EventCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final Event task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    public EventCommand(Event task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"                + \"  \"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":22}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"public class ExitCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":9}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"public class FindCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"    private final String keyWord;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    public FindCommand(String keyWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        return list.getMatches(keyWord);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":16}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class InvalidCommand extends DukeCommand{","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final DukeException e;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    public InvalidCommand(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        this.e \u003d e;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) throws DukeException{","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        throw e;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":18}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"public class ListCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        return list.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":15}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.DukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class TodoCommand extends DukeCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"    private final ToDo task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    public TodoCommand(ToDo task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    public String run(DukeList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"                + \"  \"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":22}},{"path":"src/main/java/duke/exception/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A DukeException that occurs during save file reading and writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class CorruptedFileException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a CorruptedFileException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    public CorruptedFileException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        super(\"Corrupted File\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"auhc99":14}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * An exception specific to Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     * @param message Error message to be shown.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":16}},{"path":"src/main/java/duke/exception/InvalidArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A DukeException that occurs when a command","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" * contains invalid or missing arguments.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"public class InvalidArgumentsException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an InvalidArgumentsException.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    public InvalidArgumentsException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        super(\"Invalid or Missing Arguments\");","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":15}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A DukeException that occurs when an unknown command is given.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an InvalidTaskException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        super(\"Invalid Command\");","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":" * A task that needs to be completed by a certain DateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for display. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for save file. */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    /** DateTime of the deadline. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"     * @param by DateTime of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"     * of the deadline to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * @return Formatted String representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    public String formatSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"        return \"D%,\" + isDone + \"%,\" + description + \"%,\" + by.format(saveFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"auhc99":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":" * A task that occurs at a certain DateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for display. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    /** Static formatter to format DateTime for save file. */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    private static final DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    /** DateTime of the event. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create an Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"     * @param at DateTime of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"     * of the event to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * @return Formatted String representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"    public String formatSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"        return \"E%,\" + isDone + \"%,\" + description + \"%,\" + at.format(saveFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"auhc99":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A task added by the user containing a description.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /** The description of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    /** The status of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of its status.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"     * @return String representation of its status.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"auhc99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"auhc99"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"auhc99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"auhc99"},"content":"     * of the task to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"auhc99"},"content":"     * @return Formatted String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"auhc99"},"content":"    public abstract String formatSave();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"auhc99":60}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":" * A task that needs to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"     * Public constructor to create a ToDo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"auhc99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"auhc99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"auhc99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"auhc99"},"content":"     * Returns the formatted String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"auhc99"},"content":"     * of the task to write into the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"auhc99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"auhc99"},"content":"     * @return","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"auhc99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"auhc99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"auhc99"},"content":"    public String formatSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"auhc99"},"content":"        return \"T%,\" + isDone + \"%,\" + description;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"auhc99":37}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    public void exception_message_correct() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        DukeException e \u003d new DukeException(\"Test Test\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        assertEquals(\"Test Test\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":15}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"    public void toDo_toString_correct() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"        ToDo t \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"        assertEquals(\"[T][ ] Test ToDo\", t.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"    public void toDo_formatSave_correct() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"        ToDo t \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"        assertEquals(\"T%,false%,Test ToDo\", t.formatSave());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"auhc99":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"auhc99"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"auhc99"},"content":"todo debug code","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"auhc99"},"content":"deadline ip project /by 30/8/2021 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"auhc99"},"content":"done 5","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"auhc99"},"content":"todo take a break","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"auhc99"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"auhc99"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"auhc99"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"auhc99"},"content":"event CS2103T Lecture /at 27/8/2021 1600","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"auhc99"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"auhc99"},"content":"event meet up with Adolph Blaine Charles David Earl Frederick Gerald Hubert Irvin John Kenneth Lloyd Martin Nero Oliver Paul Quincy Randolph Sherman Thomas Uncas Victor William Xerxes Yancy Zeus Wolfeschlegelsteinhausenbergerdorffwelchevoralternwarengewissenhaftschaferswessenschafewarenwohlgepflegeundsorgfaltigkeitbeschutzenvonangreifendurchihrraubgierigfeindewelchevoralternzwolftausendjahresvorandieerscheinenvanderersteerdemenschderraumschiffgebrauchlichtalsseinursprungvonkraftgestartseinlangefahrthinzwischensternartigraumaufdersuchenachdiesternwelchegehabtbewohnbarplanetenkreisedrehensichundwohinderneurassevonverstandigmenschlichkeitkonntefortpflanzenundsicherfreuenanlebenslanglichfreudeundruhemitnichteinfurchtvorangreifenvonandererintelligentgeschopfsvonhinzwischensternartigraum /at 6/9/2021 1200","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"auhc99"},"content":"event cancel previous event /at 66/66/66666 6666","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"auhc99"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"auhc99"},"content":"delete -2","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"auhc99"},"content":"deadline brush teeth /by 1/1/1111 1111","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"auhc99"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"auhc99"},"content":"deadline complete homework /at","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"auhc99"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"auhc99"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"auhc99"},"content":"delete 5","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"auhc99"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"auhc99"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"auhc99":22}}]
