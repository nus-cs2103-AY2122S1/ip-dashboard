[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yongxiangng":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import duke.io.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import duke.io.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import duke.io.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":" * Main class for Duke app.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        TaskList tasks1;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"            tasks1 \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"            tasks1 \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        tasks \u003d tasks1;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        parser \u003d new Parser(tasks, ui);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"     * Driver code for Duke","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"     * @param args arguments for main method.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"     * Runs the duke app.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        // start","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        start();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        // parse","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"        while (!(input \u003d scanner.nextLine().trim()).equals(\"bye\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"                parser.parse(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"                ui.print(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        // end","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        exit();","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"     * Starts up Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    private void start() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"        ui.sayHi();","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"     * Exits Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"    private void exit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"        ui.sayBye();","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yongxiangng":86,"-":2}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":" * Enum type of possible user commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"public enum Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"    LIST, DONE, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":8}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":" * Exceptions thrown by Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":10}},{"path":"src/main/java/duke/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.io;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":" * Encapsulates parsing of user inputs into the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * Parses input and handles user input accordingly.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     * @param input command given by user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     * @throws DukeException exception thrown due to invalid command or file writing error.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        Command command;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        String[] userInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        if (!userInput[0].equals(userInput[0].toLowerCase())) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"                    String.format(\"Please input command with lowercase! Did you mean %s?\", userInput[0].toLowerCase()));","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"            command \u003d Command.valueOf(userInput[0].toUpperCase());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        switch (command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        case LIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"            tasks.print(ui);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        case DONE:","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"            setTaskDone(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"            addTodo(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"            addDeadline(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"        case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"            addEvent(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        case DELETE:","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"            deleteTask(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        case FIND:","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"            findTask(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"     * Adds the input to the list of tasks and prints out the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"     * @param input to be added and printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"    private void addTask(Task input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"        ui.print(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"                input, tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"     * Adds a todo task to the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"    private void addTodo(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"            addTask(new Todo(userInput[1]));","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"duke.task.Todo description cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"     * Adds a deadline task to the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"    private void addDeadline(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"            String deadlineDescription \u003d userInput[1].split(\" /by \")[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"            String by \u003d userInput[1].split(\" /by \")[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"            addTask(new Deadline(deadlineDescription, by));","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"duke.task.Deadline description and time by cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"     * Adds a event task to the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"    private void addEvent(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"            String eventDescription \u003d userInput[1].split(\" /at \")[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"            String by \u003d userInput[1].split(\" /at \")[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"            addTask(new Event(eventDescription, by));","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"duke.task.Event description and time at cannot be empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"     * Deletes a task given it\u0027s index from the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"    private void deleteTask(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"            int i \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"            tasks.remove(i - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"            String taskWord \u003d tasks.size() \u003d\u003d 1","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"                    ? \"task\"","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"                    : \"tasks\";","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"            ui.print(String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"                    task, tasks.size(), taskWord));","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Please give a valid number!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"     * Prints the tasks filtered by keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"    private void findTask(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"            tasks.filter(userInput[1]).print(ui, \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Please enter something to find for!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"     * Set i-th task to be done and prints confirmation message.","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"yongxiangng"},"content":"    private void setTaskDone(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"yongxiangng"},"content":"            int i \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"yongxiangng"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"yongxiangng"},"content":"            task.setDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"yongxiangng"},"content":"            ui.print(String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task.toString()));","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Please give a valid number!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":173}},{"path":"src/main/java/duke/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.io;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":" * Encapsulates the methods used to read and store data onto disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     * Loads task list from file path.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"                String[] taskString \u003d s.nextLine().trim().split(\" \\\\| \");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"                Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"                switch (taskString[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"                    task \u003d new Todo(taskString[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"                    task \u003d new Deadline(taskString[2], taskString[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"                    task \u003d new Event(taskString[2], taskString[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"                default:","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"                    throw new DukeException(\"Invalid task type found!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"                if (taskString[1].equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"                    task.setDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"            s.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"            createFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"        return tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"     * Creates file at the specified file path.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"    private void createFile() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"            f.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Could not create new file!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"     * Saves task list to file path.","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"     * @param taskList the path to save task list to.","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"            fw.write(taskList.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Unable to save your list of tasks!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":92}},{"path":"src/main/java/duke/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.io;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":" * Encapsulates the methods used to print to output.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"    private static final String LINE_SEPARATOR \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"     * Prints a formatted message with line separator on top and bottom.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"     * @param message String to be printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    public void print(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"        String indentedMessage \u003d \"\\t \" + message.replaceAll(\"\\n\", \"\\n\\t \") + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        System.out.println(LINE_SEPARATOR + indentedMessage + LINE_SEPARATOR);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"     * Prints a loading error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        print(\"LOADING ERROR! ;_;\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     * Prints a hi message.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    public void sayHi() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     * Prints a bye message.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    public void sayBye() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":40}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":" * Deadline class which is subclass of Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    // Time of deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    protected String by;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"            LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation of deadline task.","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation which is use to store the tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation used for storing task.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        return String.format(\"D | %s | %s | %s\", isDone ? \"1\" : \"0\", description, by);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":" * Event class which is a subclass of Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    // Time which event happen at","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    protected String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"            LocalDate date \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"            this.at \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"            this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation of event task.","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation which is use to store the tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation used for storing task.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        return String.format(\"E | %s | %s | %s\", isDone ? \"1\" : \"0\", description, at);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":" * Task class which contains description of task and whether task is done.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"     * Gets the icon representation of duke.task.Task depending if duke.task.Task is done.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"     * @return X if done, empty otherwise.","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     * Sets task to be done.","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation with status icon and description of task.","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation which is used to store the tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation used for storing task.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        return String.format(\"  | %s | %s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":49}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.io.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":" * Encapsulates a list of tasks and support manipulation of the tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * @return the number of tasks in the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"     * Returns the task at index i.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"     * @param i the index of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"     * @return the task at index i.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        return taskList.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"     * Removes the task at index i.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"     * @param i the index of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"        taskList.remove(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"     * Adds task to the end of the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"     * @param task the task to be added into the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"     * String representation of the list of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"     * @return String that represents the list of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"            sb.append(task.toDataFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"    public void print(Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"        print(ui, \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"     * Prints out the task list formatted and indented.","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"     * @param ui The Ui object which is used to print to output.","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"    public void print(Ui ui, String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"        StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"        if (!message.isEmpty()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"            tasksString.append(message).append(System.lineSeparator());","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"            String taskAsString \u003d i \u003d\u003d taskList.size() - 1","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"                    ? String.format(\"%d.%s\", i + 1, taskList.get(i))","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"                    : String.format(\"%d.%s\\n\", i + 1, taskList.get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"            tasksString.append(taskAsString);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"        ui.print(tasksString.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":107}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":" * Todo class which is a subclass of Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation of todo task.","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation which is use to store the tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation used for storing task.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        return String.format(\"T | %s | %s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":31}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public void toDataFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"        Deadline deadline \u003d new Deadline(\"Finish iP\", \"22 Aug 2021\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"D | 0 | Finish iP | 22 Aug 2021\", deadline.toDataFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public void stringRepresentation() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        Deadline deadline \u003d new Deadline(\"Finish iP\", \"22 Aug 2021\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"[D][ ] Finish iP (by: 22 Aug 2021)\", deadline.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public void dateParse() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        Deadline deadline \u003d new Deadline(\"Finish iP\", \"2021-11-12\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"D | 0 | Finish iP | Nov 12 2021\", deadline.toDataFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":26}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public void toDataFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"        Event event \u003d new Event(\"Finish iP\", \"22 Aug 2021\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"E | 0 | Finish iP | 22 Aug 2021\", event.toDataFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public void stringRepresentation() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        Event event \u003d new Event(\"Finish iP\", \"22 Aug 2021\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"[E][ ] Finish iP (at: 22 Aug 2021)\", event.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public void dateParse() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        Event event \u003d new Event(\"Finish iP\", \"2021-11-12\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"E | 0 | Finish iP | Nov 12 2021\", event.toDataFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":26}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    public void addTask_todo_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(new Todo(\"Finish iP\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"T | 0 | Finish iP\", tasks.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public void get_todo_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(new Todo(\"Finish iP1\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(new Todo(\"Finish iP2\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(new Todo(\"Finish iP3\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"[T][ ] Finish iP2\", tasks.get(1).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    public void remove_todo_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(new Todo(\"Finish iP1\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(new Todo(\"Finish iP2\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        tasks.add(new Todo(\"Finish iP3\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"[T][ ] Finish iP2\", tasks.get(1).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        tasks.remove(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        assertNotEquals(\"[T][ ] Finish iP2\", tasks.get(1).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    public void size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        TaskList tasks1 \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        tasks1.add(new Todo(\"Finish iP1\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        tasks1.add(new Todo(\"Finish iP2\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"        tasks1.add(new Todo(\"Finish iP3\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(3, tasks1.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        ArrayList\u003cTask\u003e tasks2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        tasks2.add(new Todo(\"Finish iP1\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        tasks2.add(new Todo(\"Finish iP2\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        tasks2.add(new Todo(\"Finish iP3\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(3, tasks2.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":55}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public void statusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"        Task task \u003d new Task(\"New Task\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        Task task \u003d new Task(\"New Task\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        task.setDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":21}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public void toDataFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"        Todo todo \u003d new Todo(\"Finish iP\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"T | 0 | Finish iP\", todo.toDataFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public void stringRepresentation() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        Todo todo \u003d new Todo(\"Finish iP\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(\"[T][ ] Finish iP\", todo.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"todo join sports club","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"done 99999","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"blah","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"deadline scary deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"event nice event","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"delete 3","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"delete -1","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"delete 99999","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"delete funnyWord","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"List","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"find borrow","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"rm -r data","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":4,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"rm -r data","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yongxiangng":3,"-":37}}]
