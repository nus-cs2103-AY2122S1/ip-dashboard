[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"    // Time of deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"    protected String by;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation of deadline task.","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"    enum Command {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"        LIST, DONE, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    private static final String LINE_SEPARATOR \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"        String input;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"        Duke.start();","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"        while (!(input \u003d scanner.nextLine().trim()).equals(\"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"                handleUserInput(input);","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"                Duke.print(e.getMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        Duke.exit();","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        scanner.close();","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     * Handles user input conditionally based on the command.","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    private static void handleUserInput(String input) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        Command command;","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        String[] userInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        if (!userInput[0].equals(userInput[0].toLowerCase())) {","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"                    String.format(\"Please input command with lowercase! Did you mean %s?\", userInput[0].toLowerCase()));","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"            command \u003d Command.valueOf(userInput[0].toUpperCase());","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        switch(command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"            case LIST:","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"                Duke.printTaskList();","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"            case DONE:","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"                Duke.setTaskDone(userInput);","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"            case TODO:","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"                Duke.addTodo(userInput);","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"                Duke.addDeadline(userInput);","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"            case EVENT:","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"                Duke.addEvent(userInput);","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"            case DELETE:","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"                Duke.deleteTask(userInput);","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"            default:","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"     * Message to be printed by Duke when Duke is first started.","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"    private static void start() {","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        Duke.print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"     * Message to be printed by Duke upon exit.","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"    private static void exit() {","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"        Duke.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"     * Prints a formatted message with line separator on top and bottom.","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"     * @param message String to be printed.","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"    private static void print(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"        String indentedMessage \u003d \"\\t \" + message.replaceAll(\"\\n\", \"\\n\\t \") + \"\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"        System.out.println(Duke.LINE_SEPARATOR + indentedMessage + Duke.LINE_SEPARATOR);","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"     * Adds the input to the list of tasks and prints out the input.","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"     * @param input to be added and printed.","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"    public static void addTask(Task input) {","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"        taskList.add(input);","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"        Duke.print(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"                input, taskList.size(), taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"     * Adds a todo task to the list of tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"    public static void addTodo(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"            Duke.addTask(new Todo(userInput[1]));","lastModifiedDate":"2021-08-14"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Todo description cannot be empty\");","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"     * Adds a deadline task to the list of tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-14"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"    public static void addDeadline(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"            String deadlineDescription \u003d userInput[1].split(\" /by \")[0];","lastModifiedDate":"2021-08-14"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"            String by \u003d userInput[1].split(\" /by \")[1];","lastModifiedDate":"2021-08-14"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"            Duke.addTask(new Deadline(deadlineDescription, by));","lastModifiedDate":"2021-08-14"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Deadline description and time by cannot be empty\");","lastModifiedDate":"2021-08-14"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"     * Adds a event task to the list of tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-14"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"    public static void addEvent(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"            String eventDescription \u003d userInput[1].split(\" /at \")[0];","lastModifiedDate":"2021-08-14"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"            String by \u003d userInput[1].split(\" /at \")[1];","lastModifiedDate":"2021-08-14"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"            Duke.addTask(new Event(eventDescription, by));","lastModifiedDate":"2021-08-14"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Event description and time at cannot be empty\");","lastModifiedDate":"2021-08-14"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"     * Deletes a task given it\u0027s index from the list of tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-14"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"    public static void deleteTask(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"            int i \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"            Task task \u003d taskList.get(i - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"            taskList.remove(i - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"            print(String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"                    task, taskList.size(), taskList.size() \u003d\u003d 1","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"                            ? \"task\"","lastModifiedDate":"2021-08-14"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"                            : \"tasks\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Please give a valid number!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":163,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":165,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":166,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":167,"author":{"gitId":"yongxiangng"},"content":"     * Set i-th task to be done and prints confirmation message.","lastModifiedDate":"2021-08-14"},{"lineNumber":168,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"     * @param userInput given by user.","lastModifiedDate":"2021-08-14"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"    private static void setTaskDone(String[] userInput) throws DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":172,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"yongxiangng"},"content":"            int i \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"yongxiangng"},"content":"            Task task \u003d taskList.get(i - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":175,"author":{"gitId":"yongxiangng"},"content":"            task.setDone();","lastModifiedDate":"2021-08-14"},{"lineNumber":176,"author":{"gitId":"yongxiangng"},"content":"            print(String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task.toString()));","lastModifiedDate":"2021-08-14"},{"lineNumber":177,"author":{"gitId":"yongxiangng"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":178,"author":{"gitId":"yongxiangng"},"content":"            throw new DukeException(\"Please give a valid number!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":179,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":180,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":181,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":182,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":183,"author":{"gitId":"yongxiangng"},"content":"     * Prints out the task list formatted and indented.","lastModifiedDate":"2021-08-14"},{"lineNumber":184,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":185,"author":{"gitId":"yongxiangng"},"content":"    private static void printTaskList() {","lastModifiedDate":"2021-08-14"},{"lineNumber":186,"author":{"gitId":"yongxiangng"},"content":"        StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":187,"author":{"gitId":"yongxiangng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":188,"author":{"gitId":"yongxiangng"},"content":"            String taskAsString \u003d i \u003d\u003d taskList.size() - 1","lastModifiedDate":"2021-08-14"},{"lineNumber":189,"author":{"gitId":"yongxiangng"},"content":"                    ? String.format(\"%d.%s\", i + 1, taskList.get(i))","lastModifiedDate":"2021-08-14"},{"lineNumber":190,"author":{"gitId":"yongxiangng"},"content":"                    : String.format(\"%d.%s\\n\", i + 1, taskList.get(i));","lastModifiedDate":"2021-08-14"},{"lineNumber":191,"author":{"gitId":"yongxiangng"},"content":"            tasksString.append(taskAsString);","lastModifiedDate":"2021-08-14"},{"lineNumber":192,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":193,"author":{"gitId":"yongxiangng"},"content":"        Duke.print(tasksString.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yongxiangng":190,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"    // Time which event happen at","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"    protected String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation of event task.","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"     * Gets the icon representation of Task depending if Task is done.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"     * @return X if done, empty otherwise.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"     * Sets task to be done.","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation with status icon and description of task.","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"     * @return string representation of todo task.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"todo join sports club","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"done 99999","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"blah","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"deadline scary deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"event nice event","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"delete 3","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"delete -1","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"delete 99999","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"delete funnyWord","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"List","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yongxiangng":24}}]
